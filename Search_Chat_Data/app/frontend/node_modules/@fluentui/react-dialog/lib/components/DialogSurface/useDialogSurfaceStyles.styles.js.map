{"version":3,"names":["__resetStyles","__styles","mergeClasses","shorthands","tokens","createFocusOutlineStyle","MEDIA_QUERY_BREAKPOINT_SELECTOR","SURFACE_BORDER_WIDTH","SURFACE_PADDING","dialogSurfaceClassNames","root","backdrop","useRootBaseStyle","r","s","useRootStyles","unmounted","entering","entered","E5pizo","Bz10aip","abs64n","idle","exiting","Bkqvd7p","exited","d","useBackdropBaseStyle","useBackdropStyles","nestedDialogBackdrop","De3pzq","useDialogSurfaceStyles_unstable","state","isNestedDialog","transitionStatus","rootBaseStyle","rootStyles","backdropBaseStyle","backdropStyles","className"],"sources":["useDialogSurfaceStyles.styles.js"],"sourcesContent":["import { makeResetStyles, makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nimport { createFocusOutlineStyle } from '@fluentui/react-tabster';\nimport { MEDIA_QUERY_BREAKPOINT_SELECTOR, SURFACE_BORDER_WIDTH, SURFACE_PADDING } from '../../contexts';\nexport const dialogSurfaceClassNames = {\n    root: 'fui-DialogSurface',\n    backdrop: 'fui-DialogSurface__backdrop'\n};\n/**\n * Styles for the root slot\n */ const useRootBaseStyle = makeResetStyles({\n    ...createFocusOutlineStyle(),\n    ...shorthands.inset(0),\n    ...shorthands.padding(0),\n    ...shorthands.padding(SURFACE_PADDING),\n    ...shorthands.margin('auto'),\n    ...shorthands.borderStyle('none'),\n    ...shorthands.overflow('unset'),\n    ...shorthands.border(SURFACE_BORDER_WIDTH, 'solid', tokens.colorTransparentStroke),\n    ...shorthands.borderRadius(tokens.borderRadiusXLarge),\n    contain: 'content',\n    display: 'block',\n    userSelect: 'unset',\n    visibility: 'unset',\n    position: 'fixed',\n    height: 'fit-content',\n    maxWidth: '600px',\n    maxHeight: '100vh',\n    boxSizing: 'border-box',\n    backgroundColor: tokens.colorNeutralBackground1,\n    color: tokens.colorNeutralForeground1,\n    [MEDIA_QUERY_BREAKPOINT_SELECTOR]: {\n        maxWidth: '100vw'\n    },\n    // initial style before animation:\n    opacity: 0,\n    transitionDuration: tokens.durationGentle,\n    transitionProperty: 'opacity, transform, box-shadow',\n    // // FIXME: https://github.com/microsoft/fluentui/issues/29473\n    transitionTimingFunction: tokens.curveDecelerateMid,\n    boxShadow: '0px 0px 0px 0px rgba(0, 0, 0, 0.1)',\n    transform: 'scale(0.85) translateZ(0)'\n});\nconst useRootStyles = makeStyles({\n    unmounted: {},\n    entering: {},\n    entered: {\n        boxShadow: tokens.shadow64,\n        transform: 'scale(1) translateZ(0)',\n        opacity: 1\n    },\n    idle: {},\n    exiting: {\n        transitionTimingFunction: tokens.curveAccelerateMin\n    },\n    exited: {}\n});\n/**\n * Styles for the backdrop slot\n */ const useBackdropBaseStyle = makeResetStyles({\n    ...shorthands.inset('0px'),\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n    position: 'fixed',\n    // initial style before animation:\n    transitionDuration: tokens.durationGentle,\n    transitionTimingFunction: tokens.curveLinear,\n    transitionProperty: 'opacity',\n    willChange: 'opacity',\n    opacity: 0\n});\nconst useBackdropStyles = makeStyles({\n    nestedDialogBackdrop: {\n        backgroundColor: tokens.colorTransparentBackground\n    },\n    unmounted: {},\n    entering: {},\n    entered: {\n        opacity: 1\n    },\n    idle: {},\n    exiting: {\n        transitionTimingFunction: tokens.curveAccelerateMin\n    },\n    exited: {}\n});\n/**\n * Apply styling to the DialogSurface slots based on the state\n */ export const useDialogSurfaceStyles_unstable = (state)=>{\n    const { isNestedDialog, root, backdrop, transitionStatus = 'unmounted' } = state;\n    const rootBaseStyle = useRootBaseStyle();\n    const rootStyles = useRootStyles();\n    const backdropBaseStyle = useBackdropBaseStyle();\n    const backdropStyles = useBackdropStyles();\n    root.className = mergeClasses(dialogSurfaceClassNames.root, rootBaseStyle, rootStyles[transitionStatus], root.className);\n    if (backdrop) {\n        backdrop.className = mergeClasses(dialogSurfaceClassNames.backdrop, backdropBaseStyle, isNestedDialog && backdropStyles.nestedDialogBackdrop, backdropStyles[transitionStatus], backdrop.className);\n    }\n    return state;\n};\n"],"mappings":"AAAA,SAAAA,aAAA,EAAAC,QAAA,EAAsCC,YAAY,EAAEC,UAAU,QAAQ,gBAAgB;AACtF,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,uBAAuB,QAAQ,yBAAyB;AACjE,SAASC,+BAA+B,EAAEC,oBAAoB,EAAEC,eAAe,QAAQ,gBAAgB;AACvG,OAAO,MAAMC,uBAAuB,GAAG;EACnCC,IAAI,EAAE,mBAAmB;EACzBC,QAAQ,EAAE;AACd,CAAC;AACD;AACA;AACA;AAAI,MAAMC,gBAAgB,gBAAGZ,aAAA;EAAAa,CAAA;EAAAC,CAAA;AAAA,CAgC5B,CAAC;AACF,MAAMC,aAAa,gBAAGd,QAAA;EAAAe,SAAA;EAAAC,QAAA;EAAAC,OAAA;IAAAC,MAAA;IAAAC,OAAA;IAAAC,MAAA;EAAA;EAAAC,IAAA;EAAAC,OAAA;IAAAC,OAAA;EAAA;EAAAC,MAAA;AAAA;EAAAC,CAAA;AAAA,CAarB,CAAC;AACF;AACA;AACA;AAAI,MAAMC,oBAAoB,gBAAG3B,aAAA,2gBAUhC,CAAC;AACF,MAAM4B,iBAAiB,gBAAG3B,QAAA;EAAA4B,oBAAA;IAAAC,MAAA;EAAA;EAAAd,SAAA;EAAAC,QAAA;EAAAC,OAAA;IAAAG,MAAA;EAAA;EAAAC,IAAA;EAAAC,OAAA;IAAAC,OAAA;EAAA;EAAAC,MAAA;AAAA;EAAAC,CAAA;AAAA,CAczB,CAAC;AACF;AACA;AACA;AAAI,OAAO,MAAMK,+BAA+B,GAAIC,KAAK,IAAG;EACxD,MAAM;IAAEC,cAAc;IAAEvB,IAAI;IAAEC,QAAQ;IAAEuB,gBAAgB,GAAG;EAAY,CAAC,GAAGF,KAAK;EAChF,MAAMG,aAAa,GAAGvB,gBAAgB,CAAC,CAAC;EACxC,MAAMwB,UAAU,GAAGrB,aAAa,CAAC,CAAC;EAClC,MAAMsB,iBAAiB,GAAGV,oBAAoB,CAAC,CAAC;EAChD,MAAMW,cAAc,GAAGV,iBAAiB,CAAC,CAAC;EAC1ClB,IAAI,CAAC6B,SAAS,GAAGrC,YAAY,CAACO,uBAAuB,CAACC,IAAI,EAAEyB,aAAa,EAAEC,UAAU,CAACF,gBAAgB,CAAC,EAAExB,IAAI,CAAC6B,SAAS,CAAC;EACxH,IAAI5B,QAAQ,EAAE;IACVA,QAAQ,CAAC4B,SAAS,GAAGrC,YAAY,CAACO,uBAAuB,CAACE,QAAQ,EAAE0B,iBAAiB,EAAEJ,cAAc,IAAIK,cAAc,CAACT,oBAAoB,EAAES,cAAc,CAACJ,gBAAgB,CAAC,EAAEvB,QAAQ,CAAC4B,SAAS,CAAC;EACvM;EACA,OAAOP,KAAK;AAChB,CAAC"}