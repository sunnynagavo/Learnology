import * as React from 'react';
import { __resetStyles, __styles, mergeClasses, shorthands } from '@griffel/react';
import { tokens } from '@fluentui/react-theme';
import { drawerCSSVars, drawerDefaultStyles, useDrawerBaseClassNames } from '../../shared/useDrawerBaseStyles.styles';
import { useMotionClassNames } from '@fluentui/react-motion-preview';
export const inlineDrawerClassNames = {
  root: 'fui-InlineDrawer'
};
const useDrawerResetStyles = /*#__PURE__*/__resetStyles("r46ju4x", null, [".r46ju4x{overflow-x:hidden;overflow-y:hidden;width:var(--fui-Drawer--size);max-width:100vw;height:auto;max-height:100vh;box-sizing:border-box;display:flex;flex-direction:column;align-items:flex-start;justify-content:flex-start;background-color:var(--colorNeutralBackground1);color:var(--colorNeutralForeground1);position:relative;}"]);
/**
 * Styles for the root slot
 */
const separatorValues = ['1px', 'solid', tokens.colorNeutralBackground3];
const useDrawerRootStyles = /*#__PURE__*/__styles({
  separatorStart: {
    Bekrc4i: ["f1hqa2wf", "finvdd3"],
    vrafjx: ["fcdblym", "fjik90z"],
    h3c5rm: ["fa8zu9y", "f17e9lqh"]
  },
  separatorEnd: {
    ibv6hh: ["finvdd3", "f1hqa2wf"],
    wvpqe5: ["fjik90z", "fcdblym"],
    zhjwy3: ["f17e9lqh", "fa8zu9y"]
  },
  start: {
    Bz10aip: "f1d8gkik"
  },
  end: {
    Bz10aip: "f1h1g6jt"
  }
}, {
  d: [".f1hqa2wf{border-right-width:1px;}", ".finvdd3{border-left-width:1px;}", ".fcdblym{border-right-style:solid;}", ".fjik90z{border-left-style:solid;}", ".fa8zu9y{border-right-color:var(--colorNeutralBackground3);}", ".f17e9lqh{border-left-color:var(--colorNeutralBackground3);}", ".f1d8gkik{transform:translate3D(calc(var(--fui-Drawer--size) * -1), 0, 0);}", ".f1h1g6jt{transform:translate3D(var(--fui-Drawer--size), 0, 0);}"]
});
const useDrawerMotionStyles = /*#__PURE__*/__styles({
  "default": {
    abs64n: "fk73vx1",
    Bmy1vo4: "f15rjlgw",
    Es3by: "f1blt7p"
  },
  enter: {
    abs64n: "f5p0z4x",
    Bz10aip: "f87uvqx"
  }
}, {
  d: [".fk73vx1{opacity:0;}", ".f15rjlgw{transition-property:opacity,transform;}", ".f1blt7p{will-change:opacity,transform;}", ".f5p0z4x{opacity:1;}", ".f87uvqx{transform:translate3D(0, 0, 0);}"]
});
/**
 * Apply styling to the InlineDrawer slots based on the state
 */
export const useInlineDrawerStyles_unstable = state => {
  const resetStyles = useDrawerResetStyles();
  const baseClassNames = useDrawerBaseClassNames(state);
  const rootStyles = useDrawerRootStyles();
  const motionClassNames = useMotionClassNames(state.motion, useDrawerMotionStyles());
  const separatorClass = React.useMemo(() => {
    if (!state.separator) {
      return undefined;
    }
    return state.position === 'start' ? rootStyles.separatorStart : rootStyles.separatorEnd;
  }, [state.position, state.separator, rootStyles.separatorEnd, rootStyles.separatorStart]);
  state.root.className = mergeClasses(inlineDrawerClassNames.root, resetStyles, baseClassNames, separatorClass, rootStyles[state.position], motionClassNames, state.root.className);
  return state;
};
//# sourceMappingURL=useInlineDrawerStyles.styles.js.map