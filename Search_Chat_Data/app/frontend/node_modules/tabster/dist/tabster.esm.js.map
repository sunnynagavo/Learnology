{"version":3,"file":"tabster.esm.js","sources":["../src/Types.ts","../src/Instance.ts","../src/EventTarget.ts","../src/Utils.ts","../src/AttributeHelpers.ts","../src/Root.ts","../src/Deloser.ts","../src/State/Subscribable.ts","../src/CrossOrigin.ts","../src/Focusable.ts","../src/Keys.ts","../src/State/FocusedElement.ts","../src/Groupper.ts","../src/State/KeyboardNavigation.ts","../src/Modalizer.ts","../src/Mover.ts","../src/MutationEvent.ts","../src/State/ObservedElement.ts","../src/Outline.ts","../src/Uncontrolled.ts","../src/Restorer.ts","../src/Tabster.ts"],"sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const TabsterAttributeName = \"data-tabster\";\nexport const TabsterDummyInputAttributeName = \"data-tabster-dummy\";\nexport const DeloserEventName = \"tabster:deloser\";\nexport const ModalizerActiveEventName = \"tabster:modalizer:active\";\nexport const ModalizerInactiveEventName = \"tabster:modalizer:inactive\";\nexport const ModalizerFocusInEventName = \"tabster:modalizer:focusin\";\nexport const ModalizerFocusOutEventName = \"tabster:modalizer:focusout\";\nexport const ModalizerBeforeFocusOutEventName =\n    \"tabster:modalizer:beforefocusout\";\nexport const MoverEventName = \"tabster:mover\";\nexport const FocusInEventName = \"tabster:focusin\";\nexport const FocusOutEventName = \"tabster:focusout\";\n\nexport const FocusableSelector = [\n    \"a[href]\",\n    \"button:not([disabled])\",\n    \"input:not([disabled])\",\n    \"select:not([disabled])\",\n    \"textarea:not([disabled])\",\n    \"*[tabindex]\",\n    \"*[contenteditable]\",\n].join(\", \");\n\nexport interface TabsterEventWithDetails<D> extends Event {\n    details: D;\n}\n\nexport interface TabsterDOMAttribute {\n    [TabsterAttributeName]: string | undefined;\n}\n\nexport interface TabsterCoreProps {\n    autoRoot?: RootProps;\n    /**\n     * Allows all tab key presses under the tabster root to be controlled by tabster\n     * @default true\n     */\n    controlTab?: boolean;\n    /**\n     * When controlTab is false, Root doesn't have dummy inputs by default.\n     * This option allows to enable dummy inputs on Root.\n     */\n    rootDummyInputs?: boolean;\n    /**\n     * A callback that will be called for the uncontrolled areas when Tabster wants\n     * to know is the uncontrolled element wants complete control (for example it\n     * is trapping focus) and Tabster should not interfere with handling Tab.\n     * If the callback returns undefined, then the default behaviour is to return\n     * the uncontrolled.completely value from the element. If the callback returns\n     * non-undefined value, the callback's value will dominate the element's\n     * uncontrolled.completely value.\n     */\n    checkUncontrolledCompletely?: (\n        element: HTMLElement,\n        completely: boolean // A uncontrolled.completely value from the element.\n    ) => boolean | undefined;\n    /**\n     * @deprecated use checkUncontrolledCompletely.\n     */\n    checkUncontrolledTrappingFocus?: (element: HTMLElement) => boolean;\n    /**\n     * Custom getter for parent elements. Defaults to the default .parentElement call\n     * Currently only used to detect tabster contexts\n     */\n    getParent?(el: Node): Node | null;\n}\n\nexport type GetTabster = () => TabsterCore;\nexport type GetWindow = () => Window;\n\nexport type SubscribableCallback<A, B = undefined> = (\n    val: A,\n    details: B\n) => void;\n\nexport interface Disposable {\n    /** @internal */\n    dispose(): void;\n}\n\nexport interface Subscribable<A, B = undefined> {\n    subscribe(callback: SubscribableCallback<A, B>): void;\n    /** @internal */\n    subscribeFirst(callback: SubscribableCallback<A, B>): void;\n    unsubscribe(callback: SubscribableCallback<A, B>): void;\n}\n\nexport interface KeyboardNavigationState\n    extends Subscribable<boolean>,\n        Disposable {\n    isNavigatingWithKeyboard(): boolean;\n    setNavigatingWithKeyboard(isNavigatingWithKeyboard: boolean): void;\n}\n\nexport interface FocusedElementDetails {\n    relatedTarget?: HTMLElement;\n    isFocusedProgrammatically?: boolean;\n    modalizerId?: string;\n}\n\nexport interface FocusedElementState\n    extends Subscribable<HTMLElement | undefined, FocusedElementDetails>,\n        Disposable {\n    getFocusedElement(): HTMLElement | undefined;\n    getLastFocusedElement(): HTMLElement | undefined;\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean;\n    focusDefault(container: HTMLElement): boolean;\n    /** @internal */\n    getFirstOrLastTabbable(\n        isFirst: boolean,\n        props: Pick<FindFocusableProps, \"container\" | \"ignoreAccessibility\">\n    ): HTMLElement | undefined;\n    focusFirst(props: FindFirstProps): boolean;\n    focusLast(props: FindFirstProps): boolean;\n    resetFocus(container: HTMLElement): boolean;\n}\n\nexport interface WeakHTMLElement<D = undefined> {\n    get(): HTMLElement | undefined;\n    getData(): D | undefined;\n}\n\nexport interface TabsterPart<P> {\n    readonly id: string;\n    getElement(): HTMLElement | undefined;\n    getProps(): P;\n    setProps(props: P): void;\n}\n\nexport interface TabsterPartWithFindNextTabbable {\n    findNextTabbable(\n        current?: HTMLElement,\n        reference?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): NextTabbable | null;\n}\n\nexport interface TabsterPartWithAcceptElement {\n    acceptElement(\n        element: HTMLElement,\n        state: FocusableAcceptElementState\n    ): number | undefined;\n}\n\nexport interface ObservedElementProps {\n    names: string[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    details?: any;\n}\n\nexport interface ObservedElementDetails extends ObservedElementProps {\n    accessibility?: ObservedElementAccesibility;\n}\n\nexport interface ObservedElementAccesibilities {\n    Any: 0;\n    Accessible: 1;\n    Focusable: 2;\n}\nexport type ObservedElementAccesibility =\n    ObservedElementAccesibilities[keyof ObservedElementAccesibilities];\nexport const ObservedElementAccesibilities: ObservedElementAccesibilities = {\n    Any: 0,\n    Accessible: 1,\n    Focusable: 2,\n};\n\nexport interface ObservedElementAsyncRequest<T> {\n    result: Promise<T>;\n    cancel(): void;\n}\n\ninterface ObservedElementAPIInternal {\n    /** @internal */\n    onObservedElementUpdate(element: HTMLElement): void;\n}\n\nexport interface ObservedElementAPI\n    extends Subscribable<HTMLElement, ObservedElementDetails>,\n        Disposable,\n        ObservedElementAPIInternal {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccesibility\n    ): HTMLElement | null;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccesibility\n    ): ObservedElementAsyncRequest<HTMLElement | null>;\n    requestFocus(\n        observedName: string,\n        timeout: number\n    ): ObservedElementAsyncRequest<boolean>;\n}\n\nexport interface CrossOriginElement {\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginSentTo {\n    [id: string]: true;\n}\n\nexport interface CrossOriginTransactionTypes {\n    Bootstrap: 1;\n    FocusElement: 2;\n    State: 3;\n    GetElement: 4;\n    RestoreFocusInDeloser: 5;\n    Ping: 6;\n}\nexport type CrossOriginTransactionType =\n    CrossOriginTransactionTypes[keyof CrossOriginTransactionTypes];\n\nexport interface CrossOriginTransactionData<I, O> {\n    transaction: string;\n    type: CrossOriginTransactionType;\n    isResponse: boolean;\n    timestamp: number;\n    owner: string;\n    sentto: CrossOriginSentTo;\n    timeout?: number;\n    target?: string;\n    beginData?: I;\n    endData?: O;\n}\n\nexport type CrossOriginTransactionSend = (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>\n) => void;\n\nexport interface CrossOriginMessage {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>;\n    send: CrossOriginTransactionSend;\n}\n\nexport interface CrossOriginFocusedElementState\n    extends Subscribable<CrossOriginElement | undefined, FocusedElementDetails>,\n        Disposable {\n    focus(\n        element: CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, ObservedElementProps>,\n        Disposable {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null>;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null>;\n    requestFocus(observedName: string, timeout: number): Promise<boolean>;\n}\n\nexport interface CrossOriginAPI {\n    focusedElement: CrossOriginFocusedElementState;\n    observedElement: CrossOriginObservedElementState;\n\n    setup(\n        sendUp?: CrossOriginTransactionSend | null\n    ): (msg: CrossOriginMessage) => void;\n    isSetUp(): boolean;\n    dispose(): void;\n}\n\nexport interface OutlineProps {\n    areaClass: string;\n    outlineClass: string;\n    outlineColor: string;\n    outlineWidth: number;\n    zIndex: number;\n}\n\nexport interface OutlinedElementProps {\n    isIgnored?: boolean;\n}\n\nexport interface OutlineAPI extends Disposable {\n    setup(props?: Partial<OutlineProps>): void;\n}\n\nexport interface DeloserElementActions {\n    focusDefault: () => boolean;\n    focusFirst: () => boolean;\n    resetFocus: () => boolean;\n    clearHistory: (preserveExisting?: boolean) => void;\n    setSnapshot: (index: number) => void;\n    isActive: () => boolean;\n}\n\nexport interface RestoreFocusOrders {\n    History: 0;\n    DeloserDefault: 1;\n    RootDefault: 2;\n    DeloserFirst: 3;\n    RootFirst: 4;\n}\nexport type RestoreFocusOrder = RestoreFocusOrders[keyof RestoreFocusOrders];\nexport const RestoreFocusOrders: RestoreFocusOrders = {\n    History: 0,\n    DeloserDefault: 1,\n    RootDefault: 2,\n    DeloserFirst: 3,\n    RootFirst: 4,\n};\n\nexport interface DeloserProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n    noSelectorCheck?: boolean;\n}\n\nexport interface Deloser extends TabsterPart<DeloserProps> {\n    readonly uid: string;\n    dispose(): void;\n    isActive(): boolean;\n    setActive(active: boolean): void;\n    getActions(): DeloserElementActions;\n    setSnapshot(index: number): void;\n    focusFirst(): boolean;\n    unshift(element: HTMLElement): void;\n    focusDefault(): boolean;\n    resetFocus(): boolean;\n    findAvailable(): HTMLElement | null;\n    clearHistory(preserveExisting?: boolean): void;\n    customFocusLostHandler(element: HTMLElement): boolean;\n}\n\nexport type DeloserConstructor = (\n    element: HTMLElement,\n    props: DeloserProps\n) => Deloser;\n\ninterface DeloserInterfaceInternal {\n    /** @internal */\n    createDeloser(element: HTMLElement, props: DeloserProps): Deloser;\n}\n\nexport interface DeloserAPI extends DeloserInterfaceInternal, Disposable {\n    getActions(element: HTMLElement): DeloserElementActions | undefined;\n    pause(): void;\n    resume(restore?: boolean): void;\n}\n\nexport interface FocusableProps {\n    isDefault?: boolean;\n    isIgnored?: boolean;\n    /**\n     * Do not determine an element's focusability based on aria-disabled.\n     */\n    ignoreAriaDisabled?: boolean;\n    /**\n     * Exclude element (and all subelements) from Mover navigation.\n     */\n    excludeFromMover?: boolean;\n    /**\n     * Prevents tabster from handling the keydown event\n     */\n    ignoreKeydown?: {\n        Tab?: boolean;\n        Escape?: boolean;\n        Enter?: boolean;\n        ArrowUp?: boolean;\n        ArrowDown?: boolean;\n        ArrowLeft?: boolean;\n        ArrowRight?: boolean;\n        PageUp?: boolean;\n        PageDown?: boolean;\n        Home?: boolean;\n        End?: boolean;\n    };\n}\n\nexport interface FocusableAcceptElementState {\n    container: HTMLElement;\n    modalizerUserId?: string;\n    currentCtx?: TabsterContext;\n    from: HTMLElement;\n    fromCtx?: TabsterContext;\n    isBackward?: boolean;\n    found?: boolean;\n    foundElement?: HTMLElement;\n    foundBackward?: HTMLElement;\n    rejectElementsFrom?: HTMLElement;\n    uncontrolled?: HTMLElement;\n    acceptCondition: (el: HTMLElement) => boolean;\n    hasCustomCondition?: boolean;\n    includeProgrammaticallyFocusable?: boolean;\n    ignoreAccessibility?: boolean;\n    cachedGrouppers: {\n        [id: string]: {\n            isActive: boolean | undefined;\n            first?: HTMLElement | null;\n        };\n    };\n    isFindAll?: boolean;\n    /**\n     * A flag that indicates that some focusable elements were skipped\n     * during the search and the found element is not the one the browser\n     * would normally focus if the user pressed Tab.\n     */\n    skippedFocusable?: boolean;\n}\n\nexport interface FindFocusableProps {\n    /**\n     * The container used for the search.\n     */\n    container: HTMLElement;\n    /**\n     * The elemet to start from.\n     */\n    currentElement?: HTMLElement;\n    /**\n     * See `referenceElement` of GetTabsterContextOptions for description.\n     */\n    referenceElement?: HTMLElement;\n    /**\n     * Includes elements that can be focused programmatically.\n     */\n    includeProgrammaticallyFocusable?: boolean;\n    /**\n     * Ignore accessibility check.\n     */\n    ignoreAccessibility?: boolean;\n    /**\n     * Take active modalizer into account when searching for elements\n     * (the elements out of active modalizer will not be returned).\n     */\n    useActiveModalizer?: boolean;\n    /**\n     * Search withing the specified modality, null for everything outside of modalizers, string within\n     * a specific id, undefined for search within the current application state.\n     */\n    modalizerId?: string | null;\n    /**\n     * If true, find previous element instead of the next one.\n     */\n    isBackward?: boolean;\n    /**\n     * @param el element visited.\n     * @returns if an element should be accepted.\n     */\n    acceptCondition?(el: HTMLElement): boolean;\n    /**\n     * A callback that will be called for every focusable element found during findAll().\n     * If false is returned from this callback, the search will stop.\n     */\n    onElement?: FindElementCallback;\n}\n\nexport interface FindFocusableOutputProps {\n    /**\n     * An output parameter. Will be true after the findNext/findPrev() call if some focusable\n     * elements were skipped during the search and the result element not immediately next\n     * focusable after the currentElement.\n     */\n    outOfDOMOrder?: boolean;\n    /**\n     * An output parameter. Will be true if the found element is uncontrolled.\n     */\n    uncontrolled?: HTMLElement | null;\n}\n\nexport type FindFirstProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindNextProps = Pick<\n    FindFocusableProps,\n    | \"currentElement\"\n    | \"referenceElement\"\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindDefaultProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindAllProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"currentElement\"\n    | \"isBackward\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"acceptCondition\"\n    | \"ignoreAccessibility\"\n    | \"onElement\"\n>;\n\n/**\n * A callback that is called for every found element during search. Returning false stops search.\n */\nexport type FindElementCallback = (element: HTMLElement) => boolean;\n\nexport interface FocusableAPI extends Disposable {\n    getProps(element: HTMLElement): FocusableProps;\n\n    isFocusable(\n        element: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean;\n    isVisible(element: HTMLElement): boolean;\n    isAccessible(element: HTMLElement): boolean;\n    // find* return null when there is no element and undefined when there is an uncontrolled area.\n    findFirst(\n        options: FindFirstProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findLast(\n        options: FindFirstProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findNext(\n        options: FindNextProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findPrev(\n        options: FindNextProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findDefault(\n        options: FindDefaultProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null;\n    /**\n     * @returns All focusables in a given context that satisfy an given condition\n     */\n    findAll(options: FindAllProps): HTMLElement[];\n    findElement(\n        options: FindFocusableProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n}\n\nexport interface DummyInputManager {\n    moveOut: (backwards: boolean) => void;\n    moveOutWithDefaultAction: (backwards: boolean) => void;\n}\n\nexport interface Visibilities {\n    Invisible: 0;\n    PartiallyVisible: 1;\n    Visible: 2;\n}\nexport const Visibilities: Visibilities = {\n    Invisible: 0,\n    PartiallyVisible: 1,\n    Visible: 2,\n};\nexport type Visibility = Visibilities[keyof Visibilities];\n\nexport interface MoverElementState {\n    isCurrent: boolean | undefined; // Tri-state bool. Undefined when there is no current in the container.\n    visibility: Visibility;\n}\n\nexport interface MoverDirections {\n    Both: 0; // Default, both left/up keys move to the previous, right/down move to the next.\n    Vertical: 1; // Only up/down arrows move to the next/previous.\n    Horizontal: 2; // Only left/right arrows move to the next/previous.\n    Grid: 3; // Two-dimentional movement depending on the visual placement.\n    GridLinear: 4; // Two-dimentional movement depending on the visual placement. Allows linear movement.\n}\n\nexport const RestorerTypes = {\n    Source: 0,\n    Target: 1,\n} as const;\n\nexport type RestorerType = typeof RestorerTypes[keyof typeof RestorerTypes];\n\nexport const MoverDirections: MoverDirections = {\n    Both: 0,\n    Vertical: 1,\n    Horizontal: 2,\n    Grid: 3,\n    GridLinear: 4,\n};\nexport type MoverDirection = MoverDirections[keyof MoverDirections];\n\nexport type NextTabbable = {\n    element: HTMLElement | null | undefined;\n    uncontrolled?: HTMLElement | null;\n    outOfDOMOrder?: boolean;\n};\n\nexport interface MoverProps {\n    direction?: MoverDirection;\n    memorizeCurrent?: boolean;\n    tabbable?: boolean;\n    /**\n     * Whether to allow cyclic navigation in the mover\n     * Can only be applied if navigationType is MoverKeys.Arrows\n     *\n     * @defaultValue false\n     */\n    cyclic?: boolean;\n    /**\n     * In case we need a rich state of the elements inside a Mover,\n     * we can track it. It takes extra resourses and might affect\n     * performance when a Mover has many elements inside, so make sure\n     * you use this prop when it is really needed.\n     */\n    trackState?: boolean;\n    /**\n     * When set to Visibility.Visible or Visibility.PartiallyVisible,\n     * uses the visibility part of the trackState prop to be able to\n     * go to first/last visible element (instead of first/last focusable\n     * element in DOM) when tabbing from outside of the mover.\n     */\n    visibilityAware?: Visibility;\n    /**\n     * When true, Mover will try to locate a focusable with Focusable.isDefault\n     * property as a prioritized element to focus. True by default.\n     */\n    hasDefault?: boolean;\n    /**\n     * A value between 0 and 1 that specifies the tolerance allowed\n     * when testing for visibility.\n     *\n     * @example\n     * an element of height 100px has 10px that are above the viewport\n     * hidden by scroll. This element is a valid visible element to focus.\n     *\n     * @default 0.8\n     */\n    visibilityTolerance?: number;\n}\n\nexport type MoverEvent = TabsterEventWithDetails<MoverElementState>;\n\nexport interface Mover\n    extends TabsterPart<MoverProps>,\n        TabsterPartWithFindNextTabbable,\n        TabsterPartWithAcceptElement {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    readonly visibilityTolerance: NonNullable<\n        MoverProps[\"visibilityTolerance\"]\n    >;\n    dispose(): void;\n    setCurrent(element: HTMLElement | undefined): void;\n    getCurrent(): HTMLElement | null;\n    getState(element: HTMLElement): MoverElementState | undefined;\n}\n\nexport type MoverConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: MoverProps\n) => Mover;\n\ninterface MoverAPIInternal {\n    /** @internal */\n    createMover(\n        element: HTMLElement,\n        props: MoverProps,\n        sys: SysProps | undefined\n    ): Mover;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MoverAPI extends MoverAPIInternal, Disposable {}\n\nexport interface GroupperTabbabilities {\n    Unlimited: 0;\n    Limited: 1; // The tabbability is limited to the container and explicit Enter is needed to go inside.\n    LimitedTrapFocus: 2; // The focus is limited as above, plus trapped when inside.\n}\nexport const GroupperTabbabilities: GroupperTabbabilities = {\n    Unlimited: 0,\n    Limited: 1,\n    LimitedTrapFocus: 2,\n};\nexport type GroupperTabbability =\n    GroupperTabbabilities[keyof GroupperTabbabilities];\n\nexport interface GroupperProps {\n    tabbability?: GroupperTabbability;\n    delegated?: boolean; // This allows to tweak the groupper behaviour for the cases when\n    // the groupper container is not focusable and groupper has Limited or LimitedTrapFocus\n    // tabbability. By default, the groupper will automatically become active once the focus\n    // goes to first focusable element inside the groupper during tabbing. When true, the\n    // groupper will become active only after Enter is pressed on first focusable element\n    // inside the groupper.\n}\n\nexport interface Groupper\n    extends TabsterPart<GroupperProps>,\n        TabsterPartWithFindNextTabbable,\n        TabsterPartWithAcceptElement {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    dispose(): void;\n    makeTabbable(isUnlimited: boolean): void;\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined; // Tri-state boolean, undefined when parent is not active, false when parent is active.\n    setFirst(element: HTMLElement | undefined): void;\n    getFirst(orContainer: boolean): HTMLElement | undefined;\n}\n\nexport type GroupperConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: GroupperProps\n) => Groupper;\n\nexport interface GroupperAPIInternal {\n    /** @internal */\n    createGroupper(\n        element: HTMLElement,\n        props: GroupperProps,\n        sys: SysProps | undefined\n    ): Groupper;\n    /** @internal */\n    handleKeyPress(\n        element: HTMLElement,\n        event: KeyboardEvent,\n        noGoUp?: boolean\n    ): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface GroupperAPI extends GroupperAPIInternal, Disposable {}\n\nexport interface GroupperAPIInternal {\n    forgetCurrentGrouppers(): void;\n}\n\nexport interface ModalizerProps {\n    id: string;\n    isOthersAccessible?: boolean;\n    isAlwaysAccessible?: boolean;\n    isNoFocusFirst?: boolean;\n    isNoFocusDefault?: boolean;\n    /** A focus trap variant, keeps focus inside the modal when tabbing */\n    isTrapped?: boolean;\n}\n\nexport type ModalizerEventName =\n    | typeof ModalizerActiveEventName\n    | typeof ModalizerInactiveEventName\n    | typeof ModalizerBeforeFocusOutEventName\n    | typeof ModalizerFocusInEventName\n    | typeof ModalizerFocusOutEventName;\n\nexport type ModalizerEventDetails = {\n    id: string;\n    element: HTMLElement;\n    eventName: ModalizerEventName;\n};\n\nexport type ModalizerEvent = TabsterEventWithDetails<ModalizerEventDetails>;\n\nexport interface Modalizer\n    extends TabsterPart<ModalizerProps>,\n        TabsterPartWithFindNextTabbable {\n    readonly userId: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    /**\n     * @returns - Whether the element is inside the modalizer\n     */\n    contains(element: HTMLElement): boolean;\n    dispose(): void;\n    isActive(): boolean;\n    makeActive(isActive: boolean): void;\n    focused(noIncrement?: boolean): number;\n    triggerFocusEvent(\n        eventName: ModalizerEventName,\n        allElements: boolean\n    ): boolean;\n}\n\nexport type ModalizerConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: ModalizerProps\n) => Modalizer;\n\nexport interface RootProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n}\n\nexport interface Root extends TabsterPart<RootProps> {\n    /**@internal*/\n    addDummyInputs(): void;\n\n    readonly uid: string;\n    dispose(): void;\n    moveOutWithDefaultAction(backwards: boolean): void;\n}\n\nexport type RootConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: RootProps\n) => Root;\n\nexport interface SysDummyInputsPositions {\n    Auto: 0; // Tabster will place dummy inputs depending on the container tag name and on the default behaviour.\n    Inside: 1; // Tabster will always place dummy inputs inside the container.\n    Outside: 2; // Tabster will always place dummy inputs outside of the container.\n}\nexport const SysDummyInputsPositions: SysDummyInputsPositions = {\n    Auto: 0,\n    Inside: 1,\n    Outside: 2,\n};\nexport type SysDummyInputsPosition =\n    SysDummyInputsPositions[keyof SysDummyInputsPositions];\n/**\n * Ability to fine-tune Tabster internal behaviour in rare cases of need.\n * Normally, should not be used. A deep understanding of the intention and the effect\n * is required.\n */\nexport interface SysProps {\n    /**\n     * Force dummy input position outside or inside of the element.\n     * By default (when undefined), the position is determined dynamically\n     * (for example inside for <li> elements and outside for <table> elements,\n     * plus a default Groupper/Mover/Modalizer implementation position).\n     * Setting to true will force the dummy inputs to be always outside of the element,\n     * setting to false will force the dummy inputs to be always inside.\n     */\n    dummyInputsPosition?: SysDummyInputsPosition;\n}\n\nexport interface GetTabsterContextOptions {\n    /**\n     * Should visit **all** element ancestors to verify if `dir='rtl'` is set\n     */\n    checkRtl?: boolean;\n    /**\n     * The element to start computing the context from. Useful when dealing\n     * with nested structures. For example, if we have an element inside a groupper\n     * inside another groupper, the `groupper` prop in this element's contexts will\n     * be the inner groupper, but when we pass the inner groupper's parent element\n     * as `referenceElement`, the context groupper will be the outer one. Having\n     * this option simplifies searching for the next tabbable element in the\n     * environment of nested movers and grouppers.\n     */\n    referenceElement?: HTMLElement;\n}\n\nexport type TabsterContextMoverGroupper =\n    | { isMover: true; mover: Mover }\n    | { isMover: false; groupper: Groupper };\n\nexport interface TabsterContext {\n    root: Root;\n    modalizer?: Modalizer;\n    groupper?: Groupper;\n    mover?: Mover;\n    groupperBeforeMover?: boolean;\n    modalizerInGroupper?: Groupper;\n    /**\n     * Whether `dir='rtl'` is set on an ancestor\n     */\n    rtl?: boolean;\n    excludedFromMover?: boolean;\n    uncontrolled?: HTMLElement | null;\n    ignoreKeydown: (e: KeyboardEvent) => boolean;\n}\n\nexport interface RootFocusEventDetails {\n    element: HTMLElement;\n}\n\ninterface RootAPIInternal {\n    /**@internal*/\n    createRoot(\n        element: HTMLElement,\n        props: RootProps,\n        sys: SysProps | undefined\n    ): Root;\n    /**@internal*/\n    onRoot(root: Root, removed?: boolean): void;\n    /**@internal*/\n    addDummyInputs(): void;\n}\n\nexport interface RootAPI extends Disposable, RootAPIInternal {\n    eventTarget: EventTarget;\n}\n\nexport interface UncontrolledAPI {\n    isUncontrolledCompletely(\n        element: HTMLElement,\n        completely: boolean\n    ): boolean;\n}\n\ninterface ModalizerAPIInternal extends TabsterPartWithAcceptElement {\n    /** @internal */\n    activeId: string | undefined; // currently active Modalizer user id.\n    /** @internal */\n    currentIsOthersAccessible: boolean | undefined; // isOthersAccessible value of the currently active Modalizer.\n    /** @internal */\n    activeElements: WeakHTMLElement<HTMLElement>[];\n    /** @internal */\n    createModalizer(\n        element: HTMLElement,\n        props: ModalizerProps,\n        sys: SysProps | undefined\n    ): Modalizer;\n    /**\n     * Sets active modalizers.\n     * When active, everything outside of the modalizers with the specific user\n     * defined id gets `aria-hidden`.\n     *\n     * @param userId user defined identifier or undefined (if nothing is modal).\n     */\n    /** @internal */\n    setActive(modalizer: Modalizer | undefined): void;\n    /** @internal */\n    hiddenUpdate(): void;\n    /** @internal */\n    isAugmented(element: HTMLElement): boolean;\n}\n\nexport interface ModalizerAPI extends ModalizerAPIInternal, Disposable {\n    /**\n     * Activates a Modalizer and focuses the first or default element within\n     *\n     * @param elementFromModalizer An element that belongs to a Modalizer\n     * @param noFocusFirst Do not focus on the first element in the Modalizer\n     * @param noFocusDefault Do not focus the default element in the Modalizre\n     */\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean;\n}\n\ninterface RestorerAPIInternal {\n    /** @internal */\n    createRestorer(element: HTMLElement, props: RestorerProps): Restorer;\n}\n\nexport interface RestorerAPI extends RestorerAPIInternal, Disposable {}\n\nexport interface Restorer extends Disposable, TabsterPart<RestorerProps> {}\n/**\n * A signature for the accessibleCheck callback from getModalizer().\n * It is called when active Modalizer sets aria-hidden on elements outsidef of it.\n *\n * @param element The element that is about to receive aria-hidden.\n * @param activeModalizerElements The container elements of the active modalizer.\n * @returns true if the element should remain accessible and should not receive\n * aria-hidden.\n */\nexport type ModalizerElementAccessibleCheck = (\n    element: HTMLElement,\n    activeModalizerElements?: HTMLElement[]\n) => boolean;\n\nexport interface UncontrolledProps {\n    // Normally, even uncontrolled areas should not be completely uncontrolled\n    // to be able to interact with the rest of the application properly.\n    // For example, if an uncontrolled area implements something like\n    // roving tabindex, it should be uncontrolled inside the area, but it\n    // still should be able to be an organic part of the application.\n    // However, in some cases, third party component might want to be able\n    // to gain full control of the area, for example, if it implements\n    // some custom trap focus logic.\n    // `completely` indicates that uncontrolled area must gain full control over\n    // Tab handling. If not set, Tabster might still handle Tab in the\n    // uncontrolled area, when, for example, there is an inactive Modalizer\n    // (that needs to be skipped) after the last focusable element of the\n    // uncontrolled area.\n    // WARNING: Use with caution, as it might break the normal keyboard navigation\n    // between the uncontrolled area and the rest of the application.\n    completely?: boolean;\n}\n\nexport interface DeloserOnElement {\n    deloser: Deloser;\n}\n\nexport interface RootOnElement {\n    root: Root;\n}\n\nexport interface ModalizerOnElement {\n    modalizer: Modalizer;\n}\n\nexport interface RestorerOnElement {\n    restorer: Restorer;\n}\n\nexport interface FocusableOnElement {\n    focusable: FocusableProps;\n}\n\nexport interface MoverOnElement {\n    mover: Mover;\n}\n\nexport interface GroupperOnElement {\n    groupper: Groupper;\n}\n\nexport interface UncontrolledOnElement {\n    uncontrolled: UncontrolledProps;\n}\n\nexport interface ObservedOnElement {\n    observed: ObservedElementProps;\n}\n\nexport interface OutlineOnElement {\n    outline: OutlinedElementProps;\n}\n\nexport interface SysOnElement {\n    sys: SysProps;\n}\n\nexport interface RestorerProps {\n    type: RestorerType;\n}\n\nexport type TabsterAttributeProps = Partial<{\n    deloser: DeloserProps;\n    root: RootProps;\n    uncontrolled: UncontrolledProps;\n    modalizer: ModalizerProps;\n    focusable: FocusableProps;\n    groupper: GroupperProps;\n    mover: MoverProps;\n    observed: ObservedElementProps;\n    outline: OutlinedElementProps;\n    sys: SysProps;\n    restorer: RestorerProps;\n}>;\n\nexport interface TabsterAttributeOnElement {\n    string: string;\n    object: TabsterAttributeProps;\n}\n\nexport interface TabsterAugmentedAttributes {\n    [name: string]: string | null;\n}\n\nexport type TabsterOnElement = Partial<\n    RootOnElement &\n        DeloserOnElement &\n        ModalizerOnElement &\n        FocusableOnElement &\n        MoverOnElement &\n        GroupperOnElement &\n        ObservedOnElement &\n        OutlineOnElement &\n        UncontrolledOnElement &\n        SysOnElement &\n        RestorerOnElement\n>;\n\nexport interface OutlineElements {\n    container: HTMLDivElement;\n    left: HTMLDivElement;\n    top: HTMLDivElement;\n    right: HTMLDivElement;\n    bottom: HTMLDivElement;\n}\n\nexport interface TabsterElementStorageEntry {\n    tabster?: TabsterOnElement;\n    attr?: TabsterAttributeOnElement;\n    aug?: TabsterAugmentedAttributes;\n}\n\nexport interface TabsterElementStorage {\n    [uid: string]: TabsterElementStorageEntry;\n}\n\nexport type DisposeFunc = () => void;\n\nexport interface InternalAPI {\n    stopObserver(): void;\n    resumeObserver(syncState: boolean): void;\n}\n\nexport interface DummyInputObserver {\n    add(dummy: HTMLElement, callback: () => void): void;\n    remove(dummy: HTMLElement): void;\n    dispose(): void;\n    domChanged?(parent: HTMLElement): void;\n    updatePositions(\n        compute: (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    ): void;\n}\n\ninterface TabsterCoreInternal {\n    /** @internal */\n    groupper?: GroupperAPI;\n    /** @internal */\n    mover?: MoverAPI;\n    /** @internal */\n    outline?: OutlineAPI;\n    /** @internal */\n    deloser?: DeloserAPI;\n    /** @internal */\n    modalizer?: ModalizerAPI;\n    /** @internal */\n    observedElement?: ObservedElementAPI;\n    /** @internal */\n    crossOrigin?: CrossOriginAPI;\n    /** @internal */\n    internal: InternalAPI;\n    /** @internal */\n    restorer?: RestorerAPI;\n\n    /** @internal */\n    _dummyObserver: DummyInputObserver;\n\n    // The version of the tabster package this instance is on\n    /** @internal */\n    _version: string;\n\n    // No operation flag for the debugging purposes\n    /** @internal */\n    _noop: boolean;\n\n    /** @internal */\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): TabsterElementStorageEntry | undefined;\n    /** @internal */\n    getWindow: GetWindow;\n\n    /** @internal */\n    createTabster(noRefCount?: boolean, props?: TabsterCoreProps): Tabster;\n    /** @internal */\n    disposeTabster(wrapper: Tabster, allInstances?: boolean): void;\n    /** @internal */\n    forceCleanup(): void;\n\n    /** @internal */\n    queueInit(callback: () => void): void;\n    /** @internal */\n    drainInitQueue(): void;\n    /** @internal */\n    getParent: (el: Node) => Node | null;\n}\n\nexport interface Tabster {\n    keyboardNavigation: KeyboardNavigationState;\n    focusedElement: FocusedElementState;\n    focusable: FocusableAPI;\n    root: RootAPI;\n    uncontrolled: UncontrolledAPI;\n\n    /** @internal */\n    core: TabsterCore;\n}\n\nexport interface TabsterCore\n    extends Pick<TabsterCoreProps, \"controlTab\" | \"rootDummyInputs\">,\n        Disposable,\n        TabsterCoreInternal,\n        Omit<Tabster, \"core\"> {}\n\nexport interface TabsterCompat {\n    attributeTransform?: <P>(old: P) => TabsterAttributeProps;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\nexport function getTabsterOnElement(\n    tabster: Types.TabsterCore,\n    element: HTMLElement\n): Types.TabsterOnElement | undefined {\n    return tabster.storageEntry(element)?.tabster;\n}\n\nexport function updateTabsterByAttribute(\n    tabster: Types.TabsterCore,\n    element: HTMLElement,\n    dispose?: boolean\n): void {\n    const newAttrValue =\n        dispose || tabster._noop\n            ? undefined\n            : element.getAttribute(Types.TabsterAttributeName);\n\n    let entry = tabster.storageEntry(element);\n    let newAttr: Types.TabsterAttributeOnElement | undefined;\n\n    if (newAttrValue) {\n        if (newAttrValue !== entry?.attr?.string) {\n            try {\n                const newValue = JSON.parse(\n                    newAttrValue\n                ) as Types.TabsterAttributeProps;\n\n                if (typeof newValue !== \"object\") {\n                    throw new Error(\n                        `Value is not a JSON object, got '${newAttrValue}'.`\n                    );\n                }\n\n                newAttr = {\n                    string: newAttrValue,\n                    object: newValue,\n                };\n            } catch (e) {\n                if (__DEV__) {\n                    console.error(\n                        `data-tabster attribute error: ${e}`,\n                        element\n                    );\n                }\n            }\n        } else {\n            return;\n        }\n    } else if (!entry) {\n        return;\n    }\n\n    if (!entry) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        entry = tabster.storageEntry(element, true)!;\n    }\n\n    if (!entry.tabster) {\n        entry.tabster = {};\n    }\n\n    const tabsterOnElement = entry.tabster || {};\n    const oldTabsterProps = entry.attr?.object || {};\n    const newTabsterProps = newAttr?.object || {};\n\n    for (const key of Object.keys(\n        oldTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        if (!newTabsterProps[key]) {\n            if (key === \"root\") {\n                const root = tabsterOnElement[key];\n\n                if (root) {\n                    tabster.root.onRoot(root, true);\n                }\n            }\n\n            switch (key) {\n                case \"deloser\":\n                case \"root\":\n                case \"groupper\":\n                case \"modalizer\":\n                case \"restorer\":\n                case \"mover\":\n                    // eslint-disable-next-line no-case-declarations\n                    const part = tabsterOnElement[key];\n                    if (part) {\n                        part.dispose();\n                        delete tabsterOnElement[key];\n                    }\n                    break;\n\n                case \"observed\":\n                    delete tabsterOnElement[key];\n                    if (tabster.observedElement) {\n                        tabster.observedElement.onObservedElementUpdate(\n                            element\n                        );\n                    }\n                    break;\n\n                case \"focusable\":\n                case \"outline\":\n                case \"uncontrolled\":\n                case \"sys\":\n                    delete tabsterOnElement[key];\n                    break;\n            }\n        }\n    }\n\n    for (const key of Object.keys(\n        newTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        const sys = newTabsterProps.sys;\n\n        switch (key) {\n            case \"deloser\":\n                if (tabsterOnElement.deloser) {\n                    tabsterOnElement.deloser.setProps(\n                        newTabsterProps.deloser as Types.DeloserProps\n                    );\n                } else {\n                    if (tabster.deloser) {\n                        tabsterOnElement.deloser =\n                            tabster.deloser.createDeloser(\n                                element,\n                                newTabsterProps.deloser as Types.DeloserProps\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Deloser API used before initialization, please call `getDeloser()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"root\":\n                if (tabsterOnElement.root) {\n                    tabsterOnElement.root.setProps(\n                        newTabsterProps.root as Types.RootProps\n                    );\n                } else {\n                    tabsterOnElement.root = tabster.root.createRoot(\n                        element,\n                        newTabsterProps.root as Types.RootProps,\n                        sys\n                    );\n                }\n                tabster.root.onRoot(tabsterOnElement.root);\n                break;\n\n            case \"modalizer\":\n                if (tabsterOnElement.modalizer) {\n                    tabsterOnElement.modalizer.setProps(\n                        newTabsterProps.modalizer as Types.ModalizerProps\n                    );\n                } else {\n                    if (tabster.modalizer) {\n                        tabsterOnElement.modalizer =\n                            tabster.modalizer.createModalizer(\n                                element,\n                                newTabsterProps.modalizer as Types.ModalizerProps,\n                                sys\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Modalizer API used before initialization, please call `getModalizer()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"restorer\":\n                if (tabsterOnElement.restorer) {\n                    tabsterOnElement.restorer.setProps(\n                        newTabsterProps.restorer as Types.RestorerProps\n                    );\n                } else {\n                    if (tabster.restorer) {\n                        if (newTabsterProps.restorer) {\n                            tabsterOnElement.restorer =\n                                tabster.restorer.createRestorer(\n                                    element,\n                                    newTabsterProps.restorer\n                                );\n                        }\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Restorer API used before initialization, please call `getRestorer()`\"\n                        );\n                    }\n                }\n\n                break;\n\n            case \"focusable\":\n                tabsterOnElement.focusable = newTabsterProps.focusable;\n                break;\n\n            case \"groupper\":\n                if (tabsterOnElement.groupper) {\n                    tabsterOnElement.groupper.setProps(\n                        newTabsterProps.groupper as Types.GroupperProps\n                    );\n                } else {\n                    if (tabster.groupper) {\n                        tabsterOnElement.groupper =\n                            tabster.groupper.createGroupper(\n                                element,\n                                newTabsterProps.groupper as Types.GroupperProps,\n                                sys\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Groupper API used before initialization, please call `getGroupper()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"mover\":\n                if (tabsterOnElement.mover) {\n                    tabsterOnElement.mover.setProps(\n                        newTabsterProps.mover as Types.MoverProps\n                    );\n                } else {\n                    if (tabster.mover) {\n                        tabsterOnElement.mover = tabster.mover.createMover(\n                            element,\n                            newTabsterProps.mover as Types.MoverProps,\n                            sys\n                        );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Mover API used before initialization, please call `getMover()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"observed\":\n                if (tabster.observedElement) {\n                    tabsterOnElement.observed = newTabsterProps.observed;\n                    tabster.observedElement.onObservedElementUpdate(element);\n                } else if (__DEV__) {\n                    console.error(\n                        \"ObservedElement API used before initialization, please call `getObservedElement()`\"\n                    );\n                }\n                break;\n\n            case \"uncontrolled\":\n                tabsterOnElement.uncontrolled = newTabsterProps.uncontrolled;\n                break;\n\n            case \"outline\":\n                if (tabster.outline) {\n                    tabsterOnElement.outline = newTabsterProps.outline;\n                } else if (__DEV__) {\n                    console.error(\n                        \"Outline API used before initialization, please call `getOutline()`\"\n                    );\n                }\n                break;\n\n            case \"sys\":\n                tabsterOnElement.sys = newTabsterProps.sys;\n                break;\n\n            default:\n                console.error(\n                    `Unknown key '${key}' in data-tabster attribute value.`\n                );\n        }\n    }\n\n    if (newAttr) {\n        entry.attr = newAttr;\n    } else {\n        if (Object.keys(tabsterOnElement).length === 0) {\n            delete entry.tabster;\n            delete entry.attr;\n        }\n        tabster.storageEntry(element, false);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport type { GetWindow } from \"./Types\";\n\nexport function createEventTarget(getWindow: GetWindow): EventTarget {\n    const global = getWindow() as unknown as typeof globalThis;\n\n    try {\n        if (global.EventTarget) {\n            return new global.EventTarget();\n        }\n    } catch (error) {\n        // thrown if EventTarget is not constructable or doesn't exit\n        if (!(error instanceof TypeError)) {\n            throw error;\n        }\n    }\n\n    return global.document.createElement(\"div\");\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport * as Types from \"./Types\";\nimport { GetWindow, Visibilities, Visibility } from \"./Types\";\n\ninterface HTMLElementWithBoundingRectCacheId extends HTMLElement {\n    __tabsterCacheId?: string;\n}\n\ninterface FocusedElementWithIgnoreFlag extends HTMLElement {\n    __shouldIgnoreFocus: boolean;\n}\n\nexport interface WindowWithUID extends Window {\n    __tabsterCrossOriginWindowUID?: string;\n}\n\nexport interface HTMLElementWithUID extends HTMLElement {\n    __tabsterElementUID?: string;\n}\n\nexport interface HTMLElementWithDummyContainer extends HTMLElement {\n    __tabsterDummyContainer?: WeakHTMLElement;\n}\n\nexport interface TabsterDOMRect {\n    bottom: number;\n    left: number;\n    right: number;\n    top: number;\n}\n\nexport interface InstanceContext {\n    elementByUId: { [uid: string]: WeakHTMLElement<HTMLElementWithUID> };\n    basics: InternalBasics;\n    WeakRef?: WeakRefConstructor;\n    containerBoundingRectCache: {\n        [id: string]: {\n            rect: TabsterDOMRect;\n            element: HTMLElementWithBoundingRectCacheId;\n        };\n    };\n    lastContainerBoundingRectCacheId: number;\n    containerBoundingRectCacheTimer?: number;\n    fakeWeakRefs: TabsterWeakRef<unknown>[];\n    fakeWeakRefsTimer?: number;\n    fakeWeakRefsStarted: boolean;\n}\n\nlet _isBrokenIE11: boolean;\n\nconst _DOMRect =\n    typeof DOMRect !== \"undefined\"\n        ? DOMRect\n        : class {\n              readonly bottom: number;\n              readonly left: number;\n              readonly right: number;\n              readonly top: number;\n\n              constructor(\n                  x?: number,\n                  y?: number,\n                  width?: number,\n                  height?: number\n              ) {\n                  this.left = x || 0;\n                  this.top = y || 0;\n                  this.right = (x || 0) + (width || 0);\n                  this.bottom = (y || 0) + (height || 0);\n              }\n          };\n\nlet _uidCounter = 0;\n\ntry {\n    // IE11 only accepts `filter` argument as a function (not object with the `acceptNode`\n    // property as the docs define). Also `entityReferenceExpansion` argument is not\n    // optional. And it throws exception when the above arguments aren't there.\n    document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT);\n    _isBrokenIE11 = false;\n} catch (e) {\n    _isBrokenIE11 = true;\n}\n\nconst _updateDummyInputsTimeout = 100;\n\ninterface WindowWithUtilsConext extends Window {\n    __tabsterInstanceContext?: InstanceContext;\n    Promise: PromiseConstructor;\n    WeakRef: WeakRefConstructor;\n}\n\nexport function getInstanceContext(getWindow: GetWindow): InstanceContext {\n    const win = getWindow() as WindowWithUtilsConext;\n\n    let ctx = win.__tabsterInstanceContext;\n\n    if (!ctx) {\n        ctx = {\n            elementByUId: {},\n            basics: {\n                Promise: win.Promise || undefined,\n                WeakRef: win.WeakRef || undefined,\n            },\n            containerBoundingRectCache: {},\n            lastContainerBoundingRectCacheId: 0,\n            fakeWeakRefs: [],\n            fakeWeakRefsStarted: false,\n        };\n\n        win.__tabsterInstanceContext = ctx;\n    }\n\n    return ctx;\n}\n\nexport function disposeInstanceContext(win: Window): void {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n\n    if (ctx) {\n        ctx.elementByUId = {};\n\n        delete ctx.WeakRef;\n\n        ctx.containerBoundingRectCache = {};\n\n        if (ctx.containerBoundingRectCacheTimer) {\n            win.clearTimeout(ctx.containerBoundingRectCacheTimer);\n        }\n\n        if (ctx.fakeWeakRefsTimer) {\n            win.clearTimeout(ctx.fakeWeakRefsTimer);\n        }\n\n        ctx.fakeWeakRefs = [];\n\n        delete (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    }\n}\n\nexport function createWeakMap<K extends object, V>(win: Window): WeakMap<K, V> {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    return new (ctx?.basics.WeakMap || WeakMap)();\n}\n\nexport function hasSubFocusable(element: HTMLElement): boolean {\n    return !!element.querySelector(Types.FocusableSelector);\n}\n\ninterface TabsterWeakRef<T> {\n    deref(): T | undefined;\n}\n\nclass FakeWeakRef<T extends HTMLElement = HTMLElement>\n    implements TabsterWeakRef<T>\n{\n    private _target: T | undefined;\n\n    constructor(target: T) {\n        this._target = target;\n    }\n\n    deref(): T | undefined {\n        return this._target;\n    }\n\n    static cleanup(fwr: FakeWeakRef, forceRemove?: boolean): boolean {\n        if (!fwr._target) {\n            return true;\n        }\n\n        if (\n            forceRemove ||\n            !documentContains(fwr._target.ownerDocument, fwr._target)\n        ) {\n            delete fwr._target;\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport class WeakHTMLElement<T extends HTMLElement = HTMLElement, D = undefined>\n    implements Types.WeakHTMLElement<D>\n{\n    private _ref: TabsterWeakRef<T> | undefined;\n    private _data: D | undefined;\n\n    constructor(getWindow: GetWindow, element: T, data?: D) {\n        const context = getInstanceContext(getWindow);\n\n        let ref: TabsterWeakRef<T>;\n        if (context.WeakRef) {\n            ref = new context.WeakRef(element);\n        } else {\n            ref = new FakeWeakRef(element);\n            context.fakeWeakRefs.push(ref);\n        }\n\n        this._ref = ref;\n        this._data = data;\n    }\n\n    get(): T | undefined {\n        const ref = this._ref;\n        let element: T | undefined;\n\n        if (ref) {\n            element = ref.deref();\n\n            if (!element) {\n                delete this._ref;\n            }\n        }\n\n        return element;\n    }\n\n    getData(): D | undefined {\n        return this._data;\n    }\n}\n\nexport function cleanupFakeWeakRefs(\n    getWindow: GetWindow,\n    forceRemove?: boolean\n): void {\n    const context = getInstanceContext(getWindow);\n    context.fakeWeakRefs = context.fakeWeakRefs.filter(\n        (e) => !FakeWeakRef.cleanup(e as FakeWeakRef, forceRemove)\n    );\n}\n\nexport function startFakeWeakRefsCleanup(getWindow: GetWindow): void {\n    const context = getInstanceContext(getWindow);\n\n    if (!context.fakeWeakRefsStarted) {\n        context.fakeWeakRefsStarted = true;\n        context.WeakRef = getWeakRef(context);\n    }\n\n    if (!context.fakeWeakRefsTimer) {\n        context.fakeWeakRefsTimer = getWindow().setTimeout(() => {\n            context.fakeWeakRefsTimer = undefined;\n            cleanupFakeWeakRefs(getWindow);\n            startFakeWeakRefsCleanup(getWindow);\n        }, 2 * 60 * 1000); // 2 minutes.\n    }\n}\n\nexport function stopFakeWeakRefsCleanupAndClearStorage(\n    getWindow: GetWindow\n): void {\n    const context = getInstanceContext(getWindow);\n\n    context.fakeWeakRefsStarted = false;\n\n    if (context.fakeWeakRefsTimer) {\n        getWindow().clearTimeout(context.fakeWeakRefsTimer);\n        context.fakeWeakRefsTimer = undefined;\n        context.fakeWeakRefs = [];\n    }\n}\n\nexport function createElementTreeWalker(\n    doc: Document,\n    root: Node,\n    acceptNode: (node: Node) => number\n): TreeWalker | undefined {\n    // IE11 will throw an exception when the TreeWalker root is not an Element.\n    if (root.nodeType !== Node.ELEMENT_NODE) {\n        return undefined;\n    }\n\n    // TypeScript isn't aware of IE11 behaving badly.\n    const filter = (_isBrokenIE11\n        ? acceptNode\n        : ({ acceptNode } as NodeFilter)) as unknown as NodeFilter;\n\n    return doc.createTreeWalker(\n        root,\n        NodeFilter.SHOW_ELEMENT,\n        filter,\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: We still don't want to completely break IE11, so, entityReferenceExpansion argument is not optional.\n        false /* Last argument is not optional for IE11! */\n    );\n}\n\nexport function getBoundingRect(\n    getWindow: GetWindow,\n    element: HTMLElementWithBoundingRectCacheId\n): TabsterDOMRect {\n    let cacheId = element.__tabsterCacheId;\n    const context = getInstanceContext(getWindow);\n    const cached = cacheId\n        ? context.containerBoundingRectCache[cacheId]\n        : undefined;\n\n    if (cached) {\n        return cached.rect;\n    }\n\n    const scrollingElement =\n        element.ownerDocument && element.ownerDocument.documentElement;\n\n    if (!scrollingElement) {\n        return new _DOMRect();\n    }\n\n    // A bounding rect of the top-level element contains the whole page regardless of the\n    // scrollbar. So, we improvise a little and limiting the final result...\n    let left = 0;\n    let top = 0;\n    let right = scrollingElement.clientWidth;\n    let bottom = scrollingElement.clientHeight;\n\n    if (element !== scrollingElement) {\n        const r = element.getBoundingClientRect();\n        left = Math.max(left, r.left);\n        top = Math.max(top, r.top);\n        right = Math.min(right, r.right);\n        bottom = Math.min(bottom, r.bottom);\n    }\n\n    const rect = new _DOMRect(\n        left < right ? left : -1,\n        top < bottom ? top : -1,\n        left < right ? right - left : 0,\n        top < bottom ? bottom - top : 0\n    );\n\n    if (!cacheId) {\n        cacheId = \"r-\" + ++context.lastContainerBoundingRectCacheId;\n        element.__tabsterCacheId = cacheId;\n    }\n\n    context.containerBoundingRectCache[cacheId] = {\n        rect,\n        element,\n    };\n\n    if (!context.containerBoundingRectCacheTimer) {\n        context.containerBoundingRectCacheTimer = window.setTimeout(() => {\n            context.containerBoundingRectCacheTimer = undefined;\n\n            for (const cId of Object.keys(context.containerBoundingRectCache)) {\n                delete context.containerBoundingRectCache[cId].element\n                    .__tabsterCacheId;\n            }\n\n            context.containerBoundingRectCache = {};\n        }, 50);\n    }\n\n    return rect;\n}\n\nexport function isElementVerticallyVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    tolerance: number\n): boolean {\n    const container = getScrollableContainer(element);\n    if (!container) {\n        return false;\n    }\n\n    const containerRect = getBoundingRect(getWindow, container);\n    const elementRect = element.getBoundingClientRect();\n    const intersectionTolerance = elementRect.height * (1 - tolerance);\n    const topIntersection = Math.max(0, containerRect.top - elementRect.top);\n    const bottomIntersection = Math.max(\n        0,\n        elementRect.bottom - containerRect.bottom\n    );\n    const totalIntersection = topIntersection + bottomIntersection;\n\n    return (\n        totalIntersection === 0 || totalIntersection <= intersectionTolerance\n    );\n}\n\nexport function isElementVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    gap = 0\n): Visibility {\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (\n            elementRect.left > containerRect.right ||\n            elementRect.top > containerRect.bottom ||\n            elementRect.bottom < containerRect.top ||\n            elementRect.right < containerRect.left\n        ) {\n            return Visibilities.Invisible;\n        }\n\n        if (\n            elementRect.top + gap >= containerRect.top &&\n            elementRect.top <= containerRect.bottom &&\n            elementRect.bottom >= containerRect.top &&\n            elementRect.bottom - gap <= containerRect.bottom &&\n            elementRect.left + gap >= containerRect.left &&\n            elementRect.left <= containerRect.right &&\n            elementRect.right >= containerRect.left &&\n            elementRect.right - gap <= containerRect.right\n        ) {\n            return Visibilities.Visible;\n        }\n\n        return Visibilities.PartiallyVisible;\n    }\n\n    return Visibilities.Invisible;\n}\n\nexport function scrollIntoView(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    alignToTop: boolean\n): void {\n    // Built-in DOM's scrollIntoView() is cool, but when we have nested containers,\n    // it scrolls all of them, not just the deepest one. So, trying to work it around.\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (alignToTop) {\n            container.scrollTop += elementRect.top - containerRect.top;\n        } else {\n            container.scrollTop += elementRect.bottom - containerRect.bottom;\n        }\n    }\n}\n\nexport function getScrollableContainer(\n    element: HTMLElement\n): HTMLElement | null {\n    const doc = element.ownerDocument;\n\n    if (doc) {\n        for (\n            let el: HTMLElement | null = element.parentElement;\n            el;\n            el = el.parentElement\n        ) {\n            if (\n                el.scrollWidth > el.clientWidth ||\n                el.scrollHeight > el.clientHeight\n            ) {\n                return el;\n            }\n        }\n\n        return doc.documentElement;\n    }\n\n    return null;\n}\n\nexport function makeFocusIgnored(element: HTMLElement): void {\n    (element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus = true;\n}\n\nexport function shouldIgnoreFocus(element: HTMLElement): boolean {\n    return !!(element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus;\n}\n\nexport function getUId(wnd: Window & { msCrypto?: Crypto }): string {\n    const rnd = new Uint32Array(4);\n\n    if (wnd.crypto && wnd.crypto.getRandomValues) {\n        wnd.crypto.getRandomValues(rnd);\n    } else if (wnd.msCrypto && wnd.msCrypto.getRandomValues) {\n        wnd.msCrypto.getRandomValues(rnd);\n    } else {\n        for (let i = 0; i < rnd.length; i++) {\n            rnd[i] = 0xffffffff * Math.random();\n        }\n    }\n\n    const srnd: string[] = [];\n\n    for (let i = 0; i < rnd.length; i++) {\n        srnd.push(rnd[i].toString(36));\n    }\n\n    srnd.push(\"|\");\n    srnd.push((++_uidCounter).toString(36));\n    srnd.push(\"|\");\n    srnd.push(Date.now().toString(36));\n\n    return srnd.join(\"\");\n}\n\nexport function getElementUId(\n    getWindow: GetWindow,\n    element: HTMLElementWithUID\n): string {\n    const context = getInstanceContext(getWindow);\n    let uid = element.__tabsterElementUID;\n\n    if (!uid) {\n        uid = element.__tabsterElementUID = getUId(getWindow());\n    }\n\n    if (\n        !context.elementByUId[uid] &&\n        documentContains(element.ownerDocument, element)\n    ) {\n        context.elementByUId[uid] = new WeakHTMLElement(getWindow, element);\n    }\n\n    return uid;\n}\n\nexport function getElementByUId(\n    context: InstanceContext,\n    uid: string\n): WeakHTMLElement<HTMLElementWithUID, undefined> | undefined {\n    return context.elementByUId[uid];\n}\n\nexport function getWindowUId(win: WindowWithUID): string {\n    let uid = win.__tabsterCrossOriginWindowUID;\n\n    if (!uid) {\n        uid = win.__tabsterCrossOriginWindowUID = getUId(win);\n    }\n\n    return uid;\n}\n\nexport function clearElementCache(\n    getWindow: GetWindow,\n    parent?: HTMLElement\n): void {\n    const context = getInstanceContext(getWindow);\n\n    for (const key of Object.keys(context.elementByUId)) {\n        const wel = context.elementByUId[key];\n        const el = wel && wel.get();\n\n        if (el && parent) {\n            if (!parent.contains(el)) {\n                continue;\n            }\n        }\n\n        delete context.elementByUId[key];\n    }\n}\n\n// IE11 doesn't have document.contains()...\nexport function documentContains(\n    doc: HTMLDocument | null | undefined,\n    element: HTMLElement\n): boolean {\n    return !!doc?.body?.contains(element);\n}\n\nexport function matchesSelector(\n    element: HTMLElement,\n    selector: string\n): boolean {\n    interface HTMLElementWithMatches extends HTMLElement {\n        matchesSelector?: typeof HTMLElement.prototype.matches;\n        msMatchesSelector?: typeof HTMLElement.prototype.matches;\n    }\n\n    const matches =\n        element.matches ||\n        (element as HTMLElementWithMatches).matchesSelector ||\n        (element as HTMLElementWithMatches).msMatchesSelector ||\n        element.webkitMatchesSelector;\n\n    return matches && matches.call(element, selector);\n}\n\nexport function getPromise(getWindow: GetWindow): PromiseConstructor {\n    const context = getInstanceContext(getWindow);\n    if (context.basics.Promise) {\n        return context.basics.Promise;\n    }\n\n    throw new Error(\"No Promise defined.\");\n}\n\nexport function getWeakRef(\n    context: InstanceContext\n): WeakRefConstructor | undefined {\n    return context.basics.WeakRef;\n}\n\ninterface InternalBasics {\n    Promise?: PromiseConstructor;\n    WeakRef?: WeakRefConstructor;\n    WeakMap?: WeakMapConstructor;\n}\n\nexport function setBasics(win: Window, basics: InternalBasics): void {\n    const context = getInstanceContext(() => win);\n\n    let key: keyof InternalBasics;\n\n    key = \"Promise\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakRef\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakMap\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n}\n\nlet _lastTabsterPartId = 0;\n\nexport abstract class TabsterPart<P, D = undefined>\n    implements Types.TabsterPart<P>\n{\n    protected _tabster: Types.TabsterCore;\n    protected _element: WeakHTMLElement<HTMLElement, D>;\n    protected _props: P;\n\n    readonly id: string;\n\n    constructor(tabster: Types.TabsterCore, element: HTMLElement, props: P) {\n        const getWindow = tabster.getWindow;\n        this._tabster = tabster;\n        this._element = new WeakHTMLElement(getWindow, element);\n        this._props = { ...props };\n        this.id = \"i\" + ++_lastTabsterPartId;\n    }\n\n    getElement(): HTMLElement | undefined {\n        return this._element.get();\n    }\n\n    getProps(): P {\n        return this._props;\n    }\n\n    setProps(props: P): void {\n        this._props = { ...props };\n    }\n}\n\nexport interface DummyInputProps {\n    /** The input is created to be used only once and autoremoved when focused. */\n    isPhantom?: boolean;\n    /** Whether the input is before or after the content it is guarding.  */\n    isFirst: boolean;\n}\n\nexport type DummyInputFocusCallback = (\n    dummyInput: DummyInput,\n    isBackward: boolean,\n    relatedTarget: HTMLElement | null\n) => void;\n\n/**\n * Dummy HTML elements that are used as focus sentinels for the DOM enclosed within them\n */\nexport class DummyInput {\n    private _isPhantom: DummyInputProps[\"isPhantom\"];\n    private _fixedTarget?: WeakHTMLElement;\n    private _disposeTimer: number | undefined;\n    private _clearDisposeTimeout: (() => void) | undefined;\n\n    input: HTMLElement | undefined;\n    useDefaultAction?: boolean;\n    isFirst: DummyInputProps[\"isFirst\"];\n    isOutside: boolean;\n    /** Called when the input is focused */\n    onFocusIn?: DummyInputFocusCallback;\n    /** Called when the input is blurred */\n    onFocusOut?: DummyInputFocusCallback;\n\n    constructor(\n        getWindow: Types.GetWindow,\n        isOutside: boolean,\n        props: DummyInputProps,\n        element?: WeakHTMLElement,\n        fixedTarget?: WeakHTMLElement\n    ) {\n        const win = getWindow();\n        const input = win.document.createElement(\"i\");\n\n        input.tabIndex = 0;\n        input.setAttribute(\"role\", \"none\");\n\n        input.setAttribute(Types.TabsterDummyInputAttributeName, \"\");\n        input.setAttribute(\"aria-hidden\", \"true\");\n\n        const style = input.style;\n        style.position = \"fixed\";\n        style.width = style.height = \"1px\";\n        style.opacity = \"0.001\";\n        style.zIndex = \"-1\";\n        style.setProperty(\"content-visibility\", \"hidden\");\n\n        makeFocusIgnored(input);\n\n        this.input = input;\n        this.isFirst = props.isFirst;\n        this.isOutside = isOutside;\n        this._isPhantom = props.isPhantom ?? false;\n        this._fixedTarget = fixedTarget;\n\n        input.addEventListener(\"focusin\", this._focusIn);\n        input.addEventListener(\"focusout\", this._focusOut);\n\n        (input as HTMLElementWithDummyContainer).__tabsterDummyContainer =\n            element;\n\n        if (this._isPhantom) {\n            this._disposeTimer = win.setTimeout(() => {\n                delete this._disposeTimer;\n                this.dispose();\n            }, 0);\n\n            this._clearDisposeTimeout = () => {\n                if (this._disposeTimer) {\n                    win.clearTimeout(this._disposeTimer);\n                    delete this._disposeTimer;\n                }\n\n                delete this._clearDisposeTimeout;\n            };\n        }\n    }\n\n    dispose(): void {\n        if (this._clearDisposeTimeout) {\n            this._clearDisposeTimeout();\n        }\n\n        const input = this.input;\n\n        if (!input) {\n            return;\n        }\n\n        delete this._fixedTarget;\n        delete this.onFocusIn;\n        delete this.onFocusOut;\n        delete this.input;\n\n        input.removeEventListener(\"focusin\", this._focusIn);\n        input.removeEventListener(\"focusout\", this._focusOut);\n\n        delete (input as HTMLElementWithDummyContainer).__tabsterDummyContainer;\n\n        input.parentElement?.removeChild(input);\n    }\n\n    setTopLeft(top: number, left: number): void {\n        const style = this.input?.style;\n\n        if (style) {\n            style.top = `${top}px`;\n            style.left = `${left}px`;\n        }\n    }\n\n    private _isBackward(\n        isIn: boolean,\n        current: HTMLElement,\n        previous: HTMLElement | null\n    ): boolean {\n        return isIn && !previous\n            ? !this.isFirst\n            : !!(\n                  previous &&\n                  current.compareDocumentPosition(previous) &\n                      Node.DOCUMENT_POSITION_FOLLOWING\n              );\n    }\n\n    private _focusIn = (e: FocusEvent): void => {\n        if (this._fixedTarget) {\n            const target = this._fixedTarget.get();\n\n            if (target) {\n                nativeFocus(target);\n            }\n\n            return;\n        }\n\n        const input = this.input;\n\n        if (this.onFocusIn && input) {\n            const relatedTarget = e.relatedTarget as HTMLElement | null;\n\n            this.onFocusIn(\n                this,\n                this._isBackward(true, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n\n    private _focusOut = (e: FocusEvent): void => {\n        if (this._fixedTarget) {\n            return;\n        }\n\n        this.useDefaultAction = false;\n\n        const input = this.input;\n\n        if (this.onFocusOut && input) {\n            const relatedTarget = e.relatedTarget as HTMLElement | null;\n\n            this.onFocusOut(\n                this,\n                this._isBackward(false, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n}\n\ninterface HTMLElementWithDummyInputs extends HTMLElement {\n    __tabsterDummy?: DummyInputManagerCore;\n}\n\nexport const DummyInputManagerPriorities = {\n    Root: 1,\n    Modalizer: 2,\n    Mover: 3,\n    Groupper: 4,\n};\n\nexport class DummyInputManager {\n    private _instance?: DummyInputManagerCore;\n    private _onFocusIn?: DummyInputFocusCallback;\n    private _onFocusOut?: DummyInputFocusCallback;\n    protected _element: WeakHTMLElement;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        priority: number,\n        sys: Types.SysProps | undefined,\n        outsideByDefault?: boolean,\n        callForDefaultAction?: boolean\n    ) {\n        this._element = element;\n\n        this._instance = new DummyInputManagerCore(\n            tabster,\n            element,\n            this,\n            priority,\n            sys,\n            outsideByDefault,\n            callForDefaultAction\n        );\n    }\n\n    protected _setHandlers(\n        onFocusIn?: DummyInputFocusCallback,\n        onFocusOut?: DummyInputFocusCallback\n    ): void {\n        this._onFocusIn = onFocusIn;\n        this._onFocusOut = onFocusOut;\n    }\n\n    moveOut(backwards: boolean): void {\n        this._instance?.moveOut(backwards);\n    }\n\n    moveOutWithDefaultAction(backwards: boolean): void {\n        this._instance?.moveOutWithDefaultAction(backwards);\n    }\n\n    getHandler(isIn: boolean): DummyInputFocusCallback | undefined {\n        return isIn ? this._onFocusIn : this._onFocusOut;\n    }\n\n    setTabbable(tabbable: boolean) {\n        this._instance?.setTabbable(this, tabbable);\n    }\n\n    dispose(): void {\n        if (this._instance) {\n            this._instance.dispose(this);\n            delete this._instance;\n        }\n\n        delete this._onFocusIn;\n        delete this._onFocusOut;\n    }\n\n    static moveWithPhantomDummy(\n        tabster: Types.TabsterCore,\n        element: HTMLElement, // The target element to move to or out of.\n        moveOutOfElement: boolean, // Whether to move out of the element or into it.\n        isBackward: boolean // Are we tabbing of shift-tabbing?\n    ): void {\n        // Phantom dummy is a hack to use browser's default action to move\n        // focus from a specific point in the application to the next/previous\n        // element. Default action is needed because next focusable element\n        // is not always available to focus directly (for example, next focusable\n        // is inside isolated iframe) or for uncontrolled areas we want to make\n        // sure that something that controls it takes care of the focusing.\n        // It works in a way that during the Tab key handling, we create a dummy\n        // input element, place it to the specific place in the DOM and focus it,\n        // then the default action of the Tab press will move focus from our dummy\n        // input. And we remove it from the DOM right after that.\n        const dummy: DummyInput = new DummyInput(tabster.getWindow, true, {\n            isPhantom: true,\n            isFirst: true,\n        });\n\n        const input = dummy.input;\n\n        if (input) {\n            let parent: HTMLElement | null;\n            let insertBefore: HTMLElementWithDummyContainer | null;\n\n            // Let's say we have a following DOM structure:\n            // <div>\n            //   <button>Button1</button>\n            //   <div id=\"uncontrolled\" data-tabster={uncontrolled: {}}>\n            //     <button>Button2</button>\n            //     <button>Button3</button>\n            //   </div>\n            //   <button>Button4</button>\n            // </div>\n            //\n            // We pass the \"uncontrolled\" div as the element to move to or out of.\n            //\n            // When we pass moveOutOfElement=true and isBackward=false,\n            // the phantom dummy input will be inserted before Button4.\n            //\n            // When we pass moveOutOfElement=true and isBackward=true, there are\n            // two cases. If the uncontrolled element is focusable (has tabindex=0),\n            // the phantom dummy input will be inserted after Button1. If the\n            // uncontrolled element is not focusable, the phantom dummy input will be\n            // inserted before Button2.\n            //\n            // When we pass moveOutOfElement=false and isBackward=false, the\n            // phantom dummy input will be inserted after Button1.\n            //\n            // When we pass moveOutOfElement=false and isBackward=true, the phantom\n            // dummy input will be inserted before Button4.\n            //\n            // And we have a corner case for <body> and we make sure that the inserted\n            // dummy is inserted properly when there are existing permanent dummies.\n\n            if (element.tagName === \"BODY\") {\n                // We cannot insert elements outside of BODY.\n                parent = element;\n                insertBefore =\n                    (moveOutOfElement && isBackward) ||\n                    (!moveOutOfElement && !isBackward)\n                        ? (element.firstElementChild as HTMLElement | null)\n                        : null;\n            } else {\n                if (\n                    moveOutOfElement &&\n                    (!isBackward ||\n                        (isBackward &&\n                            !tabster.focusable.isFocusable(\n                                element,\n                                false,\n                                true,\n                                true\n                            )))\n                ) {\n                    parent = element;\n                    insertBefore = isBackward\n                        ? (element.firstElementChild as HTMLElementWithDummyContainer | null)\n                        : null;\n                } else {\n                    parent = element.parentElement as HTMLElement | null;\n                    insertBefore =\n                        (moveOutOfElement && isBackward) ||\n                        (!moveOutOfElement && !isBackward)\n                            ? element\n                            : (element.nextElementSibling as HTMLElement | null);\n                }\n\n                let potentialDummy: HTMLElementWithDummyContainer | null;\n                let dummyFor: HTMLElement | undefined;\n\n                do {\n                    // This is a safety pillow for the cases when someone, combines\n                    // groupper with uncontrolled on the same node. Which is technically\n                    // not correct, but moving into the container element via its dummy\n                    // input would produce a correct behaviour in uncontrolled mode.\n                    potentialDummy = (\n                        (moveOutOfElement && isBackward) ||\n                        (!moveOutOfElement && !isBackward)\n                            ? insertBefore?.previousElementSibling\n                            : insertBefore\n                    ) as HTMLElementWithDummyContainer | null;\n\n                    dummyFor = potentialDummy?.__tabsterDummyContainer?.get();\n\n                    if (dummyFor === element) {\n                        insertBefore =\n                            (moveOutOfElement && isBackward) ||\n                            (!moveOutOfElement && !isBackward)\n                                ? potentialDummy\n                                : (potentialDummy?.nextElementSibling as HTMLElement | null);\n                    } else {\n                        dummyFor = undefined;\n                    }\n                } while (dummyFor);\n            }\n\n            if (parent) {\n                parent.insertBefore(input, insertBefore);\n                nativeFocus(input);\n            }\n        }\n    }\n\n    static addPhantomDummyWithTarget(\n        tabster: Types.TabsterCore,\n        sourceElement: HTMLElement,\n        isBackward: boolean,\n        targetElement: HTMLElement\n    ): void {\n        const dummy: DummyInput = new DummyInput(\n            tabster.getWindow,\n            true,\n            {\n                isPhantom: true,\n                isFirst: true,\n            },\n            undefined,\n            new WeakHTMLElement(tabster.getWindow, targetElement)\n        );\n\n        const input = dummy.input;\n\n        if (input) {\n            let dummyParent: HTMLElement | null;\n            let insertBefore: HTMLElement | null;\n\n            if (hasSubFocusable(sourceElement) && !isBackward) {\n                dummyParent = sourceElement;\n                insertBefore =\n                    sourceElement.firstElementChild as HTMLElement | null;\n            } else {\n                dummyParent = sourceElement.parentElement;\n                insertBefore = isBackward\n                    ? sourceElement\n                    : (sourceElement.nextElementSibling as HTMLElement | null);\n            }\n\n            dummyParent?.insertBefore(input, insertBefore);\n        }\n    }\n}\n\ninterface DummyInputWrapper {\n    manager: DummyInputManager;\n    priority: number;\n    tabbable: boolean;\n}\n\nfunction setDummyInputDebugValue(\n    dummy: DummyInput,\n    wrappers: DummyInputWrapper[]\n): void {\n    const what: Record<number, string> = {\n        1: \"Root\",\n        2: \"Modalizer\",\n        3: \"Mover\",\n        4: \"Groupper\",\n    };\n\n    dummy.input?.setAttribute(\n        Types.TabsterDummyInputAttributeName,\n        [\n            `isFirst=${dummy.isFirst}`,\n            `isOutside=${dummy.isOutside}`,\n            ...wrappers.map(\n                (w) => `(${what[w.priority]}, tabbable=${w.tabbable})`\n            ),\n        ].join(\", \")\n    );\n}\n\nexport class DummyInputObserver implements Types.DummyInputObserver {\n    private _win?: GetWindow;\n    private _updateQueue: Set<\n        (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    > = new Set();\n    private _updateTimer?: number;\n    private _lastUpdateQueueTime = 0;\n    private _changedParents: WeakSet<HTMLElement> = new WeakSet();\n    private _updateDummyInputsTimer?: number;\n    private _dummyElements: WeakHTMLElement<HTMLElement>[] = [];\n    private _dummyCallbacks: WeakMap<HTMLElement, () => void> = new WeakMap();\n    domChanged?(parent: HTMLElement): void;\n\n    constructor(win: GetWindow) {\n        this._win = win;\n    }\n\n    add(dummy: HTMLElement, callback: () => void): void {\n        if (!this._dummyCallbacks.has(dummy) && this._win) {\n            this._dummyElements.push(new WeakHTMLElement(this._win, dummy));\n            this._dummyCallbacks.set(dummy, callback);\n            this.domChanged = this._domChanged;\n        }\n    }\n\n    remove(dummy: HTMLElement): void {\n        this._dummyElements = this._dummyElements.filter((ref) => {\n            const element = ref.get();\n            return element && element !== dummy;\n        });\n\n        this._dummyCallbacks.delete(dummy);\n\n        if (this._dummyElements.length === 0) {\n            delete this.domChanged;\n        }\n    }\n\n    dispose(): void {\n        const win = this._win?.();\n\n        if (this._updateTimer) {\n            win?.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        if (this._updateDummyInputsTimer) {\n            win?.clearTimeout(this._updateDummyInputsTimer);\n            delete this._updateDummyInputsTimer;\n        }\n\n        this._changedParents = new WeakSet();\n        this._dummyCallbacks = new WeakMap();\n        this._dummyElements = [];\n        this._updateQueue.clear();\n\n        delete this.domChanged;\n        delete this._win;\n    }\n\n    private _domChanged = (parent: HTMLElement): void => {\n        if (this._changedParents.has(parent)) {\n            return;\n        }\n\n        this._changedParents.add(parent);\n\n        if (this._updateDummyInputsTimer) {\n            return;\n        }\n\n        this._updateDummyInputsTimer = this._win?.().setTimeout(() => {\n            delete this._updateDummyInputsTimer;\n\n            for (const ref of this._dummyElements) {\n                const dummyElement = ref.get();\n\n                if (dummyElement) {\n                    const callback = this._dummyCallbacks.get(dummyElement);\n\n                    if (callback) {\n                        const dummyParent = dummyElement.parentElement;\n\n                        if (\n                            !dummyParent ||\n                            this._changedParents.has(dummyParent)\n                        ) {\n                            callback();\n                        }\n                    }\n                }\n            }\n\n            this._changedParents = new WeakSet();\n        }, _updateDummyInputsTimeout);\n    };\n\n    updatePositions(\n        compute: (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    ): void {\n        if (!this._win) {\n            // As this is a public method, we make sure that it has no effect when\n            // called after dispose().\n            return;\n        }\n\n        this._updateQueue.add(compute);\n\n        this._lastUpdateQueueTime = Date.now();\n\n        this._scheduledUpdatePositions();\n    }\n\n    private _scheduledUpdatePositions(): void {\n        if (this._updateTimer) {\n            return;\n        }\n\n        this._updateTimer = this._win?.().setTimeout(() => {\n            delete this._updateTimer;\n\n            // updatePositions() might be called quite a lot during the scrolling.\n            // So, instead of clearing the timeout and scheduling a new one, we\n            // check if enough time has passed since the last updatePositions() call\n            // and only schedule a new one if not.\n            // At maximum, we will update dummy inputs positions\n            // _updateDummyInputsTimeout * 2 after the last updatePositions() call.\n            if (\n                this._lastUpdateQueueTime + _updateDummyInputsTimeout <=\n                Date.now()\n            ) {\n                // A cache for current bulk of updates to reduce getComputedStyle() calls.\n                const scrollTopLeftCache = new Map<\n                    HTMLElement,\n                    { scrollTop: number; scrollLeft: number } | null\n                >();\n\n                const setTopLeftCallbacks: (() => void)[] = [];\n\n                for (const compute of this._updateQueue) {\n                    setTopLeftCallbacks.push(compute(scrollTopLeftCache));\n                }\n\n                this._updateQueue.clear();\n\n                // We're splitting the computation of offsets and setting them to avoid extra\n                // reflows.\n                for (const setTopLeft of setTopLeftCallbacks) {\n                    setTopLeft();\n                }\n\n                // Explicitly clear to not hold references till the next garbage collection.\n                scrollTopLeftCache.clear();\n            } else {\n                this._scheduledUpdatePositions();\n            }\n        }, _updateDummyInputsTimeout);\n    }\n}\n\n/**\n * Parent class that encapsulates the behaviour of dummy inputs (focus sentinels)\n */\nclass DummyInputManagerCore {\n    private _tabster: Types.TabsterCore;\n    private _addTimer: number | undefined;\n    private _getWindow: Types.GetWindow;\n    private _wrappers: DummyInputWrapper[] = [];\n    private _element: WeakHTMLElement | undefined;\n    private _isOutside = false;\n    private _firstDummy: DummyInput | undefined;\n    private _lastDummy: DummyInput | undefined;\n    private _transformElements: Set<HTMLElement> = new Set();\n    private _callForDefaultAction: boolean | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        manager: DummyInputManager,\n        priority: number,\n        sys: Types.SysProps | undefined,\n        outsideByDefault?: boolean,\n        callForDefaultAction?: boolean\n    ) {\n        const el = element.get() as HTMLElementWithDummyInputs;\n\n        if (!el) {\n            throw new Error(\"No element\");\n        }\n\n        this._tabster = tabster;\n        this._getWindow = tabster.getWindow;\n        this._callForDefaultAction = callForDefaultAction;\n\n        const instance = el.__tabsterDummy;\n\n        (instance || this)._wrappers.push({\n            manager,\n            priority,\n            tabbable: true,\n        });\n\n        if (instance) {\n            if (__DEV__) {\n                this._firstDummy &&\n                    setDummyInputDebugValue(\n                        this._firstDummy,\n                        instance._wrappers\n                    );\n                this._lastDummy &&\n                    setDummyInputDebugValue(\n                        this._lastDummy,\n                        instance._wrappers\n                    );\n            }\n\n            return instance;\n        }\n\n        el.__tabsterDummy = this;\n\n        // Some elements allow only specific types of direct descendants and we need to\n        // put our dummy inputs inside or outside of the element accordingly.\n        const forcedDummyPosition = sys?.dummyInputsPosition;\n        const tagName = el.tagName;\n        this._isOutside = !forcedDummyPosition\n            ? (outsideByDefault ||\n                  tagName === \"UL\" ||\n                  tagName === \"OL\" ||\n                  tagName === \"TABLE\") &&\n              !(tagName === \"LI\" || tagName === \"TD\" || tagName === \"TH\")\n            : forcedDummyPosition === Types.SysDummyInputsPositions.Outside;\n\n        this._firstDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: true,\n            },\n            element\n        );\n\n        this._lastDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: false,\n            },\n            element\n        );\n\n        // We will be checking dummy input parents to see if their child list have changed.\n        // So, it is enough to have just one of the inputs observed, because\n        // both dummy inputs always have the same parent.\n        const dummyElement = this._firstDummy.input;\n        dummyElement &&\n            tabster._dummyObserver.add(dummyElement, this._addDummyInputs);\n\n        this._firstDummy.onFocusIn = this._onFocusIn;\n        this._firstDummy.onFocusOut = this._onFocusOut;\n        this._lastDummy.onFocusIn = this._onFocusIn;\n        this._lastDummy.onFocusOut = this._onFocusOut;\n\n        this._element = element;\n        this._addDummyInputs();\n    }\n\n    dispose(manager: DummyInputManager, force?: boolean): void {\n        const wrappers = (this._wrappers = this._wrappers.filter(\n            (w) => w.manager !== manager && !force\n        ));\n\n        if (__DEV__) {\n            this._firstDummy &&\n                setDummyInputDebugValue(this._firstDummy, wrappers);\n            this._lastDummy &&\n                setDummyInputDebugValue(this._lastDummy, wrappers);\n        }\n\n        if (wrappers.length === 0) {\n            delete (this._element?.get() as HTMLElementWithDummyInputs)\n                .__tabsterDummy;\n\n            for (const el of this._transformElements) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n            this._transformElements.clear();\n\n            const win = this._getWindow();\n\n            if (this._addTimer) {\n                win.clearTimeout(this._addTimer);\n                delete this._addTimer;\n            }\n\n            const dummyElement = this._firstDummy?.input;\n            dummyElement && this._tabster._dummyObserver.remove(dummyElement);\n\n            this._firstDummy?.dispose();\n            this._lastDummy?.dispose();\n        }\n    }\n\n    private _onFocus(\n        isIn: boolean,\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void {\n        const wrapper = this._getCurrent();\n\n        if (\n            wrapper &&\n            (!dummyInput.useDefaultAction || this._callForDefaultAction)\n        ) {\n            wrapper.manager.getHandler(isIn)?.(\n                dummyInput,\n                isBackward,\n                relatedTarget\n            );\n        }\n    }\n\n    private _onFocusIn = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(true, dummyInput, isBackward, relatedTarget);\n    };\n\n    private _onFocusOut = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(false, dummyInput, isBackward, relatedTarget);\n    };\n\n    moveOut = (backwards: boolean): void => {\n        const first = this._firstDummy;\n        const last = this._lastDummy;\n\n        if (first && last) {\n            // For the sake of performance optimization, the dummy input\n            // position in the DOM updates asynchronously from the DOM change.\n            // Calling _ensurePosition() to make sure the position is correct.\n            this._ensurePosition();\n\n            const firstInput = first.input;\n            const lastInput = last.input;\n            const element = this._element?.get();\n\n            if (firstInput && lastInput && element) {\n                let toFocus: HTMLElement | undefined;\n\n                if (backwards) {\n                    firstInput.tabIndex = 0;\n                    toFocus = firstInput;\n                } else {\n                    lastInput.tabIndex = 0;\n                    toFocus = lastInput;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepares to move focus out of the given element by focusing\n     * one of the dummy inputs and setting the `useDefaultAction` flag\n     * @param backwards focus moving to an element behind the given element\n     */\n    moveOutWithDefaultAction = (backwards: boolean): void => {\n        const first = this._firstDummy;\n        const last = this._lastDummy;\n\n        if (first && last) {\n            // For the sake of performance optimization, the dummy input\n            // position in the DOM updates asynchronously from the DOM change.\n            // Calling _ensurePosition() to make sure the position is correct.\n            this._ensurePosition();\n\n            const firstInput = first.input;\n            const lastInput = last.input;\n            const element = this._element?.get();\n\n            if (firstInput && lastInput && element) {\n                let toFocus: HTMLElement | undefined;\n\n                if (backwards) {\n                    if (\n                        !first.isOutside &&\n                        this._tabster.focusable.isFocusable(\n                            element,\n                            true,\n                            true,\n                            true\n                        )\n                    ) {\n                        toFocus = element;\n                    } else {\n                        first.useDefaultAction = true;\n                        firstInput.tabIndex = 0;\n                        toFocus = firstInput;\n                    }\n                } else {\n                    last.useDefaultAction = true;\n                    lastInput.tabIndex = 0;\n                    toFocus = lastInput;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        }\n    };\n\n    setTabbable = (manager: DummyInputManager, tabbable: boolean) => {\n        for (const w of this._wrappers) {\n            if (w.manager === manager) {\n                w.tabbable = tabbable;\n                break;\n            }\n        }\n\n        const wrapper = this._getCurrent();\n\n        if (wrapper) {\n            const tabIndex = wrapper.tabbable ? 0 : -1;\n\n            let input = this._firstDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n\n            input = this._lastDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n        }\n\n        if (__DEV__) {\n            this._firstDummy &&\n                setDummyInputDebugValue(this._firstDummy, this._wrappers);\n            this._lastDummy &&\n                setDummyInputDebugValue(this._lastDummy, this._wrappers);\n        }\n    };\n\n    private _getCurrent(): DummyInputWrapper | undefined {\n        this._wrappers.sort((a, b) => {\n            if (a.tabbable !== b.tabbable) {\n                return a.tabbable ? -1 : 1;\n            }\n\n            return a.priority - b.priority;\n        });\n\n        return this._wrappers[0];\n    }\n\n    /**\n     * Adds dummy inputs as the first and last child of the given element\n     * Called each time the children under the element is mutated\n     */\n    private _addDummyInputs = () => {\n        if (this._addTimer) {\n            return;\n        }\n\n        this._addTimer = this._getWindow().setTimeout(() => {\n            delete this._addTimer;\n\n            this._ensurePosition();\n\n            if (__DEV__) {\n                this._firstDummy &&\n                    setDummyInputDebugValue(this._firstDummy, this._wrappers);\n                this._lastDummy &&\n                    setDummyInputDebugValue(this._lastDummy, this._wrappers);\n            }\n\n            this._addTransformOffsets();\n        }, 0);\n    };\n\n    private _ensurePosition(): void {\n        const element = this._element?.get();\n        const firstDummyInput = this._firstDummy?.input;\n        const lastDummyInput = this._lastDummy?.input;\n\n        if (!element || !firstDummyInput || !lastDummyInput) {\n            return;\n        }\n\n        if (this._isOutside) {\n            const elementParent = element.parentElement;\n\n            if (elementParent) {\n                const nextSibling = element.nextElementSibling;\n\n                if (nextSibling !== lastDummyInput) {\n                    elementParent.insertBefore(lastDummyInput, nextSibling);\n                }\n\n                if (element.previousElementSibling !== firstDummyInput) {\n                    elementParent.insertBefore(firstDummyInput, element);\n                }\n            }\n        } else {\n            if (element.lastElementChild !== lastDummyInput) {\n                element.appendChild(lastDummyInput);\n            }\n\n            const firstElementChild = element.firstElementChild;\n\n            if (firstElementChild && firstElementChild !== firstDummyInput) {\n                element.insertBefore(firstDummyInput, firstElementChild);\n            }\n        }\n    }\n\n    private _addTransformOffsets = (): void => {\n        this._tabster._dummyObserver.updatePositions(\n            this._computeTransformOffsets\n        );\n    };\n\n    private _computeTransformOffsets = (\n        scrollTopLeftCache: Map<\n            HTMLElement,\n            { scrollTop: number; scrollLeft: number } | null\n        >\n    ): (() => void) => {\n        const from = this._firstDummy?.input || this._lastDummy?.input;\n        const transformElements = this._transformElements;\n        const newTransformElements: typeof transformElements = new Set();\n        let scrollTop = 0;\n        let scrollLeft = 0;\n\n        const win = this._getWindow();\n\n        for (\n            let element: HTMLElement | undefined | null = from;\n            element && element.nodeType === Node.ELEMENT_NODE;\n            element = element.parentElement\n        ) {\n            let scrollTopLeft = scrollTopLeftCache.get(element);\n\n            // getComputedStyle() and element.scrollLeft/Top() cause style recalculation,\n            // so we cache the result across all elements in the current bulk.\n            if (scrollTopLeft === undefined) {\n                const transform = win.getComputedStyle(element).transform;\n\n                if (transform && transform !== \"none\") {\n                    scrollTopLeft = {\n                        scrollTop: element.scrollTop,\n                        scrollLeft: element.scrollLeft,\n                    };\n                }\n\n                scrollTopLeftCache.set(element, scrollTopLeft || null);\n            }\n\n            if (scrollTopLeft) {\n                newTransformElements.add(element);\n\n                if (!transformElements.has(element)) {\n                    element.addEventListener(\n                        \"scroll\",\n                        this._addTransformOffsets\n                    );\n                }\n\n                scrollTop += scrollTopLeft.scrollTop;\n                scrollLeft += scrollTopLeft.scrollLeft;\n            }\n        }\n\n        for (const el of transformElements) {\n            if (!newTransformElements.has(el)) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n        }\n\n        this._transformElements = newTransformElements;\n\n        return () => {\n            this._firstDummy?.setTopLeft(scrollTop, scrollLeft);\n            this._lastDummy?.setTopLeft(scrollTop, scrollLeft);\n        };\n    };\n}\n\nexport function getLastChild(container: HTMLElement): HTMLElement | undefined {\n    let lastChild: HTMLElement | null = null;\n\n    for (let i = container.lastElementChild; i; i = i.lastElementChild) {\n        lastChild = i as HTMLElement;\n    }\n\n    return lastChild || undefined;\n}\n\nexport function getAdjacentElement(\n    from: HTMLElement,\n    prev?: boolean\n): HTMLElement | undefined {\n    let cur: HTMLElement | null = from;\n    let adjacent: HTMLElement | null = null;\n\n    while (cur && !adjacent) {\n        adjacent = (\n            prev ? cur.previousElementSibling : cur.nextElementSibling\n        ) as HTMLElement | null;\n        cur = cur.parentElement;\n    }\n\n    return adjacent || undefined;\n}\n\nexport function triggerEvent<D>(\n    target: HTMLElement | EventTarget,\n    name: string,\n    details: D\n): boolean {\n    const event = document.createEvent(\n        \"HTMLEvents\"\n    ) as Types.TabsterEventWithDetails<D>;\n\n    event.initEvent(name, true, true);\n\n    event.details = details;\n\n    target.dispatchEvent(event);\n\n    return !event.defaultPrevented;\n}\n\nexport function augmentAttribute(\n    tabster: Types.TabsterCore,\n    element: HTMLElement,\n    name: string,\n    value?: string | null // Restore original value when undefined.\n): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const entry = tabster.storageEntry(element, true)!;\n    let ret = false;\n\n    if (!entry.aug) {\n        if (value === undefined) {\n            return ret;\n        }\n\n        entry.aug = {};\n    }\n\n    if (value === undefined) {\n        if (name in entry.aug) {\n            const origVal = entry.aug[name];\n\n            delete entry.aug[name];\n\n            if (origVal === null) {\n                element.removeAttribute(name);\n            } else {\n                element.setAttribute(name, origVal);\n            }\n\n            ret = true;\n        }\n    } else {\n        let origValue: string | null | undefined;\n\n        if (!(name in entry.aug)) {\n            origValue = element.getAttribute(name);\n        }\n\n        if (origValue !== undefined && origValue !== value) {\n            entry.aug[name] = origValue;\n\n            if (value === null) {\n                element.removeAttribute(name);\n            } else {\n                element.setAttribute(name, value);\n            }\n\n            ret = true;\n        }\n    }\n\n    if (value === undefined && Object.keys(entry.aug).length === 0) {\n        delete entry.aug;\n        tabster.storageEntry(element, false);\n    }\n\n    return ret;\n}\n\nexport function getTabsterAttributeOnElement(\n    element: HTMLElement\n): Types.TabsterAttributeProps | null {\n    if (!element.hasAttribute(Types.TabsterAttributeName)) {\n        return null;\n    }\n\n    // We already checked the presence with `hasAttribute`\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const rawAttribute = element.getAttribute(Types.TabsterAttributeName)!;\n    let tabsterAttribute: Types.TabsterAttributeProps;\n    try {\n        tabsterAttribute = JSON.parse(rawAttribute);\n    } catch {\n        console.error(\"Tabster: failed to parse attribute\", rawAttribute);\n        tabsterAttribute = {};\n    }\n\n    return tabsterAttribute;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps\n): Types.TabsterDOMAttribute;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain: true\n): string;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain?: true\n): Types.TabsterDOMAttribute | string {\n    const attr = JSON.stringify(props);\n\n    if (plain === true) {\n        return attr;\n    }\n\n    return {\n        [Types.TabsterAttributeName]: attr,\n    };\n}\n\n/**\n * Updates Tabster props object with new props.\n * @param element an element to set data-tabster attribute on.\n * @param props current Tabster props to update.\n * @param newProps new Tabster props to add.\n *  When the value of a property in newProps is undefined, the property\n *  will be removed from the attribute.\n */\nexport function mergeTabsterProps(\n    props: Types.TabsterAttributeProps,\n    newProps: Types.TabsterAttributeProps\n): void {\n    for (const key of Object.keys(\n        newProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        const value = newProps[key];\n\n        if (value) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            props[key] = value as any;\n        } else {\n            delete props[key];\n        }\n    }\n}\n\n/**\n * Sets or updates Tabster attribute of the element.\n * @param element an element to set data-tabster attribute on.\n * @param newProps new Tabster props to set.\n * @param update if true, newProps will be merged with the existing props.\n *  When true and the value of a property in newProps is undefined, the property\n *  will be removed from the attribute.\n */\nexport function setTabsterAttribute(\n    element: HTMLElement,\n    newProps: Types.TabsterAttributeProps,\n    update?: boolean\n): void {\n    let props: Types.TabsterAttributeProps | undefined;\n\n    if (update) {\n        const attr = element.getAttribute(Types.TabsterAttributeName);\n\n        if (attr) {\n            try {\n                props = JSON.parse(attr);\n            } catch (e) {\n                if (__DEV__) {\n                    console.error(\n                        `data-tabster attribute error: ${e}`,\n                        element\n                    );\n                }\n            }\n        }\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    mergeTabsterProps(props, newProps);\n\n    if (Object.keys(props).length > 0) {\n        element.setAttribute(\n            Types.TabsterAttributeName,\n            getTabsterAttribute(props, true)\n        );\n    } else {\n        element.removeAttribute(Types.TabsterAttributeName);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { createEventTarget } from \"./EventTarget\";\nimport { getTabsterOnElement, updateTabsterByAttribute } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    TabsterPart,\n    triggerEvent,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { setTabsterAttribute } from \"./AttributeHelpers\";\n\nexport interface WindowWithTabsterInstance extends Window {\n    __tabsterInstance?: Types.TabsterCore;\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    id?: string\n) {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-root\");\n            } else {\n                element.style.setProperty(\"--tabster-root\", id + \",\");\n            }\n        }\n    }\n}\n\nclass RootDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _setFocused: (focused: boolean) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        setFocused: (focused: boolean) => void,\n        sys: Types.SysProps | undefined\n    ) {\n        super(\n            tabster,\n            element,\n            DummyInputManagerPriorities.Root,\n            sys,\n            undefined,\n            true\n        );\n\n        this._setHandlers(this._onDummyInputFocus);\n\n        this._tabster = tabster;\n        this._setFocused = setFocused;\n    }\n\n    private _onDummyInputFocus = (dummyInput: DummyInput): void => {\n        if (dummyInput.useDefaultAction) {\n            // When we've reached the last focusable element, we want to let the browser\n            // to move the focus outside of the page. In order to do that we're synchronously\n            // calling focus() of the dummy input from the Tab key handler and allowing\n            // the default action to move the focus out.\n            this._setFocused(false);\n        } else {\n            // The only way a dummy input gets focused is during the keyboard navigation.\n            this._tabster.keyboardNavigation.setNavigatingWithKeyboard(true);\n\n            const element = this._element.get();\n\n            if (element) {\n                this._setFocused(true);\n\n                const toFocus =\n                    this._tabster.focusedElement.getFirstOrLastTabbable(\n                        dummyInput.isFirst,\n                        { container: element, ignoreAccessibility: true }\n                    );\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                    return;\n                }\n            }\n\n            dummyInput.input?.blur();\n        }\n    };\n}\n\nexport class Root\n    extends TabsterPart<Types.RootProps, undefined>\n    implements Types.Root\n{\n    readonly uid: string;\n\n    private _dummyManager?: RootDummyManager;\n    private _sys?: Types.SysProps;\n    private _isFocused = false;\n    private _setFocusedTimer: number | undefined;\n    private _onDispose: (root: Root) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (root: Root) => void,\n        props: Types.RootProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n\n        this._onDispose = onDispose;\n\n        const win = tabster.getWindow;\n        this.uid = getElementUId(win, element);\n\n        this._sys = sys;\n\n        if (tabster.controlTab || tabster.rootDummyInputs) {\n            this.addDummyInputs();\n        }\n\n        const w = win();\n\n        w.document.addEventListener(\"focusin\", this._onFocusIn);\n        w.document.addEventListener(\"focusout\", this._onFocusOut);\n\n        this._add();\n    }\n\n    addDummyInputs(): void {\n        if (!this._dummyManager) {\n            this._dummyManager = new RootDummyManager(\n                this._tabster,\n                this._element,\n                this._setFocused,\n                this._sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const win = this._tabster.getWindow();\n\n        win.document.removeEventListener(\"focusin\", this._onFocusIn);\n        win.document.removeEventListener(\"focusout\", this._onFocusOut);\n\n        if (this._setFocusedTimer) {\n            win.clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        this._dummyManager?.dispose();\n        this._remove();\n    }\n\n    moveOutWithDefaultAction(isBackward: boolean) {\n        const dummyManager = this._dummyManager;\n\n        if (dummyManager) {\n            dummyManager.moveOutWithDefaultAction(isBackward);\n        } else {\n            const el = this.getElement();\n\n            if (el) {\n                RootDummyManager.moveWithPhantomDummy(\n                    this._tabster,\n                    el,\n                    true,\n                    isBackward\n                );\n            }\n        }\n    }\n\n    private _setFocused = (hasFocused: boolean): void => {\n        if (this._setFocusedTimer) {\n            this._tabster.getWindow().clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        if (this._isFocused === hasFocused) {\n            return;\n        }\n\n        const element = this._element.get();\n\n        if (element) {\n            if (hasFocused) {\n                this._isFocused = true;\n                this._dummyManager?.setTabbable(false);\n\n                triggerEvent<Types.RootFocusEventDetails>(\n                    this._tabster.root.eventTarget,\n                    \"focus\",\n                    { element }\n                );\n            } else {\n                this._setFocusedTimer = this._tabster\n                    .getWindow()\n                    .setTimeout(() => {\n                        delete this._setFocusedTimer;\n\n                        this._isFocused = false;\n                        this._dummyManager?.setTabbable(true);\n\n                        triggerEvent<Types.RootFocusEventDetails>(\n                            this._tabster.root.eventTarget,\n                            \"blur\",\n                            { element }\n                        );\n                    }, 0);\n            }\n        }\n    };\n\n    private _onFocusIn = (event: FocusEvent) => {\n        const getParent = this._tabster.getParent;\n        const rootElement = this._element.get();\n        let curElement = event.target as HTMLElement | null;\n\n        do {\n            if (curElement === rootElement) {\n                this._setFocused(true);\n                return;\n            }\n\n            curElement =\n                curElement && (getParent(curElement) as HTMLElement | null);\n        } while (curElement);\n    };\n\n    private _onFocusOut = () => {\n        this._setFocused(false);\n    };\n\n    private _add(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, false, this.uid);\n        }\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateRootProps(props: Types.RootProps): void {\n    // TODO: Implement validation.\n}\n\nexport class RootAPI implements Types.RootAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _autoRoot: Types.RootProps | undefined;\n    private _autoRootWaiting = false;\n    private _roots: Record<string, Types.Root> = {};\n    private _forceDummy = false;\n    rootById: { [id: string]: Types.Root } = {};\n    eventTarget: EventTarget;\n\n    constructor(tabster: Types.TabsterCore, autoRoot?: Types.RootProps) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._autoRoot = autoRoot;\n        this.eventTarget = createEventTarget(this._win);\n\n        tabster.queueInit(() => {\n            if (this._autoRoot) {\n                this._autoRootCreate();\n            }\n        });\n    }\n\n    private _autoRootCreate = (): Types.Root | undefined => {\n        const doc = this._win().document;\n        const body = doc.body;\n\n        if (body) {\n            this._autoRootUnwait(doc);\n\n            const props = this._autoRoot;\n\n            if (props) {\n                setTabsterAttribute(body, { root: props }, true);\n                updateTabsterByAttribute(this._tabster, body);\n                return getTabsterOnElement(this._tabster, body)?.root;\n            }\n        } else if (!this._autoRootWaiting) {\n            this._autoRootWaiting = true;\n            doc.addEventListener(\"readystatechange\", this._autoRootCreate);\n        }\n\n        return undefined;\n    };\n\n    private _autoRootUnwait(doc: Document): void {\n        doc.removeEventListener(\"readystatechange\", this._autoRootCreate);\n        this._autoRootWaiting = false;\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        this._autoRootUnwait(win.document);\n        delete this._autoRoot;\n\n        Object.keys(this._roots).forEach((rootId) => {\n            if (this._roots[rootId]) {\n                this._roots[rootId].dispose();\n                delete this._roots[rootId];\n            }\n        });\n\n        this.rootById = {};\n    }\n\n    createRoot(\n        element: HTMLElement,\n        props: Types.RootProps,\n        sys: Types.SysProps | undefined\n    ): Types.Root {\n        if (__DEV__) {\n            validateRootProps(props);\n        }\n\n        const newRoot = new Root(\n            this._tabster,\n            element,\n            this._onRootDispose,\n            props,\n            sys\n        ) as Types.Root;\n\n        this._roots[newRoot.id] = newRoot;\n\n        if (this._forceDummy) {\n            newRoot.addDummyInputs();\n        }\n\n        return newRoot;\n    }\n\n    addDummyInputs(): void {\n        this._forceDummy = true;\n\n        const roots = this._roots;\n\n        for (const id of Object.keys(roots)) {\n            roots[id].addDummyInputs();\n        }\n    }\n\n    static getRootByUId(\n        getWindow: Types.GetWindow,\n        id: string\n    ): Types.Root | undefined {\n        const tabster = (getWindow() as WindowWithTabsterInstance)\n            .__tabsterInstance;\n        return tabster && (tabster.root as RootAPI).rootById[id];\n    }\n\n    /**\n     * Fetches the tabster context for an element walking up its ancestors\n     *\n     * @param tabster Tabster instance\n     * @param element The element the tabster context should represent\n     * @param options Additional options\n     * @returns undefined if the element is not a child of a tabster root, otherwise all applicable tabster behaviours and configurations\n     */\n    static getTabsterContext(\n        tabster: Types.TabsterCore,\n        element: Node,\n        options: Types.GetTabsterContextOptions = {}\n    ): Types.TabsterContext | undefined {\n        if (!element.ownerDocument) {\n            return undefined;\n        }\n\n        const { checkRtl, referenceElement } = options;\n\n        const getParent = tabster.getParent;\n\n        // Normally, the initialization starts on the next tick after the tabster\n        // instance creation. However, if the application starts using it before\n        // the next tick, we need to make sure the initialization is done.\n        tabster.drainInitQueue();\n\n        let root: Types.Root | undefined;\n        let modalizer: Types.Modalizer | undefined;\n        let groupper: Types.Groupper | undefined;\n        let mover: Types.Mover | undefined;\n        let excludedFromMover = false;\n        let groupperBeforeMover: boolean | undefined;\n        let modalizerInGroupper: Types.Groupper | undefined;\n        let dirRightToLeft: boolean | undefined;\n        let uncontrolled: HTMLElement | null | undefined;\n        let curElement: Node | null = referenceElement || element;\n        const ignoreKeydown: Types.FocusableProps[\"ignoreKeydown\"] = {};\n\n        while (curElement && (!root || checkRtl)) {\n            const tabsterOnElement = getTabsterOnElement(\n                tabster,\n                curElement as HTMLElement\n            );\n\n            if (checkRtl && dirRightToLeft === undefined) {\n                const dir = (curElement as HTMLElement).dir;\n\n                if (dir) {\n                    dirRightToLeft = dir.toLowerCase() === \"rtl\";\n                }\n            }\n\n            if (!tabsterOnElement) {\n                curElement = getParent(curElement);\n                continue;\n            }\n\n            const tagName = (curElement as HTMLElement).tagName;\n\n            if (\n                tabsterOnElement.uncontrolled ||\n                tagName === \"IFRAME\" ||\n                tagName === \"WEBVIEW\"\n            ) {\n                uncontrolled = curElement as HTMLElement;\n            }\n\n            if (\n                !mover &&\n                tabsterOnElement.focusable?.excludeFromMover &&\n                !groupper\n            ) {\n                excludedFromMover = true;\n            }\n\n            const curModalizer = tabsterOnElement.modalizer;\n            const curGroupper = tabsterOnElement.groupper;\n            const curMover = tabsterOnElement.mover;\n\n            if (!modalizer && curModalizer) {\n                modalizer = curModalizer;\n            }\n\n            if (!groupper && curGroupper && (!modalizer || curModalizer)) {\n                if (modalizer) {\n                    // Modalizer dominates the groupper when they are on the same node and the groupper is active.\n                    if (\n                        !curGroupper.isActive() &&\n                        curGroupper.getProps().tabbability &&\n                        modalizer.userId !== tabster.modalizer?.activeId\n                    ) {\n                        modalizer = undefined;\n                        groupper = curGroupper;\n                    }\n\n                    modalizerInGroupper = curGroupper;\n                } else {\n                    groupper = curGroupper;\n                }\n            }\n\n            if (\n                !mover &&\n                curMover &&\n                (!modalizer || curModalizer) &&\n                (!curGroupper || curElement !== element)\n            ) {\n                mover = curMover;\n                groupperBeforeMover = !!groupper && groupper !== curGroupper;\n            }\n\n            if (tabsterOnElement.root) {\n                root = tabsterOnElement.root;\n            }\n\n            if (tabsterOnElement.focusable?.ignoreKeydown) {\n                Object.assign(\n                    ignoreKeydown,\n                    tabsterOnElement.focusable.ignoreKeydown\n                );\n            }\n\n            curElement = getParent(curElement);\n        }\n\n        // No root element could be found, try to get an auto root\n        if (!root) {\n            const rootAPI = tabster.root as RootAPI;\n            const autoRoot = rootAPI._autoRoot;\n\n            if (autoRoot) {\n                if (element.ownerDocument?.body) {\n                    root = rootAPI._autoRootCreate();\n                }\n            }\n        }\n\n        if (groupper && !mover) {\n            groupperBeforeMover = true;\n        }\n\n        if (__DEV__ && !root) {\n            if (modalizer || groupper || mover) {\n                console.error(\n                    \"Tabster Root is required for Mover, Groupper and Modalizer to work.\"\n                );\n            }\n        }\n\n        const shouldIgnoreKeydown = (event: KeyboardEvent) =>\n            !!ignoreKeydown[event.key as \"Tab\"];\n\n        return root\n            ? {\n                  root,\n                  modalizer,\n                  groupper,\n                  mover,\n                  groupperBeforeMover,\n                  modalizerInGroupper,\n                  rtl: checkRtl ? !!dirRightToLeft : undefined,\n                  uncontrolled,\n                  excludedFromMover,\n                  ignoreKeydown: shouldIgnoreKeydown,\n              }\n            : undefined;\n    }\n\n    static getRoot(\n        tabster: Types.TabsterCore,\n        element: HTMLElement\n    ): Types.Root | undefined {\n        const getParent = tabster.getParent;\n\n        for (\n            let el = element as HTMLElement | null;\n            el;\n            el = getParent(el) as HTMLElement | null\n        ) {\n            const root = getTabsterOnElement(tabster, el)?.root;\n\n            if (root) {\n                return root;\n            }\n        }\n\n        return undefined;\n    }\n\n    onRoot(root: Types.Root, removed?: boolean): void {\n        if (removed) {\n            delete this.rootById[root.uid];\n        } else {\n            this.rootById[root.uid] = root;\n        }\n    }\n\n    private _onRootDispose = (root: Root) => {\n        delete this._roots[root.id];\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    TabsterPart,\n    triggerEvent,\n    WeakHTMLElement,\n} from \"./Utils\";\n\nconst _containerHistoryLength = 10;\n\nexport abstract class DeloserItemBase<C> {\n    abstract resetFocus(): Promise<boolean>;\n    abstract belongsTo(deloser: C): boolean;\n}\n\nexport class DeloserItem extends DeloserItemBase<Types.Deloser> {\n    readonly uid: string;\n    private _tabster: Types.TabsterCore;\n    private _deloser: Types.Deloser;\n\n    constructor(tabster: Types.TabsterCore, deloser: Types.Deloser) {\n        super();\n        this.uid = deloser.uid;\n        this._tabster = tabster;\n        this._deloser = deloser;\n    }\n\n    belongsTo(deloser: Types.Deloser): boolean {\n        return deloser === this._deloser;\n    }\n\n    unshift(element: HTMLElement): void {\n        this._deloser.unshift(element);\n    }\n\n    async focusAvailable(): Promise<boolean> {\n        const available = this._deloser.findAvailable();\n        return available\n            ? this._tabster.focusedElement.focus(available)\n            : false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const getWindow = this._tabster.getWindow;\n        return getPromise(getWindow).resolve(this._deloser.resetFocus());\n    }\n}\n\nexport abstract class DeloserHistoryByRootBase<\n    I,\n    D extends DeloserItemBase<I>\n> {\n    protected _tabster: Types.TabsterCore;\n    protected _history: D[] = [];\n    readonly rootUId: string;\n\n    constructor(tabster: Types.TabsterCore, rootUId: string) {\n        this._tabster = tabster;\n        this.rootUId = rootUId;\n    }\n\n    getLength(): number {\n        return this._history.length;\n    }\n\n    removeDeloser(deloser: I): void {\n        this._history = this._history.filter((c) => !c.belongsTo(deloser));\n    }\n\n    hasDeloser(deloser: I): boolean {\n        return this._history.some((d) => d.belongsTo(deloser));\n    }\n\n    abstract focusAvailable(from: I | null): Promise<boolean>;\n    abstract resetFocus(from: I | null): Promise<boolean>;\n}\n\nclass DeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    Types.Deloser,\n    DeloserItem\n> {\n    unshiftToDeloser(deloser: Types.Deloser, element: HTMLElement): void {\n        let item: DeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new DeloserItem(this._tabster, deloser);\n        }\n\n        item.unshift(element);\n\n        this._history.unshift(item);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await i.focusAvailable())) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n        const resetQueue: { [id: string]: DeloserItem } = {};\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip && !resetQueue[i.uid]) {\n                resetQueue[i.uid] = i;\n            }\n        }\n\n        // Nothing is found, at least try to reset.\n        for (const id of Object.keys(resetQueue)) {\n            if (await resetQueue[id].resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nexport class DeloserHistory {\n    private _tabster: Types.TabsterCore;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    private _history: DeloserHistoryByRootBase<\n        unknown,\n        DeloserItemBase<unknown>\n    >[] = [];\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n    }\n\n    dispose(): void {\n        this._history = [];\n    }\n\n    process(element: HTMLElement): Types.Deloser | undefined {\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n        const rootUId = ctx && ctx.root.uid;\n        const deloser = DeloserAPI.getDeloser(this._tabster, element);\n\n        if (!rootUId || !deloser) {\n            return undefined;\n        }\n\n        const historyByRoot = this.make(\n            rootUId,\n            () => new DeloserHistoryByRoot(this._tabster, rootUId)\n        );\n\n        if (!ctx || !ctx.modalizer || ctx.modalizer?.isActive()) {\n            historyByRoot.unshiftToDeloser(deloser, element);\n        }\n\n        return deloser;\n    }\n\n    make<\n        I,\n        D extends DeloserItemBase<I>,\n        C extends DeloserHistoryByRootBase<I, D>\n    >(rootUId: string, createInstance: () => C): C {\n        let historyByRoot: C | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            const hbr = this._history[i] as C;\n\n            if (hbr.rootUId === rootUId) {\n                historyByRoot = hbr;\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!historyByRoot) {\n            historyByRoot = createInstance();\n        }\n\n        this._history.unshift(historyByRoot);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n\n        return historyByRoot;\n    }\n\n    removeDeloser(deloser: Types.Deloser): void {\n        this._history.forEach((i) => {\n            i.removeDeloser(deloser);\n        });\n\n        this._history = this._history.filter((i) => i.getLength() > 0);\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await h.focusAvailable(from))) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await h.resetFocus(from))) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    isActive?: boolean,\n    snapshotIndex?: number\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-deloser\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-deloser\",\n                    (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        (\"snapshot-\" + snapshotIndex)\n                );\n            }\n        }\n    }\n}\n\nfunction buildElementSelector(\n    element: HTMLElement,\n    withClass?: boolean,\n    withIndex?: boolean\n): string {\n    const selector: string[] = [];\n    const escapeRegExp = /(:|\\.|\\[|\\]|,|=|@)/g;\n    const escapeReplaceValue = \"\\\\$1\";\n\n    const elementId = element.getAttribute(\"id\");\n\n    if (elementId) {\n        selector.push(\n            \"#\" + elementId.replace(escapeRegExp, escapeReplaceValue)\n        );\n    }\n\n    if (withClass !== false && element.className) {\n        element.className.split(\" \").forEach((cls) => {\n            cls = cls.trim();\n\n            if (cls) {\n                selector.push(\n                    \".\" + cls.replace(escapeRegExp, escapeReplaceValue)\n                );\n            }\n        });\n    }\n\n    let index = 0;\n    let el: Element | null;\n\n    if (withIndex !== false && selector.length === 0) {\n        el = element;\n        while (el) {\n            index++;\n            el = el.previousElementSibling;\n        }\n        selector.unshift(\":nth-child(\" + index + \")\");\n    }\n\n    selector.unshift(element.tagName.toLowerCase());\n\n    return selector.join(\"\");\n}\n\nfunction buildSelector(element: HTMLElement): string | undefined {\n    if (!documentContains(element.ownerDocument, element)) {\n        return undefined;\n    }\n\n    const selector: string[] = [buildElementSelector(element)];\n\n    let el = element.parentElement;\n\n    while (el) {\n        const isBody = el.tagName === \"BODY\";\n        selector.unshift(buildElementSelector(el, false, !isBody));\n\n        if (isBody) {\n            break;\n        }\n\n        el = el.parentElement;\n    }\n\n    return selector.join(\" \");\n}\n\nexport class Deloser\n    extends TabsterPart<Types.DeloserProps>\n    implements Types.Deloser\n{\n    readonly uid: string;\n    private _isActive = false;\n    private _history: WeakHTMLElement<HTMLElement, string>[][] = [[]];\n    private _snapshotIndex = 0;\n    private _onDispose: (deloser: Deloser) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (deloser: Deloser) => void,\n        props: Types.DeloserProps\n    ) {\n        super(tabster, element, props);\n\n        this.uid = getElementUId(tabster.getWindow, element);\n        this._onDispose = onDispose;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    dispose(): void {\n        this._remove();\n\n        this._onDispose(this);\n\n        this._isActive = false;\n        this._snapshotIndex = 0;\n\n        this._props = {};\n        this._history = [];\n    }\n\n    isActive = (): boolean => {\n        return this._isActive;\n    };\n\n    setActive(active: boolean): void {\n        this._isActive = active;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    getActions(): Types.DeloserElementActions {\n        return {\n            focusDefault: this.focusDefault,\n            focusFirst: this.focusFirst,\n            resetFocus: this.resetFocus,\n            clearHistory: this.clearHistory,\n            setSnapshot: this.setSnapshot,\n            isActive: this.isActive,\n        };\n    }\n\n    setSnapshot = (index: number): void => {\n        this._snapshotIndex = index;\n\n        if (this._history.length > index + 1) {\n            this._history.splice(index + 1, this._history.length - index - 1);\n        }\n\n        if (!this._history[index]) {\n            this._history[index] = [];\n        }\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    };\n\n    focusFirst = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusFirst({ container: e });\n    };\n\n    unshift(element: HTMLElement): void {\n        let cur = this._history[this._snapshotIndex];\n\n        cur = this._history[this._snapshotIndex] = cur.filter((we) => {\n            const e = we.get();\n            return e && e !== element;\n        });\n\n        cur.unshift(\n            new WeakHTMLElement(\n                this._tabster.getWindow,\n                element,\n                buildSelector(element)\n            )\n        );\n\n        while (cur.length > _containerHistoryLength) {\n            cur.pop();\n        }\n    }\n\n    focusDefault = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusDefault(e);\n    };\n\n    resetFocus = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.resetFocus(e);\n    };\n\n    findAvailable(): HTMLElement | null {\n        const element = this._element.get();\n\n        if (!element || !this._tabster.focusable.isVisible(element)) {\n            return null;\n        }\n\n        let restoreFocusOrder = this._props.restoreFocusOrder;\n        let available: HTMLElement | null = null;\n\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n\n        if (!ctx) {\n            return null;\n        }\n\n        const root = ctx.root;\n        const rootElement = root.getElement();\n\n        if (!rootElement) {\n            return null;\n        }\n\n        if (restoreFocusOrder === undefined) {\n            restoreFocusOrder = root.getProps().restoreFocusOrder;\n        }\n\n        if (restoreFocusOrder === Types.RestoreFocusOrders.RootDefault) {\n            available = this._tabster.focusable.findDefault({\n                container: rootElement,\n            });\n        }\n\n        if (\n            !available &&\n            restoreFocusOrder === Types.RestoreFocusOrders.RootFirst\n        ) {\n            available = this._findFirst(rootElement);\n        }\n\n        if (available) {\n            return available;\n        }\n\n        const availableInHistory = this._findInHistory();\n        const availableDefault = this._tabster.focusable.findDefault({\n            container: element,\n        });\n        const availableFirst = this._findFirst(element);\n\n        if (\n            availableInHistory &&\n            restoreFocusOrder === Types.RestoreFocusOrders.History\n        ) {\n            return availableInHistory;\n        }\n\n        if (\n            availableDefault &&\n            restoreFocusOrder === Types.RestoreFocusOrders.DeloserDefault\n        ) {\n            return availableDefault;\n        }\n\n        if (\n            availableFirst &&\n            restoreFocusOrder === Types.RestoreFocusOrders.DeloserFirst\n        ) {\n            return availableFirst;\n        }\n\n        return availableDefault || availableInHistory || availableFirst || null;\n    }\n\n    clearHistory = (preserveExisting?: boolean): void => {\n        const element = this._element.get();\n\n        if (!element) {\n            this._history[this._snapshotIndex] = [];\n\n            return;\n        }\n\n        this._history[this._snapshotIndex] = this._history[\n            this._snapshotIndex\n        ].filter((we) => {\n            const e = we.get();\n            return e && preserveExisting ? element.contains(e) : false;\n        });\n    };\n\n    customFocusLostHandler(element: HTMLElement): boolean {\n        return triggerEvent(element, Types.DeloserEventName, this.getActions());\n    }\n\n    private _findInHistory(): HTMLElement | null {\n        const cur = this._history[this._snapshotIndex].slice(0);\n\n        this.clearHistory(true);\n\n        for (let i = 0; i < cur.length; i++) {\n            const we = cur[i];\n            const e = we.get();\n            const element = this._element.get();\n\n            if (e && element && element.contains(e)) {\n                if (this._tabster.focusable.isFocusable(e)) {\n                    return e;\n                }\n            } else if (!this._props.noSelectorCheck) {\n                // Element is not in the DOM, try to locate the node by it's\n                // selector. This might return not exactly the right node,\n                // but it would be easily fixable by having more detailed selectors.\n                const selector = we.getData();\n\n                if (selector && element) {\n                    let els: NodeListOf<Element>;\n\n                    try {\n                        els = element.ownerDocument.querySelectorAll(selector);\n                    } catch (e) {\n                        if (__DEV__) {\n                            // This should never happen, unless there is some bug in buildElementSelector().\n                            console.error(\n                                `Failed to querySelectorAll('${selector}')`\n                            );\n                        }\n                        continue;\n                    }\n\n                    for (let i = 0; i < els.length; i++) {\n                        const el = els[i] as HTMLElement;\n\n                        if (el && this._tabster.focusable.isFocusable(el)) {\n                            return el;\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    private _findFirst(element: HTMLElement): HTMLElement | null {\n        if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            const first = this._tabster.focusable.findFirst({\n                container: element,\n                useActiveModalizer: true,\n            });\n\n            if (first) {\n                return first;\n            }\n        }\n\n        return null;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateDeloserProps(props: Types.DeloserProps): void {\n    // TODO: Implement validation.\n}\n\nexport class DeloserAPI implements Types.DeloserAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    /**\n     * Tracks if focus is inside a deloser\n     */\n    private _inDeloser = false;\n    private _curDeloser: Types.Deloser | undefined;\n    private _history: DeloserHistory;\n    private _restoreFocusTimer: number | undefined;\n    private _isRestoringFocus = false;\n    private _isPaused = false;\n    private _autoDeloser: Types.DeloserProps | undefined;\n    private _autoDeloserInstance: Deloser | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        props?: { autoDeloser: Types.DeloserProps }\n    ) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._history = new DeloserHistory(tabster);\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n            const doc = this._win().document;\n\n            const activeElement = doc.activeElement;\n\n            if (activeElement && activeElement !== doc.body) {\n                // Adding currently focused element to the deloser history.\n                this._onFocus(activeElement as HTMLElement);\n            }\n        });\n\n        const autoDeloser = props?.autoDeloser;\n        if (autoDeloser) {\n            this._autoDeloser = autoDeloser;\n        }\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._restoreFocusTimer) {\n            win.clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (this._autoDeloserInstance) {\n            this._autoDeloserInstance.dispose();\n            delete this._autoDeloserInstance;\n            delete this._autoDeloser;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        this._history.dispose();\n\n        delete this._curDeloser;\n    }\n\n    createDeloser(\n        element: HTMLElement,\n        props: Types.DeloserProps\n    ): Types.Deloser {\n        if (__DEV__) {\n            validateDeloserProps(props);\n        }\n\n        const deloser = new Deloser(\n            this._tabster,\n            element,\n            this._onDeloserDispose,\n            props\n        );\n\n        if (\n            element.contains(\n                this._tabster.focusedElement.getFocusedElement() ?? null\n            )\n        ) {\n            this._activate(deloser);\n        }\n\n        return deloser;\n    }\n\n    getActions(element: HTMLElement): Types.DeloserElementActions | undefined {\n        for (let e: HTMLElement | null = element; e; e = e.parentElement) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (tabsterOnElement && tabsterOnElement.deloser) {\n                return tabsterOnElement.deloser.getActions();\n            }\n        }\n\n        return undefined;\n    }\n\n    pause(): void {\n        this._isPaused = true;\n\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n    }\n\n    resume(restore?: boolean): void {\n        this._isPaused = false;\n\n        if (restore) {\n            this._scheduleRestoreFocus();\n        }\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (!e) {\n            this._scheduleRestoreFocus();\n\n            return;\n        }\n\n        const deloser = this._history.process(e);\n\n        if (deloser) {\n            this._activate(deloser);\n        } else {\n            this._deactivate();\n        }\n    };\n\n    /**\n     * Activates and sets the current deloser\n     */\n    private _activate(deloser: Types.Deloser) {\n        const curDeloser = this._curDeloser;\n        if (curDeloser !== deloser) {\n            this._inDeloser = true;\n            curDeloser?.setActive(false);\n            deloser.setActive(true);\n            this._curDeloser = deloser;\n        }\n    }\n\n    /**\n     * Called when focus should no longer be in a deloser\n     */\n    private _deactivate() {\n        this._inDeloser = false;\n        this._curDeloser?.setActive(false);\n        this._curDeloser = undefined;\n    }\n\n    private _scheduleRestoreFocus(force?: boolean): void {\n        if (this._isPaused || this._isRestoringFocus) {\n            return;\n        }\n\n        const restoreFocus = async () => {\n            this._restoreFocusTimer = undefined;\n            const lastFocused =\n                this._tabster.focusedElement.getLastFocusedElement();\n\n            if (\n                !force &&\n                (this._isRestoringFocus ||\n                    !this._inDeloser ||\n                    !!lastFocused?.offsetParent)\n            ) {\n                return;\n            }\n\n            const curDeloser = this._curDeloser;\n            if (curDeloser) {\n                if (\n                    lastFocused &&\n                    curDeloser.customFocusLostHandler(lastFocused)\n                ) {\n                    return;\n                }\n\n                const el = curDeloser.findAvailable();\n\n                if (el && this._tabster.focusedElement.focus(el)) {\n                    return;\n                }\n            }\n\n            this._deactivate();\n\n            this._isRestoringFocus = true;\n\n            if (!(await this._history.focusAvailable(null))) {\n                await this._history.resetFocus(null);\n            }\n\n            this._isRestoringFocus = false;\n        };\n\n        if (force) {\n            restoreFocus();\n        } else {\n            this._restoreFocusTimer = this._win().setTimeout(restoreFocus, 100);\n        }\n    }\n\n    static getDeloser(\n        tabster: Types.TabsterCore,\n        element: HTMLElement\n    ): Types.Deloser | undefined {\n        let root: Types.Root | undefined;\n\n        for (let e: HTMLElement | null = element; e; e = e.parentElement) {\n            const tabsterOnElement = getTabsterOnElement(tabster, e);\n\n            if (tabsterOnElement) {\n                if (!root) {\n                    root = tabsterOnElement.root;\n                }\n\n                const deloser = tabsterOnElement.deloser;\n\n                if (deloser) {\n                    return deloser;\n                }\n            }\n        }\n\n        const deloserAPI = tabster.deloser && (tabster.deloser as DeloserAPI);\n\n        if (deloserAPI) {\n            if (deloserAPI._autoDeloserInstance) {\n                return deloserAPI._autoDeloserInstance;\n            }\n\n            const autoDeloserProps = deloserAPI._autoDeloser;\n\n            if (root && !deloserAPI._autoDeloserInstance && autoDeloserProps) {\n                const body = element.ownerDocument?.body;\n\n                if (body) {\n                    deloserAPI._autoDeloserInstance = new Deloser(\n                        tabster,\n                        body,\n                        (tabster.deloser as DeloserAPI)._onDeloserDispose,\n                        autoDeloserProps\n                    );\n                }\n            }\n\n            return deloserAPI._autoDeloserInstance;\n        }\n\n        return undefined;\n    }\n\n    private _onDeloserDispose = (deloser: Deloser) => {\n        this._history.removeDeloser(deloser);\n\n        if (deloser.isActive()) {\n            this._scheduleRestoreFocus();\n        }\n    };\n\n    static getHistory(instance: Types.DeloserAPI): DeloserHistory {\n        return (instance as DeloserAPI)._history;\n    }\n\n    static forceRestoreFocus(instance: Types.DeloserAPI): void {\n        (instance as DeloserAPI)._scheduleRestoreFocus(true);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"../Types\";\n\nexport abstract class Subscribable<A, B = undefined>\n    implements Types.Subscribable<A, B>\n{\n    protected _val: A | undefined;\n    private _callbacks: Types.SubscribableCallback<A, B>[] = [];\n\n    dispose(): void {\n        this._callbacks = [];\n        delete this._val;\n    }\n\n    subscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const callbacks = this._callbacks;\n        const index = callbacks.indexOf(callback);\n\n        if (index < 0) {\n            callbacks.push(callback);\n        }\n    }\n\n    subscribeFirst(callback: Types.SubscribableCallback<A, B>): void {\n        const callbacks = this._callbacks;\n        const index = callbacks.indexOf(callback);\n\n        if (index >= 0) {\n            callbacks.splice(index, 1);\n        }\n\n        callbacks.unshift(callback);\n    }\n\n    unsubscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const index = this._callbacks.indexOf(callback);\n\n        if (index >= 0) {\n            this._callbacks.splice(index, 1);\n        }\n    }\n\n    protected setVal(val: A, details: B): void {\n        if (this._val === val) {\n            return;\n        }\n\n        this._val = val;\n\n        this._callCallbacks(val, details);\n    }\n\n    protected getVal(): A | undefined {\n        return this._val;\n    }\n\n    protected trigger(val: A, details: B): void {\n        this._callCallbacks(val, details);\n    }\n\n    private _callCallbacks(val: A, details: B): void {\n        this._callbacks.forEach((callback) => callback(val, details));\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    DeloserAPI,\n    DeloserHistoryByRootBase,\n    DeloserItemBase,\n} from \"./Deloser\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport { Subscribable } from \"./State/Subscribable\";\nimport * as Types from \"./Types\";\nimport {\n    getElementUId,\n    getInstanceContext,\n    getPromise,\n    getUId,\n    getWindowUId,\n    HTMLElementWithUID,\n} from \"./Utils\";\n\nconst _transactionTimeout = 1500;\nconst _pingTimeout = 3000;\n\nconst _targetIdUp = \"up\";\n\nconst CrossOriginTransactionTypes: Types.CrossOriginTransactionTypes = {\n    Bootstrap: 1,\n    FocusElement: 2,\n    State: 3,\n    GetElement: 4,\n    RestoreFocusInDeloser: 5,\n    Ping: 6,\n};\n\ninterface CrossOriginInstanceContext {\n    ignoreKeyboardNavigationStateUpdate: boolean;\n    focusOwner?: string;\n    focusOwnerTimestamp?: number;\n    deloserByUId: { [uid: string]: Types.Deloser };\n    origOutlineSetup?: (props?: Partial<Types.OutlineProps>) => void;\n}\n\ninterface KnownTargets {\n    [id: string]: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        send: (payload: Types.CrossOriginTransactionData<any, any>) => void;\n        last?: number;\n    };\n}\n\nclass CrossOriginDeloserItem extends DeloserItemBase<CrossOriginDeloser> {\n    private _deloser: CrossOriginDeloser;\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        deloser: CrossOriginDeloser,\n        trasactions: CrossOriginTransactions\n    ) {\n        super();\n        this._deloser = deloser;\n        this._transactions = trasactions;\n    }\n\n    belongsTo(deloser: CrossOriginDeloser): boolean {\n        return deloser.deloserUId === this._deloser.deloserUId;\n    }\n\n    async focusAvailable(): Promise<boolean> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: false,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: true,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n}\n\nclass CrossOriginDeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    CrossOriginDeloser,\n    CrossOriginDeloserItem\n> {\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        rootUId: string,\n        transactions: CrossOriginTransactions\n    ) {\n        super(tabster, rootUId);\n        this._transactions = transactions;\n    }\n\n    unshift(deloser: CrossOriginDeloser): void {\n        let item: CrossOriginDeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new CrossOriginDeloserItem(\n                this._tabster,\n                deloser,\n                this._transactions\n            );\n        }\n\n        this._history.unshift(item);\n\n        this._history.splice(10, this._history.length - 10);\n    }\n\n    async focusAvailable(): Promise<boolean> {\n        for (const i of this._history) {\n            if (await i.focusAvailable()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        for (const i of this._history) {\n            if (await i.resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nabstract class CrossOriginTransaction<I, O> {\n    abstract type: Types.CrossOriginTransactionType;\n    readonly id: string;\n    readonly beginData: I;\n    readonly timeout?: number;\n    protected tabster: Types.TabsterCore;\n    protected endData: O | undefined;\n    protected owner: Types.GetWindow;\n    protected ownerId: string;\n    protected sendUp: Types.CrossOriginTransactionSend | undefined;\n    private _promise: Promise<O>;\n    protected _resolve: ((endData?: O | PromiseLike<O>) => void) | undefined;\n    private _reject: ((reason: string) => void) | undefined;\n    private _knownTargets: KnownTargets;\n    private _sentTo: Types.CrossOriginSentTo;\n    protected targetId: string | undefined;\n    private _inProgress: { [id: string]: boolean } = {};\n    private _isDone = false;\n    private _isSelfResponding = false;\n    private _sentCount = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ) {\n        this.tabster = tabster;\n        this.owner = getOwner;\n        this.ownerId = getWindowUId(getOwner());\n        this.id = getUId(getOwner());\n        this.beginData = value;\n        this._knownTargets = knownTargets;\n        this._sentTo = sentTo || { [this.ownerId]: true };\n        this.targetId = targetId;\n        this.sendUp = sendUp;\n        this.timeout = timeout;\n        this._promise = new (getPromise(getOwner))<O>((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n\n    protected getTargets(knownTargets: KnownTargets): KnownTargets | null {\n        return this.targetId === _targetIdUp\n            ? this.sendUp\n                ? { [_targetIdUp]: { send: this.sendUp } }\n                : null\n            : this.targetId\n            ? knownTargets[this.targetId]\n                ? {\n                      [this.targetId]: {\n                          send: knownTargets[this.targetId].send,\n                      },\n                  }\n                : null\n            : Object.keys(knownTargets).length === 0 && this.sendUp\n            ? { [_targetIdUp]: { send: this.sendUp } }\n            : Object.keys(knownTargets).length > 0\n            ? knownTargets\n            : null;\n    }\n\n    begin(\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>\n    ): Promise<O | undefined> {\n        const targets = this.getTargets(this._knownTargets);\n        const sentTo: Types.CrossOriginSentTo = { ...this._sentTo };\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                sentTo[id] = true;\n            }\n        }\n\n        const data: Types.CrossOriginTransactionData<I, O> = {\n            transaction: this.id,\n            type: this.type,\n            isResponse: false,\n            timestamp: Date.now(),\n            owner: this.ownerId,\n            sentto: sentTo,\n            timeout: this.timeout,\n            beginData: this.beginData,\n        };\n\n        if (this.targetId) {\n            data.target = this.targetId;\n        }\n\n        if (selfResponse) {\n            this._isSelfResponding = true;\n\n            selfResponse(data).then((value) => {\n                this._isSelfResponding = false;\n\n                if (value !== undefined) {\n                    if (!this.endData) {\n                        this.endData = value;\n                    }\n                }\n\n                if (this.endData || this._sentCount === 0) {\n                    this.end();\n                }\n            });\n        }\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                if (!(id in this._sentTo)) {\n                    this._send(targets[id].send, id, data);\n                }\n            }\n        }\n\n        if (this._sentCount === 0 && !this._isSelfResponding) {\n            this.end();\n        }\n\n        return this._promise;\n    }\n\n    private _send(\n        send: (data: Types.CrossOriginTransactionData<I, O>) => void,\n        targetId: string,\n        data: Types.CrossOriginTransactionData<I, O>\n    ) {\n        if (this._inProgress[targetId] === undefined) {\n            this._inProgress[targetId] = true;\n            this._sentCount++;\n            send(data);\n        }\n    }\n\n    end(error?: string): void {\n        if (this._isDone) {\n            return;\n        }\n\n        this._isDone = true;\n\n        if (this.endData === undefined && error) {\n            if (this._reject) {\n                this._reject(error);\n            }\n        } else if (this._resolve) {\n            this._resolve(this.endData);\n        }\n    }\n\n    onResponse(data: Types.CrossOriginTransactionData<I, O>): void {\n        const endData = data.endData;\n\n        if (endData !== undefined && !this.endData) {\n            this.endData = endData;\n        }\n\n        const inProgressId =\n            data.target === _targetIdUp ? _targetIdUp : data.owner;\n\n        if (this._inProgress[inProgressId]) {\n            this._inProgress[inProgressId] = false;\n            this._sentCount--;\n\n            if (\n                this.endData ||\n                (this._sentCount === 0 && !this._isSelfResponding)\n            ) {\n                this.end();\n            }\n        }\n    }\n}\n\ninterface CrossOriginTransactionClass<I, O> {\n    new (\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ): CrossOriginTransaction<I, O>;\n    shouldForward?(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n    makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<O | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<O>;\n    shouldSelfRespond?(\n        tabster: Types.TabsterCore,\n        data: I,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n}\n\ninterface BootstrapTransactionContents {\n    isNavigatingWithKeyboard: boolean;\n}\n\nclass BootstrapTransaction extends CrossOriginTransaction<\n    undefined,\n    BootstrapTransactionContents\n> {\n    type = CrossOriginTransactionTypes.Bootstrap;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore\n    ): Promise<BootstrapTransactionContents> {\n        return {\n            isNavigatingWithKeyboard:\n                tabster.keyboardNavigation.isNavigatingWithKeyboard(),\n        };\n    }\n}\n\ninterface CrossOriginElementDataIn {\n    uid?: string;\n    id?: string;\n    rootId?: string;\n    ownerId?: string;\n    observedName?: string;\n    /**\n     * Optionally wait if the element is accessible or focusable before returning it\n     */\n    accessibility?: Types.ObservedElementAccesibility;\n}\n\ninterface FocusElementData extends CrossOriginElementDataIn {\n    noFocusedProgrammaticallyFlag?: boolean;\n    noAccessibleCheck?: boolean;\n}\n\nclass FocusElementTransaction extends CrossOriginTransaction<\n    FocusElementData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.FocusElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static shouldForward(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow\n    ): boolean {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return !el || !tabster.focusable.isFocusable(el);\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean> {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return (\n            (!!el && tabster.focusedElement.focus(el, true)) ||\n            !!(await forwardResult)\n        );\n    }\n}\n\nconst CrossOriginStates: {\n    Focused: 1;\n    Blurred: 2;\n    Observed: 3;\n    DeadWindow: 4;\n    KeyboardNavigation: 5;\n    Outline: 6;\n} = {\n    Focused: 1,\n    Blurred: 2,\n    Observed: 3,\n    DeadWindow: 4,\n    KeyboardNavigation: 5,\n    Outline: 6,\n};\ntype CrossOriginState =\n    typeof CrossOriginStates[keyof typeof CrossOriginStates];\n\ninterface CrossOriginElementDataOut {\n    ownerUId: string;\n    uid?: string;\n    id?: string;\n    rootUId?: string;\n    deloserUId?: string;\n    observedName?: string;\n    observedDetails?: string;\n}\n\ninterface CrossOriginStateData extends CrossOriginElementDataOut {\n    state: CrossOriginState;\n    isFocusedProgrammatically?: boolean;\n    force?: boolean;\n    isNavigatingWithKeyboard?: boolean;\n    outline?: Partial<Types.OutlineProps>;\n}\n\nclass StateTransaction extends CrossOriginTransaction<\n    CrossOriginStateData,\n    true\n> {\n    type = CrossOriginTransactionTypes.State;\n\n    static shouldSelfRespond(\n        tabster: Types.TabsterCore,\n        data: CrossOriginStateData\n    ): boolean {\n        return (\n            data.state !== CrossOriginStates.DeadWindow &&\n            data.state !== CrossOriginStates.KeyboardNavigation\n        );\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<CrossOriginStateData, true>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const timestamp = data.timestamp;\n        const beginData = data.beginData;\n\n        if (timestamp && beginData) {\n            switch (beginData.state) {\n                case CrossOriginStates.Focused:\n                    return StateTransaction._makeFocusedResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions,\n                        isSelfResponse\n                    );\n                case CrossOriginStates.Blurred:\n                    return StateTransaction._makeBlurredResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions.ctx\n                    );\n                case CrossOriginStates.Observed:\n                    return StateTransaction._makeObservedResponse(\n                        tabster,\n                        beginData\n                    );\n                case CrossOriginStates.DeadWindow:\n                    return StateTransaction._makeDeadWindowResponse(\n                        tabster,\n                        beginData,\n                        transactions,\n                        forwardResult\n                    );\n                case CrossOriginStates.KeyboardNavigation:\n                    return StateTransaction._makeKeyboardNavigationResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.isNavigatingWithKeyboard\n                    );\n                case CrossOriginStates.Outline:\n                    return StateTransaction._makeOutlineResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.outline\n                    );\n            }\n        }\n\n        return true;\n    }\n\n    static createElement(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginElementDataOut\n    ): CrossOriginElement | null {\n        return beginData.uid\n            ? new CrossOriginElement(\n                  tabster,\n                  beginData.uid,\n                  beginData.ownerUId,\n                  beginData.id,\n                  beginData.rootUId,\n                  beginData.observedName,\n                  beginData.observedDetails\n              )\n            : null;\n    }\n\n    private static async _makeFocusedResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (beginData && beginData.ownerUId && element) {\n            transactions.ctx.focusOwner = beginData.ownerUId;\n            transactions.ctx.focusOwnerTimestamp = timestamp;\n\n            if (!isSelfResponse && beginData.rootUId && beginData.deloserUId) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    const history = DeloserAPI.getHistory(deloserAPI);\n\n                    const deloser: CrossOriginDeloser = {\n                        ownerUId: beginData.ownerUId,\n                        deloserUId: beginData.deloserUId,\n                        rootUId: beginData.rootUId,\n                    };\n\n                    const historyItem = history.make(\n                        beginData.rootUId,\n                        () =>\n                            new CrossOriginDeloserHistoryByRoot(\n                                tabster,\n                                deloser.rootUId,\n                                transactions\n                            )\n                    );\n\n                    historyItem.unshift(deloser);\n                }\n            }\n\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                element,\n                {\n                    isFocusedProgrammatically:\n                        beginData.isFocusedProgrammatically,\n                }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeBlurredResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        context: CrossOriginInstanceContext\n    ): Promise<true> {\n        if (\n            beginData &&\n            (beginData.ownerUId === context.focusOwner || beginData.force) &&\n            (!context.focusOwnerTimestamp ||\n                context.focusOwnerTimestamp < timestamp)\n        ) {\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                undefined,\n                {}\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeObservedResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData\n    ): Promise<true> {\n        const name = beginData.observedName;\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (name && element) {\n            CrossOriginObservedElementState.trigger(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.observedElement,\n                element,\n                { names: [name], details: beginData.observedDetails }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeDeadWindowResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>\n    ): Promise<true> {\n        const deadUId = beginData && beginData.ownerUId;\n\n        if (deadUId) {\n            transactions.removeTarget(deadUId);\n        }\n\n        return forwardResult.then(() => {\n            if (deadUId === transactions.ctx.focusOwner) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n            return true;\n        });\n    }\n\n    private static async _makeKeyboardNavigationResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        isNavigatingWithKeyboard?: boolean\n    ): Promise<true> {\n        if (\n            isNavigatingWithKeyboard !== undefined &&\n            tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                isNavigatingWithKeyboard\n        ) {\n            context.ignoreKeyboardNavigationStateUpdate = true;\n            tabster.keyboardNavigation.setNavigatingWithKeyboard(\n                isNavigatingWithKeyboard\n            );\n            context.ignoreKeyboardNavigationStateUpdate = false;\n        }\n        return true;\n    }\n\n    private static async _makeOutlineResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        props?: Partial<Types.OutlineProps>\n    ): Promise<true> {\n        if (context.origOutlineSetup) {\n            context.origOutlineSetup.call(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.outline!,\n                props\n            );\n        }\n        return true;\n    }\n}\n\nclass GetElementTransaction extends CrossOriginTransaction<\n    CrossOriginElementDataIn | undefined,\n    CrossOriginElementDataOut\n> {\n    type = CrossOriginTransactionTypes.GetElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static findElement(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        data?: CrossOriginElementDataIn\n    ): HTMLElement | null {\n        let element: HTMLElement | null | undefined;\n\n        if (\n            data &&\n            (!data.ownerId || data.ownerId === getWindowUId(getOwner()))\n        ) {\n            if (data.id) {\n                element = getOwner().document.getElementById(data.id);\n\n                if (element && data.rootId) {\n                    const ctx = RootAPI.getTabsterContext(tabster, element);\n\n                    if (!ctx || ctx.root.uid !== data.rootId) {\n                        return null;\n                    }\n                }\n            } else if (data.uid) {\n                const ref = getInstanceContext(getOwner).elementByUId[data.uid];\n                element = ref && ref.get();\n            } else if (data.observedName) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                element = tabster.observedElement!.getElement(\n                    data.observedName,\n                    data.accessibility\n                );\n            }\n        }\n\n        return element || null;\n    }\n\n    static getElementData(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext,\n        ownerUId: string\n    ): CrossOriginElementDataOut {\n        const deloser = DeloserAPI.getDeloser(tabster, element);\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const tabsterOnElement = getTabsterOnElement(tabster, element);\n        const observed = tabsterOnElement && tabsterOnElement.observed;\n\n        return {\n            uid: getElementUId(getOwner, element),\n            ownerUId,\n            id: element.id || undefined,\n            rootUId: ctx ? ctx.root.uid : undefined,\n            deloserUId: deloser\n                ? getDeloserUID(getOwner, context, deloser)\n                : undefined,\n            observedName: observed && observed.names && observed.names[0],\n            observedDetails: observed && observed.details,\n        };\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            CrossOriginElementDataIn | undefined,\n            CrossOriginElementDataOut\n        >,\n        getOwner: Types.GetWindow,\n        ownerUId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<CrossOriginElementDataOut | undefined>\n    ): Promise<CrossOriginElementDataOut | undefined> {\n        const beginData = data.beginData;\n        let element: HTMLElement | undefined;\n        let dataOut: CrossOriginElementDataOut | undefined;\n\n        if (beginData === undefined) {\n            element = tabster.focusedElement.getFocusedElement();\n        } else if (beginData) {\n            element =\n                GetElementTransaction.findElement(\n                    tabster,\n                    getOwner,\n                    beginData\n                ) || undefined;\n        }\n\n        if (!element && beginData) {\n            const name = beginData.observedName;\n            const timeout = data.timeout;\n            const accessibility = beginData.accessibility;\n\n            if (name && timeout) {\n                const e: {\n                    element?: HTMLElement | null;\n                    crossOrigin?: CrossOriginElementDataOut;\n                } = await new (getPromise(getOwner))((resolve) => {\n                    let isWaitElementResolved = false;\n                    let isForwardResolved = false;\n                    let isResolved = false;\n\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    tabster\n                        .observedElement!.waitElement(\n                            name,\n                            timeout,\n                            accessibility\n                        )\n                        .result.then((value) => {\n                            isWaitElementResolved = true;\n\n                            if (!isResolved && (value || isForwardResolved)) {\n                                isResolved = true;\n                                resolve({ element: value });\n                            }\n                        });\n\n                    forwardResult.then((value) => {\n                        isForwardResolved = true;\n\n                        if (!isResolved && (value || isWaitElementResolved)) {\n                            isResolved = true;\n                            resolve({ crossOrigin: value });\n                        }\n                    });\n                });\n\n                if (e.element) {\n                    element = e.element;\n                } else if (e.crossOrigin) {\n                    dataOut = e.crossOrigin;\n                }\n            }\n        }\n\n        return element\n            ? GetElementTransaction.getElementData(\n                  tabster,\n                  element,\n                  getOwner,\n                  transactions.ctx,\n                  ownerUId\n              )\n            : dataOut;\n    }\n}\n\ninterface CrossOriginDeloser {\n    ownerUId: string;\n    deloserUId: string;\n    rootUId: string;\n}\n\ninterface RestoreFocusInDeloserTransactionData extends CrossOriginDeloser {\n    reset: boolean;\n}\n\nclass RestoreFocusInDeloserTransaction extends CrossOriginTransaction<\n    RestoreFocusInDeloserTransactionData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.RestoreFocusInDeloser;\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            RestoreFocusInDeloserTransactionData,\n            boolean\n        >,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean> {\n        const forwardRet = await forwardResult;\n        const begin = !forwardRet && data.beginData;\n        const uid = begin && begin.deloserUId;\n        const deloser = uid && transactions.ctx.deloserByUId[uid];\n        const deloserAPI = tabster.deloser;\n\n        if (begin && deloser && deloserAPI) {\n            const history = DeloserAPI.getHistory(deloserAPI);\n            return begin.reset\n                ? history.resetFocus(deloser)\n                : history.focusAvailable(deloser);\n        }\n\n        return !!forwardRet;\n    }\n}\n\nclass PingTransaction extends CrossOriginTransaction<undefined, true> {\n    type = CrossOriginTransactionTypes.Ping;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(): Promise<true> {\n        return true;\n    }\n}\n\ninterface CrossOriginTransactionWrapper<I, O> {\n    transaction: CrossOriginTransaction<I, O>;\n    timer?: number;\n}\n\nclass CrossOriginTransactions {\n    private _owner: Types.GetWindow;\n    private _ownerUId: string;\n    private _knownTargets: KnownTargets = {};\n    private _transactions: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        [id: string]: CrossOriginTransactionWrapper<any, any>;\n    } = {};\n    private _tabster: Types.TabsterCore;\n    private _pingTimer: number | undefined;\n    private _isDefaultSendUp = false;\n    private _deadPromise: Promise<true | undefined> | undefined;\n    isSetUp = false;\n    sendUp: Types.CrossOriginTransactionSend | undefined;\n    ctx: CrossOriginInstanceContext;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext\n    ) {\n        this._tabster = tabster;\n        this._owner = getOwner;\n        this._ownerUId = getWindowUId(getOwner());\n        this.ctx = context;\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp) {\n            if (__DEV__) {\n                console.error(\"CrossOrigin is already set up.\");\n            }\n        } else {\n            this.isSetUp = true;\n\n            this.setSendUp(sendUp);\n\n            this._owner().addEventListener(\"pagehide\", this._onPageHide);\n\n            this._ping();\n        }\n\n        return this._onMessage;\n    }\n\n    setSendUp(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (!this.isSetUp) {\n            throw new Error(\"CrossOrigin is not set up.\");\n        }\n\n        this.sendUp = sendUp || undefined;\n\n        const owner = this._owner();\n\n        if (sendUp === undefined) {\n            if (!this._isDefaultSendUp) {\n                if (owner.document) {\n                    this._isDefaultSendUp = true;\n\n                    if (\n                        owner.parent &&\n                        owner.parent !== owner &&\n                        owner.parent.postMessage\n                    ) {\n                        this.sendUp = (\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            data: Types.CrossOriginTransactionData<any, any>\n                        ) => {\n                            owner.parent.postMessage(JSON.stringify(data), \"*\");\n                        };\n                    }\n\n                    owner.addEventListener(\"message\", this._onBrowserMessage);\n                }\n            }\n        } else if (this._isDefaultSendUp) {\n            owner.removeEventListener(\"message\", this._onBrowserMessage);\n            this._isDefaultSendUp = false;\n        }\n\n        return this._onMessage;\n    }\n\n    async dispose(): Promise<void> {\n        const owner = this._owner();\n\n        if (this._pingTimer) {\n            owner.clearTimeout(this._pingTimer);\n            this._pingTimer = undefined;\n        }\n\n        owner.removeEventListener(\"message\", this._onBrowserMessage);\n        owner.removeEventListener(\"pagehide\", this._onPageHide);\n\n        await this._dead();\n\n        delete this._deadPromise;\n\n        for (const id of Object.keys(this._transactions)) {\n            const t = this._transactions[id];\n\n            if (t.timer) {\n                owner.clearTimeout(t.timer);\n                delete t.timer;\n            }\n\n            t.transaction.end();\n        }\n\n        this._knownTargets = {};\n\n        delete this.sendUp;\n    }\n\n    beginTransaction<I, O>(\n        Transaction: CrossOriginTransactionClass<I, O>,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        if (!this._owner) {\n            return getPromise(this._owner).reject();\n        }\n\n        const transaction = new Transaction(\n            this._tabster,\n            this._owner,\n            this._knownTargets,\n            value,\n            timeout,\n            sentTo,\n            targetId,\n            this.sendUp\n        );\n        let selfResponse:\n            | ((\n                  data: Types.CrossOriginTransactionData<I, O>\n              ) => Promise<O | undefined>)\n            | undefined;\n\n        if (\n            Transaction.shouldSelfRespond &&\n            Transaction.shouldSelfRespond(\n                this._tabster,\n                value,\n                this._owner,\n                this._ownerUId\n            )\n        ) {\n            selfResponse = (data: Types.CrossOriginTransactionData<I, O>) => {\n                return Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    getPromise(this._owner).resolve(undefined),\n                    true\n                );\n            };\n        }\n\n        return this._beginTransaction(\n            transaction,\n            timeout,\n            selfResponse,\n            withReject\n        );\n    }\n\n    removeTarget(uid: string): void {\n        delete this._knownTargets[uid];\n    }\n\n    private _beginTransaction<I, O>(\n        transaction: CrossOriginTransaction<I, O>,\n        timeout?: number,\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        const owner = this._owner();\n\n        const wrapper: CrossOriginTransactionWrapper<I, O> = {\n            transaction,\n            timer: owner.setTimeout(() => {\n                delete wrapper.timer;\n                transaction.end(\"Cross origin transaction timed out.\");\n            }, _transactionTimeout + (timeout || 0)),\n        };\n\n        this._transactions[transaction.id] = wrapper;\n\n        const ret = transaction.begin(selfResponse);\n\n        ret.catch(() => {\n            /**/\n        }).finally(() => {\n            if (wrapper.timer) {\n                owner.clearTimeout(wrapper.timer);\n            }\n            delete this._transactions[transaction.id];\n        });\n\n        return ret.then(\n            (value) => value,\n            withReject ? undefined : () => undefined\n        );\n    }\n\n    forwardTransaction(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data: Types.CrossOriginTransactionData<any, any>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): Promise<any> {\n        const owner = this._owner;\n        let targetId = data.target;\n\n        if (targetId === this._ownerUId) {\n            return getPromise(owner).resolve();\n        }\n\n        const Transaction = this._getTransactionClass(data.type);\n\n        if (Transaction) {\n            if (\n                Transaction.shouldForward === undefined ||\n                Transaction.shouldForward(\n                    this._tabster,\n                    data,\n                    owner,\n                    this._ownerUId\n                )\n            ) {\n                const sentTo = data.sentto;\n\n                if (targetId === _targetIdUp) {\n                    targetId = undefined;\n                    sentTo[this._ownerUId] = true;\n                }\n\n                delete sentTo[_targetIdUp];\n\n                return this._beginTransaction(\n                    new Transaction(\n                        this._tabster,\n                        owner,\n                        this._knownTargets,\n                        data.beginData,\n                        data.timeout,\n                        sentTo,\n                        targetId,\n                        this.sendUp\n                    ),\n                    data.timeout\n                );\n            } else {\n                return getPromise(owner).resolve();\n            }\n        }\n\n        return getPromise(owner).reject(\n            `Unknown transaction type ${data.type}`\n        );\n    }\n\n    private _getTransactionClass(\n        type: Types.CrossOriginTransactionType\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): CrossOriginTransactionClass<any, any> | null {\n        switch (type) {\n            case CrossOriginTransactionTypes.Bootstrap:\n                return BootstrapTransaction;\n            case CrossOriginTransactionTypes.FocusElement:\n                return FocusElementTransaction;\n            case CrossOriginTransactionTypes.State:\n                return StateTransaction;\n            case CrossOriginTransactionTypes.GetElement:\n                return GetElementTransaction;\n            case CrossOriginTransactionTypes.RestoreFocusInDeloser:\n                return RestoreFocusInDeloserTransaction;\n            case CrossOriginTransactionTypes.Ping:\n                return PingTransaction;\n            default:\n                return null;\n        }\n    }\n\n    private _onMessage = (e: Types.CrossOriginMessage) => {\n        if (e.data.owner === this._ownerUId || !this._tabster) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const data: Types.CrossOriginTransactionData<any, any> = e.data;\n        let transactionId: string;\n\n        if (\n            !data ||\n            !(transactionId = data.transaction) ||\n            !data.type ||\n            !data.timestamp ||\n            !data.owner ||\n            !data.sentto\n        ) {\n            return;\n        }\n\n        let knownTarget = this._knownTargets[data.owner];\n\n        if (!knownTarget && e.send && data.owner !== this._ownerUId) {\n            knownTarget = this._knownTargets[data.owner] = { send: e.send };\n        }\n\n        if (knownTarget) {\n            knownTarget.last = Date.now();\n        }\n\n        if (data.isResponse) {\n            const t = this._transactions[transactionId];\n\n            if (t && t.transaction && t.transaction.type === data.type) {\n                t.transaction.onResponse(data);\n            }\n        } else {\n            const Transaction = this._getTransactionClass(data.type);\n\n            const forwardResult = this.forwardTransaction(data);\n\n            if (Transaction && e.send) {\n                Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    forwardResult,\n                    false\n                ).then((r) => {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    const response: Types.CrossOriginTransactionData<any, any> =\n                        {\n                            transaction: data.transaction,\n                            type: data.type,\n                            isResponse: true,\n                            timestamp: Date.now(),\n                            owner: this._ownerUId,\n                            timeout: data.timeout,\n                            sentto: {},\n                            target:\n                                data.target === _targetIdUp\n                                    ? _targetIdUp\n                                    : data.owner,\n                            endData: r,\n                        };\n\n                    e.send(response);\n                });\n            }\n        }\n    };\n\n    private _onPageHide = () => {\n        this._dead();\n    };\n\n    private async _dead(): Promise<void> {\n        if (!this._deadPromise && this.ctx.focusOwner === this._ownerUId) {\n            this._deadPromise = this.beginTransaction(StateTransaction, {\n                ownerUId: this._ownerUId,\n                state: CrossOriginStates.DeadWindow,\n            });\n        }\n\n        if (this._deadPromise) {\n            await this._deadPromise;\n        }\n    }\n\n    private async _ping(): Promise<void> {\n        if (this._pingTimer) {\n            return;\n        }\n\n        let deadWindows: { [key: string]: boolean } | undefined;\n        const now = Date.now();\n        const targets = Object.keys(this._knownTargets).filter(\n            (uid) => now - (this._knownTargets[uid].last || 0) > _pingTimeout\n        );\n\n        if (this.sendUp) {\n            targets.push(_targetIdUp);\n        }\n\n        if (targets.length) {\n            await getPromise(this._owner).all(\n                targets.map((uid) =>\n                    this.beginTransaction(\n                        PingTransaction,\n                        undefined,\n                        undefined,\n                        undefined,\n                        uid,\n                        true\n                    ).then(\n                        () => true,\n                        () => {\n                            if (uid !== _targetIdUp) {\n                                if (!deadWindows) {\n                                    deadWindows = {};\n                                }\n                                deadWindows[uid] = true;\n                                delete this._knownTargets[uid];\n                            }\n                            return false;\n                        }\n                    )\n                )\n            );\n        }\n\n        if (deadWindows) {\n            const focused = await this.beginTransaction(\n                GetElementTransaction,\n                undefined\n            );\n\n            if (\n                !focused &&\n                this.ctx.focusOwner &&\n                this.ctx.focusOwner in deadWindows\n            ) {\n                await this.beginTransaction(StateTransaction, {\n                    ownerUId: this._ownerUId,\n                    state: CrossOriginStates.Blurred,\n                    force: true,\n                });\n\n                const deloserAPI = this._tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n        }\n\n        this._pingTimer = this._owner().setTimeout(() => {\n            this._pingTimer = undefined;\n            this._ping();\n        }, _pingTimeout);\n    }\n\n    private _onBrowserMessage = (e: MessageEvent) => {\n        if (e.source === this._owner()) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const send = (data: Types.CrossOriginTransactionData<any, any>) => {\n            if (e.source && e.source.postMessage) {\n                // eslint-disable-next-line @typescript-eslint/ban-types\n                (e.source.postMessage as Function)(JSON.stringify(data), \"*\");\n            }\n        };\n\n        try {\n            this._onMessage({\n                data: JSON.parse(e.data),\n                send,\n            });\n        } catch (e) {\n            /* Ignore */\n        }\n    };\n}\n\nexport class CrossOriginElement implements Types.CrossOriginElement {\n    private _tabster: Types.TabsterCore;\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        uid: string,\n        ownerId: string,\n        id?: string,\n        rootId?: string,\n        observedName?: string,\n        observedDetails?: string\n    ) {\n        this._tabster = tabster;\n        this.uid = uid;\n        this.ownerId = ownerId;\n        this.id = id;\n        this.rootId = rootId;\n        this.observedName = observedName;\n        this.observedDetails = observedDetails;\n    }\n\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this._tabster.crossOrigin!.focusedElement.focus(\n            this,\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n}\n\nexport class CrossOriginFocusedElementState\n    extends Subscribable<\n        CrossOriginElement | undefined,\n        Types.FocusedElementDetails\n    >\n    implements Types.CrossOriginFocusedElementState\n{\n    private _transactions: CrossOriginTransactions;\n\n    constructor(transactions: CrossOriginTransactions) {\n        super();\n        this._transactions = transactions;\n    }\n\n    async focus(\n        element: Types.CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            {\n                uid: element.uid,\n                id: element.id,\n                rootId: element.rootId,\n                ownerId: element.ownerId,\n                observedName: element.observedName,\n            },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { id: elementId, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { observedName, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck,\n            timeout\n        );\n    }\n\n    private async _focus(\n        elementData: CrossOriginElementDataIn,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean,\n        timeout?: number\n    ): Promise<boolean> {\n        return this._transactions\n            .beginTransaction(\n                FocusElementTransaction,\n                {\n                    ...elementData,\n                    noFocusedProgrammaticallyFlag,\n                    noAccessibleCheck,\n                },\n                timeout\n            )\n            .then((value) => !!value);\n    }\n\n    static setVal(\n        instance: Types.CrossOriginFocusedElementState,\n        val: CrossOriginElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void {\n        (instance as CrossOriginFocusedElementState).setVal(val, details);\n    }\n}\n\nexport class CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, Types.ObservedElementProps>\n    implements Types.CrossOriginObservedElementState\n{\n    private _tabster: Types.TabsterCore;\n    private _transactions: CrossOriginTransactions;\n    private _lastRequestFocusId = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        transactions: CrossOriginTransactions\n    ) {\n        super();\n        this._tabster = tabster;\n        this._transactions = transactions;\n    }\n\n    async getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null> {\n        return this.waitElement(observedName, 0, accessibility);\n    }\n\n    async waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null> {\n        return this._transactions\n            .beginTransaction(\n                GetElementTransaction,\n                {\n                    observedName,\n                    accessibility,\n                },\n                timeout\n            )\n            .then((value) =>\n                value\n                    ? StateTransaction.createElement(this._tabster, value)\n                    : null\n            );\n    }\n\n    async requestFocus(\n        observedName: string,\n        timeout: number\n    ): Promise<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        return this.waitElement(\n            observedName,\n            timeout,\n            Types.ObservedElementAccesibilities.Focusable\n        ).then((element) =>\n            this._lastRequestFocusId === requestId && element\n                ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                  this._tabster.crossOrigin!.focusedElement.focus(element, true)\n                : false\n        );\n    }\n\n    static trigger(\n        instance: Types.CrossOriginObservedElementState,\n        element: CrossOriginElement,\n        details: Types.ObservedElementProps\n    ): void {\n        (instance as CrossOriginObservedElementState).trigger(element, details);\n    }\n}\n\nexport class CrossOriginAPI implements Types.CrossOriginAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _transactions: CrossOriginTransactions;\n    private _blurTimer: number | undefined;\n    private _ctx: CrossOriginInstanceContext;\n\n    focusedElement: Types.CrossOriginFocusedElementState;\n    observedElement: Types.CrossOriginObservedElementState;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._ctx = {\n            ignoreKeyboardNavigationStateUpdate: false,\n            deloserByUId: {},\n        };\n\n        this._transactions = new CrossOriginTransactions(\n            tabster,\n            this._win,\n            this._ctx\n        );\n        this.focusedElement = new CrossOriginFocusedElementState(\n            this._transactions\n        );\n        this.observedElement = new CrossOriginObservedElementState(\n            tabster,\n            this._transactions\n        );\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp()) {\n            return this._transactions.setSendUp(sendUp);\n        } else {\n            this._tabster.queueInit(this._init);\n            return this._transactions.setup(sendUp);\n        }\n    }\n\n    isSetUp(): boolean {\n        return this._transactions.isSetUp;\n    }\n\n    private _init = (): void => {\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.subscribe(this._onFocus);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        tabster.observedElement!.subscribe(this._onObserved);\n\n        if (!this._ctx.origOutlineSetup) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this._ctx.origOutlineSetup = tabster.outline!.setup;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            tabster.outline!.setup = this._outlineSetup;\n        }\n\n        this._transactions\n            .beginTransaction(\n                BootstrapTransaction,\n                undefined,\n                undefined,\n                undefined,\n                _targetIdUp\n            )\n            .then((data) => {\n                if (\n                    data &&\n                    this._tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                        data.isNavigatingWithKeyboard\n                ) {\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = true;\n                    this._tabster.keyboardNavigation.setNavigatingWithKeyboard(\n                        data.isNavigatingWithKeyboard\n                    );\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = false;\n                }\n            });\n    };\n\n    dispose(): void {\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.unsubscribe(this._onFocus);\n        tabster.observedElement?.unsubscribe(this._onObserved);\n\n        this._transactions.dispose();\n        this.focusedElement.dispose();\n        this.observedElement.dispose();\n\n        this._ctx.deloserByUId = {};\n    }\n\n    private _onKeyboardNavigationStateChanged = (value: boolean): void => {\n        if (!this._ctx.ignoreKeyboardNavigationStateUpdate) {\n            this._transactions.beginTransaction(StateTransaction, {\n                state: CrossOriginStates.KeyboardNavigation,\n                ownerUId: getWindowUId(this._win()),\n                isNavigatingWithKeyboard: value,\n            });\n        }\n    };\n\n    private _onFocus = (element: HTMLElementWithUID | undefined): void => {\n        const win = this._win();\n\n        const ownerUId = getWindowUId(win);\n\n        if (this._blurTimer) {\n            win.clearTimeout(this._blurTimer);\n            this._blurTimer = undefined;\n        }\n\n        if (element) {\n            this._transactions.beginTransaction(StateTransaction, {\n                ...GetElementTransaction.getElementData(\n                    this._tabster,\n                    element,\n                    this._win,\n                    this._ctx,\n                    ownerUId\n                ),\n                state: CrossOriginStates.Focused,\n            });\n        } else {\n            this._blurTimer = win.setTimeout(() => {\n                this._blurTimer = undefined;\n\n                if (this._ctx.focusOwner && this._ctx.focusOwner === ownerUId) {\n                    this._transactions\n                        .beginTransaction(GetElementTransaction, undefined)\n                        .then((value) => {\n                            if (!value && this._ctx.focusOwner === ownerUId) {\n                                this._transactions.beginTransaction(\n                                    StateTransaction,\n                                    {\n                                        ownerUId,\n                                        state: CrossOriginStates.Blurred,\n                                        force: false,\n                                    }\n                                );\n                            }\n                        });\n                }\n            }, 0);\n        }\n    };\n\n    private _onObserved = (\n        element: HTMLElement,\n        details: Types.ObservedElementProps\n    ): void => {\n        const d = GetElementTransaction.getElementData(\n            this._tabster,\n            element,\n            this._win,\n            this._ctx,\n            getWindowUId(this._win())\n        ) as CrossOriginStateData;\n\n        d.state = CrossOriginStates.Observed;\n        d.observedName = details.names?.[0];\n        d.observedDetails = details.details;\n\n        this._transactions.beginTransaction(StateTransaction, d);\n    };\n\n    private _outlineSetup = (props?: Partial<Types.OutlineProps>): void => {\n        this._transactions.beginTransaction(StateTransaction, {\n            state: CrossOriginStates.Outline,\n            ownerUId: getWindowUId(this._win()),\n            outline: props,\n        });\n    };\n}\n\nfunction getDeloserUID(\n    getWindow: Types.GetWindow,\n    context: CrossOriginInstanceContext,\n    deloser: Types.Deloser\n): string | undefined {\n    const deloserElement = deloser.getElement();\n\n    if (deloserElement) {\n        const uid = getElementUId(getWindow, deloserElement);\n\n        if (!context.deloserByUId[uid]) {\n            context.deloserByUId[uid] = deloser;\n        }\n\n        return uid;\n    }\n\n    return undefined;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    createElementTreeWalker,\n    getLastChild,\n    matchesSelector,\n    shouldIgnoreFocus,\n    HTMLElementWithDummyContainer,\n} from \"./Utils\";\n\nexport class FocusableAPI implements Types.FocusableAPI {\n    private _tabster: Types.TabsterCore;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n    }\n\n    dispose(): void {\n        /**/\n    }\n\n    getProps(element: HTMLElement): Types.FocusableProps {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n        return (tabsterOnElement && tabsterOnElement.focusable) || {};\n    }\n\n    isFocusable(\n        el: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean {\n        if (\n            matchesSelector(el, Types.FocusableSelector) &&\n            (includeProgrammaticallyFocusable || el.tabIndex !== -1)\n        ) {\n            return (\n                (noVisibleCheck || this.isVisible(el)) &&\n                (noAccessibleCheck || this.isAccessible(el))\n            );\n        }\n\n        return false;\n    }\n\n    isVisible(el: HTMLElement): boolean {\n        if (!el.ownerDocument || el.nodeType !== Node.ELEMENT_NODE) {\n            return false;\n        }\n\n        if (el.offsetParent === null && el.ownerDocument.body !== el) {\n            return false;\n        }\n\n        const win = el.ownerDocument.defaultView;\n\n        if (!win) {\n            return false;\n        }\n\n        const rect = el.ownerDocument.body.getBoundingClientRect();\n\n        if (rect.width === 0 && rect.height === 0) {\n            // This might happen, for example, if our <body> is in hidden <iframe>.\n            return false;\n        }\n\n        const computedStyle = win.getComputedStyle(el);\n\n        if (computedStyle.visibility === \"hidden\") {\n            return false;\n        }\n\n        return true;\n    }\n\n    isAccessible(el: HTMLElement): boolean {\n        for (let e: HTMLElement | null = el; e; e = e.parentElement) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (this._isHidden(e)) {\n                return false;\n            }\n\n            const ignoreDisabled =\n                tabsterOnElement?.focusable?.ignoreAriaDisabled;\n\n            if (!ignoreDisabled && this._isDisabled(e)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private _isDisabled(el: HTMLElement): boolean {\n        return el.hasAttribute(\"disabled\");\n    }\n\n    private _isHidden(el: HTMLElement): boolean {\n        const attrVal = el.getAttribute(\"aria-hidden\");\n\n        if (attrVal && attrVal.toLowerCase() === \"true\") {\n            if (!this._tabster.modalizer?.isAugmented(el)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    findFirst(\n        options: Types.FindFirstProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement(\n            {\n                ...options,\n            },\n            out\n        );\n    }\n\n    findLast(\n        options: Types.FindFirstProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement(\n            {\n                isBackward: true,\n                ...options,\n            },\n            out\n        );\n    }\n\n    findNext(\n        options: Types.FindNextProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement({ ...options }, out);\n    }\n\n    findPrev(\n        options: Types.FindNextProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement({ ...options, isBackward: true }, out);\n    }\n\n    findDefault(\n        options: Types.FindDefaultProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null {\n        return (\n            this.findElement(\n                {\n                    ...options,\n                    acceptCondition: (el) =>\n                        this.isFocusable(\n                            el,\n                            options.includeProgrammaticallyFocusable\n                        ) && !!this.getProps(el).isDefault,\n                },\n                out\n            ) || null\n        );\n    }\n\n    findAll(options: Types.FindAllProps): HTMLElement[] {\n        return this._findElements(true, options) || [];\n    }\n\n    findElement(\n        options: Types.FindFocusableProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        const found = this._findElements(false, options, out);\n        return found ? found[0] : found;\n    }\n\n    private _findElements(\n        findAll: boolean,\n        options: Types.FindFocusableProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement[] | null | undefined {\n        const {\n            container,\n            currentElement = null,\n            includeProgrammaticallyFocusable,\n            useActiveModalizer,\n            ignoreAccessibility,\n            modalizerId,\n            isBackward,\n            onElement,\n        } = options;\n\n        if (!out) {\n            out = {};\n        }\n\n        const elements: HTMLElement[] = [];\n\n        let { acceptCondition } = options;\n        const hasCustomCondition = !!acceptCondition;\n\n        if (!container) {\n            return null;\n        }\n\n        if (!acceptCondition) {\n            acceptCondition = (el) =>\n                this.isFocusable(\n                    el,\n                    includeProgrammaticallyFocusable,\n                    false,\n                    ignoreAccessibility\n                );\n        }\n\n        const acceptElementState: Types.FocusableAcceptElementState = {\n            container,\n            modalizerUserId:\n                modalizerId === undefined && useActiveModalizer\n                    ? this._tabster.modalizer?.activeId\n                    : modalizerId ||\n                      RootAPI.getTabsterContext(this._tabster, container)\n                          ?.modalizer?.userId,\n            from: currentElement || container,\n            isBackward,\n            acceptCondition,\n            hasCustomCondition,\n            includeProgrammaticallyFocusable,\n            ignoreAccessibility,\n            cachedGrouppers: {},\n        };\n\n        const walker = createElementTreeWalker(\n            container.ownerDocument,\n            container,\n            (node) =>\n                this._acceptElement(node as HTMLElement, acceptElementState)\n        );\n\n        if (!walker) {\n            return null;\n        }\n\n        const prepareForNextElement = (\n            shouldContinueIfNotFound?: boolean\n        ): boolean => {\n            const foundElement =\n                acceptElementState.foundElement ??\n                acceptElementState.foundBackward;\n\n            if (foundElement) {\n                elements.push(foundElement);\n            }\n\n            if (findAll) {\n                if (foundElement) {\n                    acceptElementState.found = false;\n                    delete acceptElementState.foundElement;\n                    delete acceptElementState.foundBackward;\n                    delete acceptElementState.fromCtx;\n                    acceptElementState.from = foundElement;\n\n                    if (onElement && !onElement(foundElement)) {\n                        return false;\n                    }\n                }\n\n                return !!(foundElement || shouldContinueIfNotFound);\n            } else {\n                if (foundElement && out) {\n                    out.uncontrolled = RootAPI.getTabsterContext(\n                        this._tabster,\n                        foundElement\n                    )?.uncontrolled;\n                }\n\n                return !!(shouldContinueIfNotFound && !foundElement);\n            }\n        };\n\n        if (!currentElement) {\n            out.outOfDOMOrder = true;\n        }\n\n        if (currentElement) {\n            walker.currentNode = currentElement;\n        } else if (isBackward) {\n            const lastChild = getLastChild(container);\n\n            if (!lastChild) {\n                return null;\n            }\n\n            if (\n                this._acceptElement(lastChild, acceptElementState) ===\n                    NodeFilter.FILTER_ACCEPT &&\n                !prepareForNextElement(true)\n            ) {\n                if (acceptElementState.skippedFocusable) {\n                    out.outOfDOMOrder = true;\n                }\n\n                return elements;\n            }\n\n            walker.currentNode = lastChild;\n        }\n\n        do {\n            if (isBackward) {\n                walker.previousNode();\n            } else {\n                walker.nextNode();\n            }\n        } while (prepareForNextElement());\n\n        if (acceptElementState.skippedFocusable) {\n            out.outOfDOMOrder = true;\n        }\n\n        return elements.length ? elements : null;\n    }\n\n    private _acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number {\n        if (state.found) {\n            return NodeFilter.FILTER_ACCEPT;\n        }\n\n        const foundBackward = state.foundBackward;\n\n        if (\n            foundBackward &&\n            (element === foundBackward || !foundBackward.contains(element))\n        ) {\n            state.found = true;\n            state.foundElement = foundBackward;\n            return NodeFilter.FILTER_ACCEPT;\n        }\n\n        const container = state.container;\n\n        if (element === container) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (!container.contains(element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        if (\n            (element as HTMLElementWithDummyContainer).__tabsterDummyContainer\n        ) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        if (state.rejectElementsFrom?.contains(element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        const ctx = (state.currentCtx = RootAPI.getTabsterContext(\n            this._tabster,\n            element\n        ));\n\n        // Tabster is opt in, if it is not managed, don't try and get do anything special\n        if (!ctx) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (shouldIgnoreFocus(element)) {\n            if (this.isFocusable(element, undefined, true, true)) {\n                state.skippedFocusable = true;\n            }\n\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        // We assume iframes are focusable because native tab behaviour would tab inside.\n        // But we do it only during the standard search when there is no custom accept\n        // element condition.\n        if (\n            !state.hasCustomCondition &&\n            (element.tagName === \"IFRAME\" || element.tagName === \"WEBVIEW\")\n        ) {\n            if (ctx.modalizer?.userId === this._tabster.modalizer?.activeId) {\n                state.found = true;\n                state.rejectElementsFrom = state.foundElement = element;\n\n                return NodeFilter.FILTER_ACCEPT;\n            } else {\n                return NodeFilter.FILTER_REJECT;\n            }\n        }\n\n        if (!state.ignoreAccessibility && !this.isAccessible(element)) {\n            if (this.isFocusable(element, false, true, true)) {\n                state.skippedFocusable = true;\n            }\n\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        let result: number | undefined;\n\n        let fromCtx = state.fromCtx;\n\n        if (!fromCtx) {\n            fromCtx = state.fromCtx = RootAPI.getTabsterContext(\n                this._tabster,\n                state.from\n            );\n        }\n\n        const fromMover = fromCtx?.mover;\n        let groupper = ctx.groupper;\n        let mover = ctx.mover;\n\n        result = this._tabster.modalizer?.acceptElement(element, state);\n\n        if (result !== undefined) {\n            state.skippedFocusable = true;\n        }\n\n        if (result === undefined && (groupper || mover || fromMover)) {\n            const groupperElement = groupper?.getElement();\n            const fromMoverElement = fromMover?.getElement();\n            let moverElement = mover?.getElement();\n\n            if (\n                moverElement &&\n                fromMoverElement?.contains(moverElement) &&\n                container.contains(fromMoverElement) &&\n                (!groupperElement ||\n                    !mover ||\n                    fromMoverElement.contains(groupperElement))\n            ) {\n                mover = fromMover;\n                moverElement = fromMoverElement;\n            }\n\n            if (\n                groupperElement &&\n                (groupperElement === container ||\n                    !container.contains(groupperElement))\n            ) {\n                groupper = undefined;\n            }\n\n            if (moverElement && !container.contains(moverElement)) {\n                mover = undefined;\n            }\n\n            if (groupper && mover) {\n                if (\n                    moverElement &&\n                    groupperElement &&\n                    !groupperElement.contains(moverElement)\n                ) {\n                    mover = undefined;\n                } else {\n                    groupper = undefined;\n                }\n            }\n\n            if (groupper) {\n                result = groupper.acceptElement(element, state);\n            }\n\n            if (mover) {\n                result = mover.acceptElement(element, state);\n            }\n        }\n\n        if (result === undefined) {\n            result = state.acceptCondition(element)\n                ? NodeFilter.FILTER_ACCEPT\n                : NodeFilter.FILTER_SKIP;\n\n            if (\n                result === NodeFilter.FILTER_SKIP &&\n                this.isFocusable(element, false, true, true)\n            ) {\n                state.skippedFocusable = true;\n            }\n        }\n\n        if (result === NodeFilter.FILTER_ACCEPT && !state.found) {\n            if (state.isBackward) {\n                // When TreeWalker goes backwards, it visits the container first,\n                // then it goes inside. So, if the container is accepted, we remember it,\n                // but allowing the TreeWalker to check inside.\n                state.foundBackward = element;\n                result = NodeFilter.FILTER_SKIP;\n            } else {\n                state.found = true;\n                state.foundElement = element;\n            }\n        }\n\n        return result;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const Keys: {\n    Tab: 9;\n    Enter: 13;\n    Esc: 27;\n    Space: 32;\n    PageUp: 33;\n    PageDown: 34;\n    End: 35;\n    Home: 36;\n    Left: 37;\n    Up: 38;\n    Right: 39;\n    Down: 40;\n} = {\n    Tab: 9,\n    Enter: 13,\n    Esc: 27,\n    Space: 32,\n    PageUp: 33,\n    PageDown: 34,\n    End: 35,\n    Home: 36,\n    Left: 37,\n    Up: 38,\n    Right: 39,\n    Down: 40,\n};\n\nexport type Key = typeof Keys[keyof typeof Keys];\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { KeyborgFocusInEvent, KEYBORG_FOCUSIN, nativeFocus } from \"keyborg\";\n\nimport { Keys } from \"../Keys\";\nimport { RootAPI } from \"../Root\";\nimport * as Types from \"../Types\";\nimport {\n    documentContains,\n    DummyInputManager,\n    getLastChild,\n    shouldIgnoreFocus,\n    WeakHTMLElement,\n    triggerEvent,\n} from \"../Utils\";\nimport { getTabsterOnElement } from \"../Instance\";\nimport { Subscribable } from \"./Subscribable\";\n\nfunction getUncontrolledCompletelyContainer(\n    tabster: Types.TabsterCore,\n    element: HTMLElement\n): HTMLElement | undefined {\n    const getParent = tabster.getParent;\n    let el: HTMLElement | null = element;\n\n    do {\n        const uncontrolledOnElement = getTabsterOnElement(\n            tabster,\n            el\n        )?.uncontrolled;\n\n        if (\n            uncontrolledOnElement &&\n            tabster.uncontrolled.isUncontrolledCompletely(\n                el,\n                !!uncontrolledOnElement.completely\n            )\n        ) {\n            return el;\n        }\n\n        el = getParent(el) as HTMLElement | null;\n    } while (el);\n\n    return undefined;\n}\n\nexport class FocusedElementState\n    extends Subscribable<HTMLElement | undefined, Types.FocusedElementDetails>\n    implements Types.FocusedElementState\n{\n    private static _lastResetElement: WeakHTMLElement | undefined;\n    private static _isTabbingTimer: number | undefined;\n    static isTabbing = false;\n\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _nextVal:\n        | {\n              element: WeakHTMLElement | undefined;\n              details: Types.FocusedElementDetails;\n          }\n        | undefined;\n    private _lastVal: WeakHTMLElement | undefined;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        super();\n\n        this._tabster = tabster;\n        this._win = getWindow;\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n        const doc = win.document;\n\n        // Add these event listeners as capture - we want Tabster to run before user event handlers\n        doc.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\n        doc.addEventListener(\"focusout\", this._onFocusOut, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n\n        const activeElement = doc.activeElement;\n\n        if (activeElement && activeElement !== doc.body) {\n            this._setFocusedElement(activeElement as HTMLElement);\n        }\n\n        this.subscribe(this._onChanged);\n    };\n\n    dispose(): void {\n        super.dispose();\n\n        const win = this._win();\n\n        win.document.removeEventListener(\n            KEYBORG_FOCUSIN,\n            this._onFocusIn,\n            true\n        );\n        win.document.removeEventListener(\"focusout\", this._onFocusOut, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        this.unsubscribe(this._onChanged);\n\n        delete FocusedElementState._lastResetElement;\n\n        delete this._nextVal;\n        delete this._lastVal;\n    }\n\n    static forgetMemorized(\n        instance: Types.FocusedElementState,\n        parent: HTMLElement\n    ): void {\n        let wel = FocusedElementState._lastResetElement;\n        let el = wel && wel.get();\n        if (el && parent.contains(el)) {\n            delete FocusedElementState._lastResetElement;\n        }\n\n        el = (instance as FocusedElementState)._nextVal?.element?.get();\n        if (el && parent.contains(el)) {\n            delete (instance as FocusedElementState)._nextVal;\n        }\n\n        wel = (instance as FocusedElementState)._lastVal;\n        el = wel && wel.get();\n        if (el && parent.contains(el)) {\n            delete (instance as FocusedElementState)._lastVal;\n        }\n    }\n\n    getFocusedElement(): HTMLElement | undefined {\n        return this.getVal();\n    }\n\n    getLastFocusedElement(): HTMLElement | undefined {\n        let el = this._lastVal?.get();\n\n        if (!el || (el && !documentContains(el.ownerDocument, el))) {\n            this._lastVal = el = undefined;\n        }\n\n        return el;\n    }\n\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean {\n        if (\n            !this._tabster.focusable.isFocusable(\n                element,\n                noFocusedProgrammaticallyFlag,\n                false,\n                noAccessibleCheck\n            )\n        ) {\n            return false;\n        }\n\n        element.focus();\n\n        return true;\n    }\n\n    focusDefault(container: HTMLElement): boolean {\n        const el = this._tabster.focusable.findDefault({ container });\n\n        if (el) {\n            this._tabster.focusedElement.focus(el);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    getFirstOrLastTabbable(\n        isFirst: boolean,\n        props: Pick<\n            Types.FindFocusableProps,\n            \"container\" | \"ignoreAccessibility\"\n        >\n    ): HTMLElement | undefined {\n        const { container, ignoreAccessibility } = props;\n        let toFocus: HTMLElement | null | undefined;\n\n        if (container) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            if (ctx) {\n                toFocus = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    container,\n                    undefined,\n                    undefined,\n                    !isFirst,\n                    ignoreAccessibility\n                )?.element;\n            }\n        }\n\n        if (toFocus && !container?.contains(toFocus)) {\n            toFocus = undefined;\n        }\n\n        return toFocus || undefined;\n    }\n\n    private _focusFirstOrLast(\n        isFirst: boolean,\n        props: Types.FindFirstProps\n    ): boolean {\n        const toFocus = this.getFirstOrLastTabbable(isFirst, props);\n\n        if (toFocus) {\n            this.focus(toFocus, false, true);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    focusFirst(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(true, props);\n    }\n\n    focusLast(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(false, props);\n    }\n\n    resetFocus(container: HTMLElement): boolean {\n        if (!this._tabster.focusable.isVisible(container)) {\n            return false;\n        }\n\n        if (!this._tabster.focusable.isFocusable(container, true, true, true)) {\n            const prevTabIndex = container.getAttribute(\"tabindex\");\n            const prevAriaHidden = container.getAttribute(\"aria-hidden\");\n\n            container.tabIndex = -1;\n            container.setAttribute(\"aria-hidden\", \"true\");\n\n            FocusedElementState._lastResetElement = new WeakHTMLElement(\n                this._win,\n                container\n            );\n\n            this.focus(container, true, true);\n\n            this._setOrRemoveAttribute(container, \"tabindex\", prevTabIndex);\n            this._setOrRemoveAttribute(\n                container,\n                \"aria-hidden\",\n                prevAriaHidden\n            );\n        } else {\n            this.focus(container);\n        }\n\n        return true;\n    }\n\n    private _setOrRemoveAttribute(\n        element: HTMLElement,\n        name: string,\n        value: string | null\n    ): void {\n        if (value === null) {\n            element.removeAttribute(name);\n        } else {\n            element.setAttribute(name, value);\n        }\n    }\n\n    private _setFocusedElement(\n        element?: HTMLElement,\n        relatedTarget?: HTMLElement,\n        isFocusedProgrammatically?: boolean\n    ): void {\n        if (this._tabster._noop) {\n            return;\n        }\n\n        const details: Types.FocusedElementDetails = { relatedTarget };\n\n        if (element) {\n            const lastResetElement =\n                FocusedElementState._lastResetElement?.get();\n            FocusedElementState._lastResetElement = undefined;\n\n            if (lastResetElement === element || shouldIgnoreFocus(element)) {\n                return;\n            }\n\n            details.isFocusedProgrammatically = isFocusedProgrammatically;\n\n            const ctx = RootAPI.getTabsterContext(this._tabster, element);\n\n            const modalizerId = ctx?.modalizer?.userId;\n\n            if (modalizerId) {\n                details.modalizerId = modalizerId;\n            }\n        }\n\n        const nextVal = (this._nextVal = {\n            element: element\n                ? new WeakHTMLElement(this._win, element)\n                : undefined,\n            details,\n        });\n\n        if (element && element !== this._val) {\n            this._validateFocusedElement(element);\n        }\n\n        // _validateFocusedElement() might cause the refocus which will trigger\n        // another call to this function. Making sure that the value is correct.\n        if (this._nextVal === nextVal) {\n            this.setVal(element, details);\n        }\n\n        this._nextVal = undefined;\n    }\n\n    protected setVal(\n        val: HTMLElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void {\n        super.setVal(val, details);\n\n        if (val) {\n            this._lastVal = new WeakHTMLElement(this._win, val);\n        }\n    }\n\n    private _onFocusIn = (e: KeyborgFocusInEvent): void => {\n        this._setFocusedElement(\n            e.target as HTMLElement,\n            e.details.relatedTarget as HTMLElement | undefined,\n            e.details.isFocusedProgrammatically\n        );\n    };\n\n    private _onFocusOut = (e: FocusEvent): void => {\n        this._setFocusedElement(\n            undefined,\n            e.relatedTarget as HTMLElement | undefined\n        );\n    };\n\n    static findNextTabbable(\n        tabster: Types.TabsterCore,\n        ctx: Types.TabsterContext,\n        container?: HTMLElement,\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const actualContainer = container || ctx.root.getElement();\n\n        if (!actualContainer) {\n            return null;\n        }\n\n        let next: Types.NextTabbable | null = null;\n\n        const isTabbingTimer = FocusedElementState._isTabbingTimer;\n        const win = tabster.getWindow();\n\n        if (isTabbingTimer) {\n            win.clearTimeout(isTabbingTimer);\n        }\n\n        FocusedElementState.isTabbing = true;\n        FocusedElementState._isTabbingTimer = win.setTimeout(() => {\n            delete FocusedElementState._isTabbingTimer;\n            FocusedElementState.isTabbing = false;\n        }, 0);\n\n        const modalizer = ctx.modalizer;\n        const groupper = ctx.groupper;\n        const mover = ctx.mover;\n\n        const callFindNext = (\n            what: Types.Groupper | Types.Mover | Types.Modalizer\n        ) => {\n            next = what.findNextTabbable(\n                currentElement,\n                referenceElement,\n                isBackward,\n                ignoreAccessibility\n            );\n\n            if (currentElement && !next?.element) {\n                const parentElement =\n                    what !== modalizer && what.getElement()?.parentElement;\n\n                if (parentElement) {\n                    const parentCtx = RootAPI.getTabsterContext(\n                        tabster,\n                        currentElement,\n                        { referenceElement: parentElement }\n                    );\n\n                    if (parentCtx) {\n                        const currentScopeElement = what.getElement();\n                        const newCurrent = isBackward\n                            ? currentScopeElement\n                            : (currentScopeElement &&\n                                  getLastChild(currentScopeElement)) ||\n                              currentScopeElement;\n\n                        if (newCurrent) {\n                            next = FocusedElementState.findNextTabbable(\n                                tabster,\n                                parentCtx,\n                                container,\n                                newCurrent,\n                                parentElement,\n                                isBackward,\n                                ignoreAccessibility\n                            );\n\n                            if (next) {\n                                next.outOfDOMOrder = true;\n                            }\n                        }\n                    }\n                }\n            }\n        };\n\n        if (groupper && mover) {\n            callFindNext(ctx.groupperBeforeMover ? groupper : mover);\n        } else if (groupper) {\n            callFindNext(groupper);\n        } else if (mover) {\n            callFindNext(mover);\n        } else if (modalizer) {\n            callFindNext(modalizer);\n        } else {\n            const findProps: Types.FindNextProps = {\n                container: actualContainer,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            const nextElement = tabster.focusable[\n                isBackward ? \"findPrev\" : \"findNext\"\n            ](findProps, findPropsOut);\n\n            next = {\n                element: nextElement,\n                outOfDOMOrder: findPropsOut.outOfDOMOrder,\n                uncontrolled: findPropsOut.uncontrolled,\n            };\n        }\n\n        return next;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private _validateFocusedElement = (element: HTMLElement): void => {\n        // TODO: Make sure this is not needed anymore and write tests.\n    };\n\n    private _onKeyDown = (e: KeyboardEvent): void => {\n        if (e.keyCode !== Keys.Tab || e.ctrlKey) {\n            return;\n        }\n\n        const currentElement = this.getVal();\n\n        if (\n            !currentElement ||\n            !currentElement.ownerDocument ||\n            currentElement.contentEditable === \"true\"\n        ) {\n            return;\n        }\n\n        const tabster = this._tabster;\n        const controlTab = tabster.controlTab;\n        const ctx = RootAPI.getTabsterContext(tabster, currentElement);\n\n        if (!ctx || ctx.ignoreKeydown(e)) {\n            return;\n        }\n\n        const isBackward = e.shiftKey;\n\n        const next = FocusedElementState.findNextTabbable(\n            tabster,\n            ctx,\n            undefined,\n            currentElement,\n            undefined,\n            isBackward,\n            true\n        );\n\n        const nextElement = next?.element;\n        const uncontrolledCompletelyContainer =\n            getUncontrolledCompletelyContainer(tabster, currentElement);\n\n        if (nextElement) {\n            const nextUncontrolled = next.uncontrolled;\n\n            if (\n                ctx.uncontrolled ||\n                nextUncontrolled?.contains(currentElement)\n            ) {\n                if (\n                    (!next.outOfDOMOrder &&\n                        nextUncontrolled === ctx.uncontrolled) ||\n                    (uncontrolledCompletelyContainer &&\n                        !uncontrolledCompletelyContainer.contains(nextElement))\n                ) {\n                    // Nothing to do, everything will be done by the browser or something\n                    // that controls the uncontrolled area.\n                    return;\n                }\n\n                // We are in uncontrolled area. We allow whatever controls it to move\n                // focus, but we add a phantom dummy to make sure the focus is moved\n                // to the correct place if the uncontrolled area allows default action.\n                // We only need that in the controlled mode, because in uncontrolled\n                // mode we have dummy inputs around everything that redirects focus.\n                DummyInputManager.addPhantomDummyWithTarget(\n                    tabster,\n                    currentElement,\n                    isBackward,\n                    nextElement\n                );\n\n                return;\n            }\n\n            if (nextUncontrolled || nextElement.tagName === \"IFRAME\") {\n                // For iframes and uncontrolled areas we always want to use default action to\n                // move focus into.\n                DummyInputManager.moveWithPhantomDummy(\n                    this._tabster,\n                    nextUncontrolled ?? nextElement,\n                    false,\n                    isBackward\n                );\n\n                return;\n            }\n\n            if (controlTab || next?.outOfDOMOrder) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n\n                nativeFocus(nextElement);\n            } else {\n                // We are in uncontrolled mode and the next element is in DOM order.\n                // Just allow the default action.\n            }\n        } else {\n            if (!uncontrolledCompletelyContainer) {\n                ctx.root.moveOutWithDefaultAction(isBackward);\n            }\n        }\n    };\n\n    _onChanged = (\n        element: HTMLElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void => {\n        if (element) {\n            triggerEvent(element, Types.FocusInEventName, details);\n        } else {\n            const last = this._lastVal?.get();\n\n            if (last) {\n                const d = { ...details };\n                const lastCtx = RootAPI.getTabsterContext(this._tabster, last);\n                const modalizerId = lastCtx?.modalizer?.userId;\n\n                if (modalizerId) {\n                    d.modalizerId = modalizerId;\n                }\n\n                triggerEvent(last, Types.FocusOutEventName, d);\n            }\n        }\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    HTMLElementWithDummyContainer,\n    TabsterPart,\n    WeakHTMLElement,\n    getAdjacentElement,\n} from \"./Utils\";\n\nclass GroupperDummyManager extends DummyInputManager {\n    constructor(\n        element: WeakHTMLElement,\n        groupper: Groupper,\n        tabster: Types.TabsterCore,\n        sys: Types.SysProps | undefined\n    ) {\n        super(\n            tabster,\n            element,\n            DummyInputManagerPriorities.Groupper,\n            sys,\n            true\n        );\n\n        this._setHandlers(\n            (\n                dummyInput: DummyInput,\n                isBackward: boolean,\n                relatedTarget: HTMLElement | null\n            ) => {\n                const container = element.get();\n                const input = dummyInput.input;\n\n                if (container && input) {\n                    const ctx = RootAPI.getTabsterContext(tabster, input);\n\n                    if (ctx) {\n                        let next: HTMLElement | null | undefined;\n\n                        next = groupper.findNextTabbable(\n                            relatedTarget || undefined,\n                            undefined,\n                            isBackward,\n                            true\n                        )?.element;\n\n                        if (!next) {\n                            next = FocusedElementState.findNextTabbable(\n                                tabster,\n                                ctx,\n                                undefined,\n                                dummyInput.isOutside\n                                    ? input\n                                    : getAdjacentElement(\n                                          container,\n                                          !isBackward\n                                      ),\n                                undefined,\n                                isBackward,\n                                true\n                            )?.element;\n                        }\n\n                        if (next) {\n                            nativeFocus(next);\n                        }\n                    }\n                }\n            }\n        );\n    }\n}\n\nexport class Groupper\n    extends TabsterPart<Types.GroupperProps>\n    implements Types.Groupper\n{\n    private _shouldTabInside = false;\n    private _first: WeakHTMLElement | undefined;\n    private _onDispose: (groupper: Groupper) => void;\n\n    dummyManager: GroupperDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (groupper: Groupper) => void,\n        props: Types.GroupperProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n        this.makeTabbable(false);\n\n        this._onDispose = onDispose;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new GroupperDummyManager(\n                this._element,\n                this,\n                tabster,\n                sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const element = this._element.get();\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n\n        if (element) {\n            if (__DEV__) {\n                _setInformativeStyle(this._element, true);\n            }\n        }\n\n        delete this._first;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const groupperElement = this.getElement();\n\n        if (!groupperElement) {\n            return null;\n        }\n\n        const currentIsDummy =\n            (\n                currentElement as HTMLElementWithDummyContainer\n            )?.__tabsterDummyContainer?.get() === groupperElement;\n\n        if (\n            !this._shouldTabInside &&\n            currentElement &&\n            groupperElement.contains(currentElement) &&\n            !currentIsDummy\n        ) {\n            return { element: undefined, outOfDOMOrder: true };\n        }\n\n        const groupperFirstFocusable = this.getFirst(true);\n\n        if (\n            !currentElement ||\n            !groupperElement.contains(currentElement) ||\n            currentIsDummy\n        ) {\n            return {\n                element: groupperFirstFocusable,\n                outOfDOMOrder: true,\n            };\n        }\n\n        const tabster = this._tabster;\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        if (this._shouldTabInside && groupperFirstFocusable) {\n            const findProps: Types.FindNextProps = {\n                container: groupperElement,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = tabster.focusable[isBackward ? \"findPrev\" : \"findNext\"](\n                findProps,\n                findPropsOut\n            );\n\n            outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n\n            if (\n                !next &&\n                this._props.tabbability ===\n                    Types.GroupperTabbabilities.LimitedTrapFocus\n            ) {\n                next = tabster.focusable[isBackward ? \"findLast\" : \"findFirst\"](\n                    {\n                        container: groupperElement,\n                        ignoreAccessibility,\n                        useActiveModalizer: true,\n                    },\n                    findPropsOut\n                );\n\n                outOfDOMOrder = true;\n            }\n\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    makeTabbable(isTabbable: boolean): void {\n        this._shouldTabInside = isTabbable || !this._props.tabbability;\n\n        if (__DEV__) {\n            _setInformativeStyle(this._element, !this._shouldTabInside);\n        }\n    }\n\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined {\n        const element = this.getElement() || null;\n        let isParentActive = true;\n\n        for (let e = element?.parentElement; e; e = e.parentElement) {\n            const g = getTabsterOnElement(this._tabster, e)?.groupper as\n                | Groupper\n                | undefined;\n\n            if (g) {\n                if (!g._shouldTabInside) {\n                    isParentActive = false;\n                }\n            }\n        }\n\n        let ret = isParentActive\n            ? this._props.tabbability\n                ? this._shouldTabInside\n                : false\n            : undefined;\n\n        if (ret && noIfFirstIsFocused) {\n            const focused = this._tabster.focusedElement.getFocusedElement();\n\n            if (focused) {\n                ret = focused !== this.getFirst(true);\n            }\n        }\n\n        return ret;\n    }\n\n    getFirst(orContainer: boolean): HTMLElement | undefined {\n        const groupperElement = this.getElement();\n        let first: HTMLElement | undefined;\n\n        if (groupperElement) {\n            if (\n                orContainer &&\n                this._tabster.focusable.isFocusable(groupperElement)\n            ) {\n                return groupperElement;\n            }\n\n            first = this._first?.get();\n\n            if (!first) {\n                first =\n                    this._tabster.focusable.findFirst({\n                        container: groupperElement,\n                        useActiveModalizer: true,\n                    }) || undefined;\n\n                if (first) {\n                    this.setFirst(first);\n                }\n            }\n        }\n\n        return first;\n    }\n\n    setFirst(element: HTMLElement | undefined): void {\n        if (element) {\n            this._first = new WeakHTMLElement(this._tabster.getWindow, element);\n        } else {\n            delete this._first;\n        }\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        const cachedGrouppers = state.cachedGrouppers;\n\n        const parentElement = this.getElement()?.parentElement;\n        const parentCtx =\n            parentElement &&\n            RootAPI.getTabsterContext(this._tabster, parentElement);\n        const parentCtxGroupper = parentCtx?.groupper;\n        const parentGroupper = parentCtx?.groupperBeforeMover\n            ? parentCtxGroupper\n            : undefined;\n        let parentGroupperElement: HTMLElement | undefined;\n\n        const getIsActive = (groupper: Types.Groupper) => {\n            let cached = cachedGrouppers[groupper.id];\n            let isActive: boolean | undefined;\n\n            if (cached) {\n                isActive = cached.isActive;\n            } else {\n                isActive = this.isActive(true);\n\n                cached = cachedGrouppers[groupper.id] = {\n                    isActive,\n                };\n            }\n\n            return isActive;\n        };\n\n        if (parentGroupper) {\n            parentGroupperElement = parentGroupper.getElement();\n\n            if (\n                !getIsActive(parentGroupper) &&\n                parentGroupperElement &&\n                state.container !== parentGroupperElement &&\n                state.container.contains(parentGroupperElement)\n            ) {\n                // Do not fall into a child groupper of inactive parent groupper if it's in the scope of the search.\n                state.skippedFocusable = true;\n                return NodeFilter.FILTER_REJECT;\n            }\n        }\n\n        const isActive = getIsActive(this);\n        const groupperElement = this.getElement();\n\n        if (groupperElement) {\n            if (isActive !== true) {\n                if (groupperElement === element && parentCtxGroupper) {\n                    if (!parentGroupperElement) {\n                        parentGroupperElement = parentCtxGroupper.getElement();\n                    }\n\n                    if (\n                        parentGroupperElement &&\n                        !getIsActive(parentCtxGroupper) &&\n                        state.container.contains(parentGroupperElement) &&\n                        parentGroupperElement !== state.container\n                    ) {\n                        state.skippedFocusable = true;\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                }\n\n                if (\n                    groupperElement !== element &&\n                    groupperElement.contains(element)\n                ) {\n                    state.skippedFocusable = true;\n                    return NodeFilter.FILTER_REJECT;\n                }\n\n                const cached = cachedGrouppers[this.id];\n                let first: HTMLElement | null | undefined;\n\n                if (\"first\" in cached) {\n                    first = cached.first;\n                } else {\n                    first = cached.first = this.getFirst(true);\n                }\n\n                if (first && state.acceptCondition(first)) {\n                    state.rejectElementsFrom = groupperElement;\n                    state.skippedFocusable = true;\n\n                    if (first !== state.from) {\n                        state.found = true;\n                        state.foundElement = first;\n                        return NodeFilter.FILTER_ACCEPT;\n                    } else {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                }\n            }\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateGroupperProps(props: Types.GroupperProps): void {\n    // TODO: Implement validation.\n}\n\nexport class GroupperAPI implements Types.GroupperAPI {\n    private _tabster: Types.TabsterCore;\n    private _updateTimer: number | undefined;\n    private _win: Types.GetWindow;\n    private _current: Record<string, Types.Groupper> = {};\n    private _grouppers: Record<string, Types.Groupper> = {};\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n\n        // Making sure groupper's onFocus is called before modalizer's onFocus.\n        this._tabster.focusedElement.subscribeFirst(this._onFocus);\n\n        win.document.addEventListener(\"mousedown\", this._onMouseDown, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        this._current = {};\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.document.removeEventListener(\"mousedown\", this._onMouseDown, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        Object.keys(this._grouppers).forEach((groupperId) => {\n            if (this._grouppers[groupperId]) {\n                this._grouppers[groupperId].dispose();\n                delete this._grouppers[groupperId];\n            }\n        });\n    }\n\n    createGroupper(\n        element: HTMLElement,\n        props: Types.GroupperProps,\n        sys: Types.SysProps | undefined\n    ) {\n        if (__DEV__) {\n            validateGroupperProps(props);\n        }\n\n        const newGroupper = new Groupper(\n            this._tabster,\n            element,\n            this._onGroupperDispose,\n            props,\n            sys\n        );\n\n        this._grouppers[newGroupper.id] = newGroupper;\n\n        const focusedElement = this._tabster.focusedElement.getFocusedElement();\n\n        // Newly created groupper contains currently focused element, update the state on the next tick (to\n        // make sure all grouppers are processed).\n        if (\n            focusedElement &&\n            element.contains(focusedElement) &&\n            !this._updateTimer\n        ) {\n            this._updateTimer = this._win().setTimeout(() => {\n                delete this._updateTimer;\n                // Making sure the focused element hasn't changed.\n                if (\n                    focusedElement ===\n                    this._tabster.focusedElement.getFocusedElement()\n                ) {\n                    this._updateCurrent(focusedElement, true, true);\n                }\n            }, 0);\n        }\n\n        return newGroupper;\n    }\n\n    forgetCurrentGrouppers(): void {\n        this._current = {};\n    }\n\n    private _onGroupperDispose = (groupper: Groupper) => {\n        delete this._grouppers[groupper.id];\n    };\n\n    private _onFocus = (element: HTMLElement | undefined): void => {\n        if (element) {\n            this._updateCurrent(element, true, true);\n        }\n    };\n\n    private _onMouseDown = (e: MouseEvent): void => {\n        if (e.target) {\n            this._updateCurrent(e.target as HTMLElement, true);\n        }\n    };\n\n    private _updateCurrent(\n        element: HTMLElement,\n        includeTarget?: boolean,\n        checkTarget?: boolean\n    ): void {\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        const newIds: Record<string, true> = {};\n\n        let isTarget = true;\n\n        for (\n            let el = element as HTMLElement | null;\n            el;\n            el = el.parentElement\n        ) {\n            const groupper = getTabsterOnElement(this._tabster, el)?.groupper;\n\n            if (groupper) {\n                newIds[groupper.id] = true;\n\n                if (isTarget && checkTarget && el !== element) {\n                    isTarget = false;\n                }\n\n                if (includeTarget || !isTarget) {\n                    this._current[groupper.id] = groupper;\n                    const isTabbable =\n                        groupper.isActive() ||\n                        (element !== el &&\n                            (!groupper.getProps().delegated ||\n                                groupper.getFirst(false) !== element));\n\n                    groupper.makeTabbable(isTabbable);\n                }\n\n                isTarget = false;\n            }\n        }\n\n        for (const id of Object.keys(this._current)) {\n            const groupper = this._current[id];\n\n            if (!(groupper.id in newIds)) {\n                groupper.makeTabbable(false);\n                groupper.setFirst(undefined);\n                delete this._current[id];\n            }\n        }\n    }\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.keyCode !== Keys.Enter && event.keyCode !== Keys.Esc) {\n            return;\n        }\n\n        // Give a chance to other listeners to handle the event.\n        if (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\n            return;\n        }\n\n        const element = this._tabster.focusedElement.getFocusedElement();\n\n        if (element) {\n            this.handleKeyPress(element, event);\n        }\n    };\n\n    handleKeyPress(\n        element: HTMLElement,\n        event: KeyboardEvent,\n        noGoUp?: boolean\n    ): void {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const modalizerInGroupper = ctx?.modalizerInGroupper;\n        let groupper = ctx?.groupper || modalizerInGroupper;\n\n        if (ctx && groupper) {\n            if (ctx.ignoreKeydown(event)) {\n                return;\n            }\n\n            let next: HTMLElement | null | undefined;\n\n            const groupperElement = groupper.getElement();\n\n            if (event.keyCode === Keys.Enter) {\n                if (\n                    groupperElement &&\n                    (element === groupperElement ||\n                        (groupper.getProps().delegated &&\n                            element === groupper.getFirst(false)))\n                ) {\n                    next = tabster.focusable.findNext({\n                        container: groupperElement,\n                        currentElement: element,\n                        useActiveModalizer: true,\n                    });\n                }\n            } else if (event.keyCode === Keys.Esc) {\n                if (groupperElement && groupperElement.contains(element)) {\n                    if (element !== groupperElement || noGoUp) {\n                        next = groupper.getFirst(true);\n                    } else {\n                        const parentElement = groupperElement.parentElement;\n                        const parentCtx = parentElement\n                            ? RootAPI.getTabsterContext(tabster, parentElement)\n                            : undefined;\n\n                        groupper = parentCtx?.groupper;\n                        next = groupper?.getFirst(true);\n                    }\n                }\n\n                if (groupper) {\n                    groupper.makeTabbable(false);\n\n                    if (modalizerInGroupper) {\n                        tabster.modalizer?.setActive(undefined);\n                    }\n                }\n            }\n\n            if (next) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n\n                next.focus();\n            }\n        }\n    }\n}\n\nfunction _setInformativeStyle(\n    weakElement: Types.WeakHTMLElement,\n    remove: boolean\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-groupper\");\n            } else {\n                element.style.setProperty(\"--tabster-groupper\", \"unlimited\");\n            }\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { createKeyborg, disposeKeyborg, Keyborg } from \"keyborg\";\n\nimport * as Types from \"../Types\";\nimport { Subscribable } from \"./Subscribable\";\n\nexport class KeyboardNavigationState\n    extends Subscribable<boolean>\n    implements Types.KeyboardNavigationState\n{\n    private _keyborg?: Keyborg;\n\n    constructor(getWindow: Types.GetWindow) {\n        super();\n        this._keyborg = createKeyborg(getWindow());\n        this._keyborg.subscribe(this._onChange);\n    }\n\n    dispose(): void {\n        super.dispose();\n\n        if (this._keyborg) {\n            this._keyborg.unsubscribe(this._onChange);\n\n            disposeKeyborg(this._keyborg);\n\n            delete this._keyborg;\n        }\n    }\n\n    private _onChange = (isNavigatingWithKeyboard: boolean) => {\n        this.setVal(isNavigatingWithKeyboard, undefined);\n    };\n\n    setNavigatingWithKeyboard(isNavigatingWithKeyboard: boolean): void {\n        this._keyborg?.setVal(isNavigatingWithKeyboard);\n    }\n\n    isNavigatingWithKeyboard(): boolean {\n        return !!this._keyborg?.isNavigatingWithKeyboard();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { Keys } from \"./Keys\";\nimport * as Types from \"./Types\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    HTMLElementWithDummyContainer,\n    TabsterPart,\n    WeakHTMLElement,\n    triggerEvent,\n    augmentAttribute,\n} from \"./Utils\";\n\nlet _wasFocusedCounter = 0;\n\nconst _ariaHidden = \"aria-hidden\";\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    internalId?: string,\n    userId?: string,\n    isActive?: boolean,\n    wasFocused?: number\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-modalizer\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-modalizer\",\n                    internalId +\n                        \",\" +\n                        userId +\n                        \",\" +\n                        (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        \",\" +\n                        (wasFocused ? `focused(${wasFocused})` : \"not-focused\")\n                );\n            }\n        }\n    }\n}\n\n/**\n * Manages the dummy inputs for the Modalizer.\n */\nclass ModalizerDummyManager extends DummyInputManager {\n    constructor(\n        element: WeakHTMLElement,\n        tabster: Types.TabsterCore,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Modalizer, sys);\n\n        this._setHandlers((dummyInput: DummyInput, isBackward: boolean) => {\n            const el = element.get();\n            const container = el && RootAPI.getRoot(tabster, el)?.getElement();\n            const input = dummyInput.input;\n            let toFocus: HTMLElement | null | undefined;\n\n            if (container && input) {\n                const dummyContainer = (\n                    input as HTMLElementWithDummyContainer\n                ).__tabsterDummyContainer?.get();\n\n                const ctx = RootAPI.getTabsterContext(\n                    tabster,\n                    dummyContainer || input\n                );\n\n                if (ctx) {\n                    toFocus = FocusedElementState.findNextTabbable(\n                        tabster,\n                        ctx,\n                        container,\n                        input,\n                        undefined,\n                        isBackward,\n                        true\n                    )?.element;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        });\n    }\n}\n\nexport class Modalizer\n    extends TabsterPart<Types.ModalizerProps>\n    implements Types.Modalizer\n{\n    userId: string;\n\n    private _isActive: boolean | undefined;\n    private _wasFocused = 0;\n    private _onDispose: (modalizer: Modalizer) => void;\n    private _activeElements: WeakHTMLElement<HTMLElement>[];\n\n    dummyManager: ModalizerDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (modalizer: Modalizer) => void,\n        props: Types.ModalizerProps,\n        sys: Types.SysProps | undefined,\n        activeElements: WeakHTMLElement<HTMLElement>[]\n    ) {\n        super(tabster, element, props);\n\n        this.userId = props.id;\n        this._onDispose = onDispose;\n        this._activeElements = activeElements;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new ModalizerDummyManager(\n                this._element,\n                tabster,\n                sys\n            );\n        }\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this.id,\n                this.userId,\n                this._isActive,\n                this._wasFocused\n            );\n        }\n    }\n\n    makeActive(isActive: boolean): void {\n        if (this._isActive !== isActive) {\n            this._isActive = isActive;\n\n            const element = this.getElement();\n\n            if (element) {\n                const activeElements = this._activeElements;\n                const index = activeElements\n                    .map((e) => e.get())\n                    .indexOf(element);\n\n                if (isActive) {\n                    if (index < 0) {\n                        activeElements.push(\n                            new WeakHTMLElement(\n                                this._tabster.getWindow,\n                                element\n                            )\n                        );\n                    }\n                } else {\n                    if (index >= 0) {\n                        activeElements.splice(index, 1);\n                    }\n                }\n            }\n\n            if (__DEV__) {\n                _setInformativeStyle(\n                    this._element,\n                    false,\n                    this.id,\n                    this.userId,\n                    this._isActive,\n                    this._wasFocused\n                );\n            }\n\n            this.triggerFocusEvent(\n                isActive\n                    ? Types.ModalizerActiveEventName\n                    : Types.ModalizerInactiveEventName\n            );\n        }\n    }\n\n    focused(noIncrement?: boolean): number {\n        if (!noIncrement) {\n            this._wasFocused = ++_wasFocusedCounter;\n        }\n\n        return this._wasFocused;\n    }\n\n    setProps(props: Types.ModalizerProps): void {\n        if (props.id) {\n            this.userId = props.id;\n        }\n\n        this._props = { ...props };\n    }\n\n    dispose(): void {\n        this.makeActive(false);\n        this._onDispose(this);\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n        this._activeElements = [];\n        this._remove();\n    }\n\n    isActive(): boolean {\n        return !!this._isActive;\n    }\n\n    contains(element: HTMLElement) {\n        return !!this.getElement()?.contains(element);\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const modalizerElement = this.getElement();\n\n        if (!modalizerElement) {\n            return null;\n        }\n\n        const tabster = this._tabster;\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        const container =\n            currentElement &&\n            RootAPI.getRoot(tabster, currentElement)?.getElement();\n\n        if (container) {\n            const findProps: Types.FindNextProps = {\n                container,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = tabster.focusable[isBackward ? \"findPrev\" : \"findNext\"](\n                findProps,\n                findPropsOut\n            );\n\n            if (!next && this._props.isTrapped && tabster.modalizer?.activeId) {\n                next = tabster.focusable[isBackward ? \"findLast\" : \"findFirst\"](\n                    {\n                        container,\n                        ignoreAccessibility,\n                        useActiveModalizer: true,\n                    },\n                    findPropsOut\n                );\n\n                outOfDOMOrder = true;\n            } else {\n                outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n            }\n\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    triggerFocusEvent(\n        eventName: Types.ModalizerEventName,\n        allElements?: boolean\n    ): boolean {\n        const element = this.getElement();\n        let defaultPrevented = false;\n\n        if (element) {\n            const elements = allElements\n                ? this._activeElements.map((e) => e.get())\n                : [element];\n\n            for (const el of elements) {\n                if (\n                    el &&\n                    !triggerEvent<Types.ModalizerEventDetails>(el, eventName, {\n                        id: this.userId,\n                        element,\n                        eventName,\n                    })\n                ) {\n                    defaultPrevented = true;\n                }\n            }\n        }\n\n        return defaultPrevented;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateModalizerProps(props: Types.ModalizerProps): void {\n    // TODO: Implement validation.\n}\n\nexport class ModalizerAPI implements Types.ModalizerAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _restoreModalizerFocusTimer: number | undefined;\n    private _modalizers: Record<string, Types.Modalizer>;\n    private _parts: Record<string, Record<string, Types.Modalizer>>;\n    private _augMap: WeakMap<HTMLElement, true>;\n    private _aug: WeakHTMLElement<HTMLElement>[];\n    private _hiddenUpdateTimer: number | undefined;\n    private _alwaysAccessibleSelector: string | undefined;\n    private _accessibleCheck: Types.ModalizerElementAccessibleCheck | undefined;\n\n    activeId: string | undefined;\n    currentIsOthersAccessible: boolean | undefined;\n    activeElements: WeakHTMLElement<HTMLElement>[];\n\n    constructor(\n        tabster: Types.TabsterCore,\n        // @deprecated use accessibleCheck.\n        alwaysAccessibleSelector?: string,\n        accessibleCheck?: Types.ModalizerElementAccessibleCheck\n    ) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._modalizers = {};\n        this._parts = {};\n        this._augMap = new WeakMap();\n        this._aug = [];\n        this._alwaysAccessibleSelector = alwaysAccessibleSelector;\n        this._accessibleCheck = accessibleCheck;\n        this.activeElements = [];\n\n        if (!tabster.controlTab) {\n            tabster.root.addDummyInputs();\n        }\n\n        const win = this._win();\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n        });\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        // Dispose all modalizers managed by the API\n        Object.keys(this._modalizers).forEach((modalizerId) => {\n            if (this._modalizers[modalizerId]) {\n                this._modalizers[modalizerId].dispose();\n                delete this._modalizers[modalizerId];\n            }\n        });\n\n        win.clearTimeout(this._restoreModalizerFocusTimer);\n        win.clearTimeout(this._hiddenUpdateTimer);\n\n        this._parts = {};\n        delete this.activeId;\n        this.activeElements = [];\n\n        this._augMap = new WeakMap();\n        this._aug = [];\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n    }\n\n    createModalizer(\n        element: HTMLElement,\n        props: Types.ModalizerProps,\n        sys: Types.SysProps | undefined\n    ): Types.Modalizer {\n        if (__DEV__) {\n            validateModalizerProps(props);\n        }\n\n        const modalizer = new Modalizer(\n            this._tabster,\n            element,\n            this._onModalizerDispose,\n            props,\n            sys,\n            this.activeElements\n        );\n\n        const id = modalizer.id;\n        const userId = props.id;\n\n        this._modalizers[id] = modalizer;\n\n        let part = this._parts[userId];\n        if (!part) {\n            part = this._parts[userId] = {};\n        }\n        part[id] = modalizer;\n\n        // Adding a modalizer which is already focused, activate it\n        if (\n            element.contains(\n                this._tabster.focusedElement.getFocusedElement() ?? null\n            )\n        ) {\n            if (userId !== this.activeId) {\n                this.setActive(modalizer);\n            } else {\n                modalizer.makeActive(true);\n            }\n        }\n\n        return modalizer;\n    }\n\n    private _onModalizerDispose = (modalizer: Modalizer) => {\n        const id = modalizer.id;\n        const userId = modalizer.userId;\n        const part = this._parts[userId];\n\n        delete this._modalizers[id];\n\n        if (part) {\n            delete part[id];\n\n            if (Object.keys(part).length === 0) {\n                delete this._parts[userId];\n\n                if (this.activeId === userId) {\n                    this.setActive(undefined);\n                }\n            }\n        }\n    };\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.keyCode !== Keys.Esc) {\n            return;\n        }\n\n        const tabster = this._tabster;\n        const element = tabster.focusedElement.getFocusedElement();\n\n        if (element) {\n            const ctx = RootAPI.getTabsterContext(tabster, element);\n            const modalizer = ctx?.modalizer;\n\n            if (\n                ctx &&\n                !ctx.groupper &&\n                modalizer?.isActive() &&\n                !ctx.ignoreKeydown(event)\n            ) {\n                const activeId = modalizer.userId;\n\n                if (activeId) {\n                    const part = this._parts[activeId];\n\n                    if (part) {\n                        const focusedSince = Object.keys(part)\n                            .map((id) => {\n                                const m = part[id];\n                                const el = m.getElement();\n                                let groupper: Types.Groupper | undefined;\n\n                                if (el) {\n                                    groupper = getTabsterOnElement(\n                                        this._tabster,\n                                        el\n                                    )?.groupper;\n                                }\n\n                                return m && el && groupper\n                                    ? {\n                                          el,\n                                          focusedSince: m.focused(true),\n                                      }\n                                    : { focusedSince: 0 };\n                            })\n                            .filter((f) => f.focusedSince > 0)\n                            .sort((a, b) =>\n                                a.focusedSince > b.focusedSince\n                                    ? -1\n                                    : a.focusedSince < b.focusedSince\n                                    ? 1\n                                    : 0\n                            );\n\n                        if (focusedSince.length) {\n                            const groupperElement = focusedSince[0].el;\n\n                            if (groupperElement) {\n                                tabster.groupper?.handleKeyPress(\n                                    groupperElement,\n                                    event,\n                                    true\n                                );\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    isAugmented(element: HTMLElement): boolean {\n        return this._augMap.has(element);\n    }\n\n    hiddenUpdate(): void {\n        if (this._hiddenUpdateTimer) {\n            return;\n        }\n\n        this._hiddenUpdateTimer = this._win().setTimeout(() => {\n            delete this._hiddenUpdateTimer;\n            this._hiddenUpdate();\n        }, 250);\n    }\n\n    setActive(modalizer: Types.Modalizer | undefined): void {\n        const userId = modalizer?.userId;\n        const activeId = this.activeId;\n\n        if (activeId === userId) {\n            return;\n        }\n\n        this.activeId = userId;\n\n        if (activeId) {\n            const part = this._parts[activeId];\n\n            if (part) {\n                for (const id of Object.keys(part)) {\n                    part[id].makeActive(false);\n                }\n            }\n        }\n\n        if (userId) {\n            const part = this._parts[userId];\n\n            if (part) {\n                for (const id of Object.keys(part)) {\n                    part[id].makeActive(true);\n                }\n            }\n        }\n\n        this.currentIsOthersAccessible =\n            modalizer?.getProps().isOthersAccessible;\n\n        this.hiddenUpdate();\n    }\n\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean {\n        const ctx = RootAPI.getTabsterContext(\n            this._tabster,\n            elementFromModalizer\n        );\n\n        const modalizer = ctx?.modalizer;\n\n        if (modalizer) {\n            this.setActive(modalizer);\n\n            const props = modalizer.getProps();\n            const modalizerRoot = modalizer.getElement();\n\n            if (modalizerRoot) {\n                if (noFocusFirst === undefined) {\n                    noFocusFirst = props.isNoFocusFirst;\n                }\n\n                if (\n                    !noFocusFirst &&\n                    this._tabster.keyboardNavigation.isNavigatingWithKeyboard() &&\n                    this._tabster.focusedElement.focusFirst({\n                        container: modalizerRoot,\n                    })\n                ) {\n                    return true;\n                }\n\n                if (noFocusDefault === undefined) {\n                    noFocusDefault = props.isNoFocusDefault;\n                }\n\n                if (\n                    !noFocusDefault &&\n                    this._tabster.focusedElement.focusDefault(modalizerRoot)\n                ) {\n                    return true;\n                }\n\n                this._tabster.focusedElement.resetFocus(modalizerRoot);\n            }\n        } else if (__DEV__) {\n            console.error(\"Element is not in Modalizer.\", elementFromModalizer);\n        }\n\n        return false;\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        const modalizerUserId = state.modalizerUserId;\n        const currentModalizer = state.currentCtx?.modalizer;\n\n        if (modalizerUserId) {\n            for (const e of this.activeElements) {\n                const el = e.get();\n\n                if (el && (element.contains(el) || el === element)) {\n                    // We have a part of currently active modalizer somewhere deeper in the DOM,\n                    // skipping all other checks.\n                    return NodeFilter.FILTER_SKIP;\n                }\n            }\n        }\n\n        const ret =\n            modalizerUserId === currentModalizer?.userId ||\n            (!modalizerUserId &&\n                currentModalizer?.getProps().isAlwaysAccessible)\n                ? undefined\n                : NodeFilter.FILTER_SKIP;\n\n        if (ret !== undefined) {\n            state.skippedFocusable = true;\n        }\n\n        return ret;\n    }\n\n    private _hiddenUpdate(): void {\n        const tabster = this._tabster;\n        const body = tabster.getWindow().document.body;\n        const activeId = this.activeId;\n\n        const parts = this._parts;\n        const visibleElements: HTMLElement[] = [];\n        const hiddenElements: HTMLElement[] = [];\n        const alwaysAccessibleSelector = this._alwaysAccessibleSelector;\n        const alwaysAccessibleElements: HTMLElement[] = alwaysAccessibleSelector\n            ? Array.from(body.querySelectorAll(alwaysAccessibleSelector))\n            : [];\n        const activeModalizerElements: HTMLElement[] = [];\n\n        for (const userId of Object.keys(parts)) {\n            const modalizerParts = parts[userId];\n\n            for (const id of Object.keys(modalizerParts)) {\n                const modalizer = modalizerParts[id];\n                const el = modalizer.getElement();\n                const props = modalizer.getProps();\n                const isAlwaysAccessible = props.isAlwaysAccessible;\n\n                if (el) {\n                    if (userId === activeId) {\n                        activeModalizerElements.push(el);\n\n                        if (!this.currentIsOthersAccessible) {\n                            visibleElements.push(el);\n                        }\n                    } else if (isAlwaysAccessible) {\n                        alwaysAccessibleElements.push(el);\n                    } else {\n                        hiddenElements.push(el);\n                    }\n                }\n            }\n        }\n\n        const augmentedMap = this._augMap;\n        const allVisibleElements: HTMLElement[] | undefined =\n            visibleElements.length > 0\n                ? [...visibleElements, ...alwaysAccessibleElements]\n                : undefined;\n\n        const newAugmented: WeakHTMLElement<HTMLElement>[] = [];\n        const newAugmentedMap: WeakMap<HTMLElement, true> = new WeakMap();\n\n        const toggle = (element: HTMLElement, hide: boolean) => {\n            const tagName = element.tagName;\n\n            if (tagName === \"SCRIPT\" || tagName === \"STYLE\") {\n                return;\n            }\n\n            let isAugmented = false;\n\n            if (augmentedMap.has(element)) {\n                if (hide) {\n                    isAugmented = true;\n                } else {\n                    augmentedMap.delete(element);\n                    augmentAttribute(tabster, element, _ariaHidden);\n                }\n            } else if (\n                hide &&\n                !this._accessibleCheck?.(element, activeModalizerElements) &&\n                augmentAttribute(tabster, element, _ariaHidden, \"true\")\n            ) {\n                augmentedMap.set(element, true);\n                isAugmented = true;\n            }\n\n            if (isAugmented) {\n                newAugmented.push(\n                    new WeakHTMLElement(tabster.getWindow, element)\n                );\n                newAugmentedMap.set(element, true);\n            }\n        };\n\n        const walk = (element: HTMLElement) => {\n            for (\n                let el = element.firstElementChild;\n                el;\n                el = el.nextElementSibling\n            ) {\n                let skip = false;\n                let containsModalizer = false;\n\n                if (allVisibleElements) {\n                    for (const c of allVisibleElements) {\n                        if (el === c) {\n                            skip = true;\n                            break;\n                        }\n\n                        if (el.contains(c)) {\n                            containsModalizer = true;\n                            break;\n                        }\n                    }\n\n                    if (containsModalizer) {\n                        walk(el as HTMLElement);\n                    } else if (!skip) {\n                        toggle(el as HTMLElement, true);\n                    }\n                } else {\n                    toggle(el as HTMLElement, false);\n                }\n            }\n        };\n\n        if (!allVisibleElements) {\n            alwaysAccessibleElements.forEach((e) => toggle(e, false));\n        }\n\n        hiddenElements.forEach((e) => toggle(e, true));\n\n        if (body) {\n            walk(body);\n        }\n\n        this._aug\n            ?.map((e) => e.get())\n            .forEach((e) => {\n                if (e && !newAugmentedMap.get(e)) {\n                    toggle(e, false);\n                }\n            });\n\n        this._aug = newAugmented;\n        this._augMap = newAugmentedMap;\n    }\n\n    /**\n     * Subscribes to the focus state and handles modalizer related focus events\n     * @param e - Element that is focused\n     * @param details - Additional data about the focus event\n     */\n    private _onFocus = (\n        focusedElement: HTMLElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void => {\n        const ctx =\n            focusedElement &&\n            RootAPI.getTabsterContext(this._tabster, focusedElement);\n\n        // Modalizer behaviour is opt in, only apply to elements that have a tabster context\n        if (!ctx || !focusedElement) {\n            return;\n        }\n\n        const augmentedMap = this._augMap;\n\n        for (\n            let e: HTMLElement | null = focusedElement;\n            e;\n            e = e.parentElement\n        ) {\n            // If the newly focused element is inside some of the hidden containers,\n            // remove aria-hidden from those synchronously for the screen readers\n            // to be able to read the element. The rest of aria-hiddens, will be removed\n            // acynchronously for the sake of performance.\n\n            if (augmentedMap.has(e)) {\n                augmentedMap.delete(e);\n                augmentAttribute(this._tabster, e, _ariaHidden);\n            }\n        }\n\n        const modalizer = ctx.modalizer;\n\n        // An inactive groupper with the modalizer on the same node will not give the modalizer\n        // in the context, yet we still want to track that the modalizer's container was focused.\n        (\n            modalizer ||\n            getTabsterOnElement(this._tabster, focusedElement)?.modalizer\n        )?.focused();\n\n        if (modalizer?.userId === this.activeId) {\n            this.currentIsOthersAccessible =\n                modalizer?.getProps().isOthersAccessible;\n\n            return;\n        }\n\n        // Developers calling `element.focus()` should change/deactivate active modalizer\n        if (\n            details.isFocusedProgrammatically ||\n            this.currentIsOthersAccessible ||\n            modalizer?.getProps().isAlwaysAccessible\n        ) {\n            this.setActive(modalizer);\n        } else {\n            // Focused outside of the active modalizer, try pull focus back to current modalizer\n            const win = this._win();\n            win.clearTimeout(this._restoreModalizerFocusTimer);\n            // TODO some rendering frameworks (i.e. React) might async rerender the DOM so we need to wait for a duration\n            // Figure out a better way of doing this rather than a 100ms timeout\n            this._restoreModalizerFocusTimer = win.setTimeout(\n                () => this._restoreModalizerFocus(focusedElement),\n                100\n            );\n        }\n    };\n\n    /**\n     * Called when an element is focused outside of an active modalizer.\n     * Attempts to pull focus back into the active modalizer\n     * @param outsideElement - An element being focused outside of the modalizer\n     */\n    private _restoreModalizerFocus(\n        outsideElement: HTMLElement | undefined\n    ): void {\n        const ownerDocument = outsideElement?.ownerDocument;\n\n        if (!outsideElement || !ownerDocument) {\n            return;\n        }\n\n        const ctx = RootAPI.getTabsterContext(this._tabster, outsideElement);\n        const modalizer = ctx?.modalizer;\n        const activeId = this.activeId;\n\n        if (\n            (!modalizer && !activeId) ||\n            (modalizer && activeId === modalizer.userId)\n        ) {\n            return;\n        }\n\n        const container = ctx?.root.getElement();\n\n        if (container) {\n            let toFocus = this._tabster.focusable.findFirst({\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (toFocus) {\n                if (\n                    outsideElement.compareDocumentPosition(toFocus) &\n                    document.DOCUMENT_POSITION_PRECEDING\n                ) {\n                    toFocus = this._tabster.focusable.findLast({\n                        container,\n                        useActiveModalizer: true,\n                    });\n\n                    if (!toFocus) {\n                        // This only might mean that findFirst/findLast are buggy and inconsistent.\n                        throw new Error(\"Something went wrong.\");\n                    }\n                }\n\n                this._tabster.focusedElement.focus(toFocus);\n\n                return;\n            }\n        }\n\n        // Current Modalizer doesn't seem to have focusable elements.\n        // Blurring the currently focused element which is outside of the current Modalizer.\n        outsideElement.blur();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    createElementTreeWalker,\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    getPromise,\n    HTMLElementWithDummyContainer,\n    isElementVerticallyVisibleInContainer,\n    matchesSelector,\n    scrollIntoView,\n    TabsterPart,\n    triggerEvent,\n    WeakHTMLElement,\n} from \"./Utils\";\n\nconst _inputSelector = [\"input\", \"textarea\", \"*[contenteditable]\"].join(\", \");\n\nclass MoverDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _getMemorized: () => WeakHTMLElement | undefined;\n\n    constructor(\n        element: WeakHTMLElement,\n        tabster: Types.TabsterCore,\n        getMemorized: () => WeakHTMLElement | undefined,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Mover, sys);\n\n        this._tabster = tabster;\n        this._getMemorized = getMemorized;\n\n        this._setHandlers(this._onFocusDummyInput);\n    }\n\n    private _onFocusDummyInput = (dummyInput: DummyInput) => {\n        const container = this._element.get();\n        const input = dummyInput.input;\n\n        if (container && input) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            let toFocus: HTMLElement | null | undefined;\n\n            if (ctx) {\n                toFocus = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    undefined,\n                    input,\n                    undefined,\n                    !dummyInput.isFirst,\n                    true\n                )?.element;\n            }\n\n            const memorized = this._getMemorized()?.get();\n            if (memorized) {\n                toFocus = memorized;\n            }\n\n            if (toFocus) {\n                nativeFocus(toFocus);\n            }\n        }\n    };\n}\n\n// TypeScript enums produce depressing JavaScript code, so, we're just using\n// a few old style constants here.\nconst _moverUpdateAdd = 1;\nconst _moverUpdateAttr = 2;\nconst _moverUpdateRemove = 3;\n\ninterface MoverUpdateQueueItem {\n    element: HTMLElement;\n    type:\n        | typeof _moverUpdateAdd\n        | typeof _moverUpdateAttr\n        | typeof _moverUpdateRemove;\n}\n\nexport class Mover\n    extends TabsterPart<Types.MoverProps>\n    implements Types.Mover\n{\n    private _unobserve: (() => void) | undefined;\n    private _intersectionObserver: IntersectionObserver | undefined;\n    private _setCurrentTimer: number | undefined;\n    private _current: WeakHTMLElement | undefined;\n    private _prevCurrent: WeakHTMLElement | undefined;\n    private _visible: Record<string, Types.Visibility> = {};\n    private _fullyVisible: string | undefined;\n    private _win: Types.GetWindow;\n    private _onDispose: (mover: Mover) => void;\n    private _allElements: WeakMap<HTMLElement, Mover> | undefined;\n    private _updateQueue: MoverUpdateQueueItem[] | undefined;\n    private _updateTimer: number | undefined;\n\n    visibilityTolerance: number;\n    dummyManager: MoverDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (mover: Mover) => void,\n        props: Types.MoverProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n\n        this._win = tabster.getWindow;\n        this.visibilityTolerance = props.visibilityTolerance ?? 0.8;\n\n        if (this._props.trackState || this._props.visibilityAware) {\n            this._intersectionObserver = new IntersectionObserver(\n                this._onIntersection,\n                { threshold: [0, 0.25, 0.5, 0.75, 1] }\n            );\n            this._observeState();\n        }\n\n        this._onDispose = onDispose;\n        const getMemorized = () =>\n            props.memorizeCurrent ? this._current : undefined;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new MoverDummyManager(\n                this._element,\n                tabster,\n                getMemorized,\n                sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        if (this._intersectionObserver) {\n            this._intersectionObserver.disconnect();\n            delete this._intersectionObserver;\n        }\n\n        delete this._current;\n        delete this._fullyVisible;\n        delete this._allElements;\n        delete this._updateQueue;\n\n        if (this._unobserve) {\n            this._unobserve();\n            delete this._unobserve;\n        }\n\n        const win = this._win();\n\n        if (this._setCurrentTimer) {\n            win.clearTimeout(this._setCurrentTimer);\n            delete this._setCurrentTimer;\n        }\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n    }\n\n    setCurrent(element: HTMLElement | undefined): void {\n        if (element) {\n            this._current = new WeakHTMLElement(this._win, element);\n        } else {\n            this._current = undefined;\n        }\n\n        if (\n            (this._props.trackState || this._props.visibilityAware) &&\n            !this._setCurrentTimer\n        ) {\n            this._setCurrentTimer = this._win().setTimeout(() => {\n                delete this._setCurrentTimer;\n\n                const changed: (WeakHTMLElement | undefined)[] = [];\n\n                if (this._current !== this._prevCurrent) {\n                    changed.push(this._current);\n                    changed.push(this._prevCurrent);\n                    this._prevCurrent = this._current;\n                }\n\n                for (const weak of changed) {\n                    const el = weak?.get();\n\n                    if (el && this._allElements?.get(el) === this) {\n                        const props = this._props;\n\n                        if (\n                            el &&\n                            (props.visibilityAware !== undefined ||\n                                props.trackState)\n                        ) {\n                            const state = this.getState(el);\n\n                            if (state) {\n                                triggerEvent(el, Types.MoverEventName, state);\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    getCurrent(): HTMLElement | null {\n        return this._current?.get() || null;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const container = this.getElement();\n        const currentIsDummy =\n            container &&\n            (\n                currentElement as HTMLElementWithDummyContainer\n            )?.__tabsterDummyContainer?.get() === container;\n\n        if (!container) {\n            return null;\n        }\n\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        if (\n            this._props.tabbable ||\n            currentIsDummy ||\n            (currentElement && !container.contains(currentElement))\n        ) {\n            const findProps: Types.FindNextProps = {\n                currentElement,\n                referenceElement,\n                container,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = this._tabster.focusable[\n                isBackward ? \"findPrev\" : \"findNext\"\n            ](findProps, findPropsOut);\n\n            outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        if (!FocusedElementState.isTabbing) {\n            return state.currentCtx?.excludedFromMover\n                ? NodeFilter.FILTER_REJECT\n                : undefined;\n        }\n\n        const {\n            memorizeCurrent,\n            visibilityAware,\n            hasDefault = true,\n        } = this._props;\n        const moverElement = this.getElement();\n\n        if (\n            moverElement &&\n            (memorizeCurrent || visibilityAware || hasDefault) &&\n            (!moverElement.contains(state.from) ||\n                (\n                    state.from as HTMLElementWithDummyContainer\n                ).__tabsterDummyContainer?.get() === moverElement)\n        ) {\n            let found: HTMLElement | undefined | null;\n\n            if (memorizeCurrent) {\n                const current = this._current?.get();\n\n                if (current && state.acceptCondition(current)) {\n                    found = current;\n                }\n            }\n\n            if (!found && hasDefault) {\n                found = this._tabster.focusable.findDefault({\n                    container: moverElement,\n                    useActiveModalizer: true,\n                });\n            }\n\n            if (!found && visibilityAware) {\n                found = this._tabster.focusable.findElement({\n                    container: moverElement,\n                    useActiveModalizer: true,\n                    isBackward: state.isBackward,\n                    acceptCondition: (el) => {\n                        const id = getElementUId(this._win, el);\n                        const visibility = this._visible[id];\n\n                        return (\n                            moverElement !== el &&\n                            !!this._allElements?.get(el) &&\n                            state.acceptCondition(el) &&\n                            (visibility === Types.Visibilities.Visible ||\n                                (visibility ===\n                                    Types.Visibilities.PartiallyVisible &&\n                                    (visibilityAware ===\n                                        Types.Visibilities.PartiallyVisible ||\n                                        !this._fullyVisible)))\n                        );\n                    },\n                });\n            }\n\n            if (found) {\n                state.found = true;\n                state.foundElement = found;\n                state.rejectElementsFrom = moverElement;\n                state.skippedFocusable = true;\n                return NodeFilter.FILTER_ACCEPT;\n            }\n        }\n\n        return undefined;\n    }\n\n    private _onIntersection = (entries: IntersectionObserverEntry[]): void => {\n        for (const entry of entries) {\n            const el = entry.target as HTMLElement;\n            const id = getElementUId(this._win, el);\n\n            let newVisibility: Types.Visibility;\n            let fullyVisible = this._fullyVisible;\n\n            if (entry.intersectionRatio >= 0.25) {\n                newVisibility =\n                    entry.intersectionRatio >= 0.75\n                        ? Types.Visibilities.Visible\n                        : Types.Visibilities.PartiallyVisible;\n\n                if (newVisibility === Types.Visibilities.Visible) {\n                    fullyVisible = id;\n                }\n            } else {\n                newVisibility = Types.Visibilities.Invisible;\n            }\n\n            if (this._visible[id] !== newVisibility) {\n                if (newVisibility === undefined) {\n                    delete this._visible[id];\n\n                    if (fullyVisible === id) {\n                        delete this._fullyVisible;\n                    }\n                } else {\n                    this._visible[id] = newVisibility;\n                    this._fullyVisible = fullyVisible;\n                }\n\n                const state = this.getState(el);\n\n                if (state) {\n                    triggerEvent(el, Types.MoverEventName, state);\n                }\n            }\n        }\n    };\n\n    private _observeState(): void {\n        const element = this.getElement();\n\n        if (\n            this._unobserve ||\n            !element ||\n            typeof MutationObserver === \"undefined\"\n        ) {\n            return;\n        }\n\n        const win = this._win();\n        const allElements = (this._allElements = new WeakMap());\n        const tabsterFocusable = this._tabster.focusable;\n        let updateQueue: MoverUpdateQueueItem[] = (this._updateQueue = []);\n\n        const observer = new MutationObserver((mutations: MutationRecord[]) => {\n            for (const mutation of mutations) {\n                const target = mutation.target;\n                const removed = mutation.removedNodes;\n                const added = mutation.addedNodes;\n\n                if (mutation.type === \"attributes\") {\n                    if (mutation.attributeName === \"tabindex\") {\n                        updateQueue.push({\n                            element: target as HTMLElement,\n                            type: _moverUpdateAttr,\n                        });\n                    }\n                } else {\n                    for (let i = 0; i < removed.length; i++) {\n                        updateQueue.push({\n                            element: removed[i] as HTMLElement as HTMLElement,\n                            type: _moverUpdateRemove,\n                        });\n                    }\n\n                    for (let i = 0; i < added.length; i++) {\n                        updateQueue.push({\n                            element: added[i] as HTMLElement,\n                            type: _moverUpdateAdd,\n                        });\n                    }\n                }\n            }\n\n            requestUpdate();\n        });\n\n        const setElement = (element: HTMLElement, remove?: boolean): void => {\n            const current = allElements.get(element);\n\n            if (current && remove) {\n                this._intersectionObserver?.unobserve(element);\n                allElements.delete(element);\n            }\n\n            if (!current && !remove) {\n                allElements.set(element, this);\n                this._intersectionObserver?.observe(element);\n            }\n        };\n\n        const updateElement = (element: HTMLElement): void => {\n            const isFocusable = tabsterFocusable.isFocusable(element);\n            const current = allElements.get(element);\n\n            if (current) {\n                if (!isFocusable) {\n                    setElement(element, true);\n                }\n            } else {\n                if (isFocusable) {\n                    setElement(element);\n                }\n            }\n        };\n\n        const addNewElements = (element: HTMLElement): void => {\n            const { mover } = getMoverGroupper(element);\n\n            if (mover && mover !== this) {\n                if (\n                    mover.getElement() === element &&\n                    tabsterFocusable.isFocusable(element)\n                ) {\n                    setElement(element);\n                } else {\n                    return;\n                }\n            }\n\n            const walker = createElementTreeWalker(\n                win.document,\n                element,\n                (node: Node): number => {\n                    const { mover, groupper } = getMoverGroupper(\n                        node as HTMLElement\n                    );\n\n                    if (mover && mover !== this) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    const groupperFirstFocusable = groupper?.getFirst(true);\n\n                    if (\n                        groupper &&\n                        groupper.getElement() !== node &&\n                        groupperFirstFocusable &&\n                        groupperFirstFocusable !== node\n                    ) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    if (tabsterFocusable.isFocusable(node as HTMLElement)) {\n                        setElement(node as HTMLElement);\n                    }\n\n                    return NodeFilter.FILTER_SKIP;\n                }\n            );\n\n            if (walker) {\n                walker.currentNode = element;\n\n                while (walker.nextNode()) {\n                    /* Iterating for the sake of calling processNode() callback. */\n                }\n            }\n        };\n\n        const removeWalk = (element: HTMLElement): void => {\n            const current = allElements.get(element);\n\n            if (current) {\n                setElement(element, true);\n            }\n\n            for (\n                let el = element.firstElementChild;\n                el;\n                el = el.nextElementSibling\n            ) {\n                removeWalk(el as HTMLElement);\n            }\n        };\n\n        const requestUpdate = () => {\n            if (!this._updateTimer && updateQueue.length) {\n                this._updateTimer = win.setTimeout(() => {\n                    delete this._updateTimer;\n\n                    for (const { element, type } of updateQueue) {\n                        switch (type) {\n                            case _moverUpdateAttr:\n                                updateElement(element);\n                                break;\n                            case _moverUpdateAdd:\n                                addNewElements(element);\n                                break;\n                            case _moverUpdateRemove:\n                                removeWalk(element);\n                                break;\n                        }\n                    }\n\n                    updateQueue = this._updateQueue = [];\n                }, 0);\n            }\n        };\n\n        const getMoverGroupper = (\n            element: HTMLElement\n        ): { mover?: Mover; groupper?: Types.Groupper } => {\n            const ret: {\n                mover?: Mover;\n                groupper?: Types.Groupper;\n            } = {};\n\n            for (\n                let el: HTMLElement | null = element;\n                el;\n                el = el.parentElement\n            ) {\n                const toe = getTabsterOnElement(this._tabster, el);\n\n                if (toe) {\n                    if (toe.groupper && !ret.groupper) {\n                        ret.groupper = toe.groupper;\n                    }\n\n                    if (toe.mover) {\n                        ret.mover = toe.mover as Mover;\n                        break;\n                    }\n                }\n            }\n\n            return ret;\n        };\n\n        updateQueue.push({ element, type: _moverUpdateAdd });\n        requestUpdate();\n\n        observer.observe(element, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: [\"tabindex\"],\n        });\n\n        this._unobserve = () => {\n            observer.disconnect();\n        };\n    }\n\n    getState(element: HTMLElement): Types.MoverElementState | undefined {\n        const id = getElementUId(this._win, element);\n\n        if (id in this._visible) {\n            const visibility =\n                this._visible[id] || Types.Visibilities.Invisible;\n            const isCurrent = this._current\n                ? this._current.get() === element\n                : undefined;\n\n            return {\n                isCurrent,\n                visibility,\n            };\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateMoverProps(props: Types.MoverProps): void {\n    // TODO: Implement validation.\n}\n\n/**\n * Calculates distance between two rectangles.\n *\n * @param ax1 first rectangle left\n * @param ay1 first rectangle top\n * @param ax2 first rectangle right\n * @param ay2 first rectangle bottom\n * @param bx1 second rectangle left\n * @param by1 second rectangle top\n * @param bx2 second rectangle right\n * @param by2 second rectangle bottom\n * @returns number, shortest distance between the rectangles.\n */\nfunction getDistance(\n    ax1: number,\n    ay1: number,\n    ax2: number,\n    ay2: number,\n    bx1: number,\n    by1: number,\n    bx2: number,\n    by2: number\n): number {\n    const xDistance = ax2 < bx1 ? bx1 - ax2 : bx2 < ax1 ? ax1 - bx2 : 0;\n    const yDistance = ay2 < by1 ? by1 - ay2 : by2 < ay1 ? ay1 - by2 : 0;\n\n    return xDistance === 0\n        ? yDistance\n        : yDistance === 0\n        ? xDistance\n        : Math.sqrt(xDistance * xDistance + yDistance * yDistance);\n}\n\nexport class MoverAPI implements Types.MoverAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _movers: Record<string, Mover>;\n    private _ignoredInputTimer: number | undefined;\n    private _ignoredInputResolve: ((value: boolean) => void) | undefined;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        this._movers = {};\n\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n\n        this._tabster.focusedElement.subscribe(this._onFocus);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        this._ignoredInputResolve?.(false);\n\n        if (this._ignoredInputTimer) {\n            win.clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        Object.keys(this._movers).forEach((moverId) => {\n            if (this._movers[moverId]) {\n                this._movers[moverId].dispose();\n                delete this._movers[moverId];\n            }\n        });\n    }\n\n    createMover(\n        element: HTMLElement,\n        props: Types.MoverProps,\n        sys: Types.SysProps | undefined\n    ): Types.Mover {\n        if (__DEV__) {\n            validateMoverProps(props);\n        }\n\n        const newMover = new Mover(\n            this._tabster,\n            element,\n            this._onMoverDispose,\n            props,\n            sys\n        );\n        this._movers[newMover.id] = newMover;\n        return newMover;\n    }\n\n    private _onMoverDispose = (mover: Mover) => {\n        delete this._movers[mover.id];\n    };\n\n    private _onFocus = (element: HTMLElement | undefined): void => {\n        // When something in the app gets focused, we are making sure that\n        // the relevant context Mover is aware of it.\n        // Looking for the relevant context Mover from the currently\n        // focused element parent, not from the element itself, because the\n        // Mover element itself cannot be its own current (but might be\n        // current for its parent Mover).\n        let currentFocusableElement = element;\n        let deepestFocusableElement = element;\n\n        for (\n            let el: HTMLElement | null | undefined = element?.parentElement;\n            el;\n            el = el.parentElement\n        ) {\n            // We go through all Movers up from the focused element and\n            // set their current element to the deepest focusable of that\n            // Mover.\n            const mover = getTabsterOnElement(this._tabster, el)?.mover;\n\n            if (mover) {\n                mover.setCurrent(deepestFocusableElement);\n                currentFocusableElement = undefined;\n            }\n\n            if (\n                !currentFocusableElement &&\n                this._tabster.focusable.isFocusable(el)\n            ) {\n                currentFocusableElement = deepestFocusableElement = el;\n            }\n        }\n    };\n\n    private _onKeyDown = async (event: KeyboardEvent): Promise<void> => {\n        if (this._ignoredInputTimer) {\n            this._win().clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        this._ignoredInputResolve?.(false);\n\n        let keyCode = event.keyCode;\n\n        // Give a chance to other listeners to handle the event (for example,\n        // to scroll instead of moving focus).\n        if (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\n            return;\n        }\n\n        switch (keyCode) {\n            case Keys.Down:\n            case Keys.Right:\n            case Keys.Up:\n            case Keys.Left:\n            case Keys.PageDown:\n            case Keys.PageUp:\n            case Keys.Home:\n            case Keys.End:\n                break;\n            default:\n                return;\n        }\n\n        const tabster = this._tabster;\n        const focused = tabster.focusedElement.getFocusedElement();\n\n        if (!focused || (await this._isIgnoredInput(focused, keyCode))) {\n            return;\n        }\n\n        const ctx = RootAPI.getTabsterContext(tabster, focused, {\n            checkRtl: true,\n        });\n\n        if (\n            !ctx ||\n            !ctx.mover ||\n            ctx.excludedFromMover ||\n            ctx.ignoreKeydown(event)\n        ) {\n            return;\n        }\n\n        const mover = ctx.mover;\n        const container = mover.getElement();\n\n        if (ctx.groupperBeforeMover) {\n            const groupper = ctx.groupper;\n\n            if (groupper && !groupper.isActive(true)) {\n                // For the cases when we have Mover/Active Groupper/Inactive Groupper, we need to check\n                // the grouppers between the current element and the current mover.\n                for (\n                    let el: HTMLElement | null | undefined =\n                        groupper.getElement()?.parentElement;\n                    el && el !== container;\n                    el = el.parentElement\n                ) {\n                    if (\n                        getTabsterOnElement(tabster, el)?.groupper?.isActive(\n                            true\n                        )\n                    ) {\n                        return;\n                    }\n                }\n            } else {\n                return;\n            }\n        }\n\n        if (!container) {\n            return;\n        }\n\n        const focusable = tabster.focusable;\n        const moverProps = mover.getProps();\n        const direction = moverProps.direction || Types.MoverDirections.Both;\n        const isBoth = direction === Types.MoverDirections.Both;\n        const isVertical =\n            isBoth || direction === Types.MoverDirections.Vertical;\n        const isHorizontal =\n            isBoth || direction === Types.MoverDirections.Horizontal;\n        const isGridLinear = direction === Types.MoverDirections.GridLinear;\n        const isGrid = isGridLinear || direction === Types.MoverDirections.Grid;\n        const isCyclic = moverProps.cyclic;\n\n        let next: HTMLElement | null | undefined;\n\n        let focusedElementRect: DOMRect;\n        let focusedElementX1 = 0;\n        let focusedElementX2 = 0;\n\n        if (isGrid) {\n            focusedElementRect = focused.getBoundingClientRect();\n            focusedElementX1 = Math.ceil(focusedElementRect.left);\n            focusedElementX2 = Math.floor(focusedElementRect.right);\n        }\n\n        if (ctx.rtl) {\n            if (keyCode === Keys.Right) {\n                keyCode = Keys.Left;\n            } else if (keyCode === Keys.Left) {\n                keyCode = Keys.Right;\n            }\n        }\n\n        if (\n            (keyCode === Keys.Down && isVertical) ||\n            (keyCode === Keys.Right && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findNext({\n                currentElement: focused,\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (next && isGrid) {\n                const nextElementX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n\n                if (!isGridLinear && focusedElementX2 > nextElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findFirst({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (\n            (keyCode === Keys.Up && isVertical) ||\n            (keyCode === Keys.Left && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findPrev({\n                currentElement: focused,\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (next && isGrid) {\n                const nextElementX2 = Math.floor(\n                    next.getBoundingClientRect().right\n                );\n\n                if (!isGridLinear && nextElementX2 > focusedElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findLast({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (keyCode === Keys.Home) {\n            if (isGrid) {\n                focusable.findElement({\n                    container,\n                    currentElement: focused,\n                    useActiveModalizer: true,\n                    isBackward: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left ?? 0\n                        );\n\n                        if (\n                            el !== focused &&\n                            focusedElementX1 <= nextElementX1\n                        ) {\n                            return true;\n                        }\n\n                        next = el;\n                        return false;\n                    },\n                });\n            } else {\n                next = focusable.findFirst({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (keyCode === Keys.End) {\n            if (isGrid) {\n                focusable.findElement({\n                    container,\n                    currentElement: focused,\n                    useActiveModalizer: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left ?? 0\n                        );\n\n                        if (\n                            el !== focused &&\n                            focusedElementX1 >= nextElementX1\n                        ) {\n                            return true;\n                        }\n\n                        next = el;\n                        return false;\n                    },\n                });\n            } else {\n                next = focusable.findLast({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (keyCode === Keys.PageUp) {\n            focusable.findElement({\n                currentElement: focused,\n                container,\n                useActiveModalizer: true,\n                isBackward: true,\n                acceptCondition: (el) => {\n                    if (!focusable.isFocusable(el)) {\n                        return false;\n                    }\n\n                    if (\n                        isElementVerticallyVisibleInContainer(\n                            this._win,\n                            el,\n                            mover.visibilityTolerance\n                        )\n                    ) {\n                        next = el;\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            // will be on the first column move forward and preserve previous column\n            if (isGrid && next) {\n                const firstColumnX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n                focusable.findElement({\n                    currentElement: next,\n                    container,\n                    useActiveModalizer: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left\n                        );\n                        if (\n                            focusedElementX1 < nextElementX1 ||\n                            firstColumnX1 >= nextElementX1\n                        ) {\n                            return true;\n                        }\n                        next = el;\n                        return false;\n                    },\n                });\n            }\n\n            if (next) {\n                scrollIntoView(this._win, next, false);\n            }\n        } else if (keyCode === Keys.PageDown) {\n            focusable.findElement({\n                currentElement: focused,\n                container,\n                useActiveModalizer: true,\n                acceptCondition: (el) => {\n                    if (!focusable.isFocusable(el)) {\n                        return false;\n                    }\n\n                    if (\n                        isElementVerticallyVisibleInContainer(\n                            this._win,\n                            el,\n                            mover.visibilityTolerance\n                        )\n                    ) {\n                        next = el;\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            // will be on the last column move backwards and preserve previous column\n            if (isGrid && next) {\n                const lastColumnX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n                focusable.findElement({\n                    currentElement: next,\n                    container,\n                    useActiveModalizer: true,\n                    isBackward: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left\n                        );\n                        if (\n                            focusedElementX1 > nextElementX1 ||\n                            lastColumnX1 <= nextElementX1\n                        ) {\n                            return true;\n                        }\n                        next = el;\n                        return false;\n                    },\n                });\n            }\n\n            if (next) {\n                scrollIntoView(this._win, next, true);\n            }\n        } else if (isGrid) {\n            const isBackward = keyCode === Keys.Up;\n            const ax1 = focusedElementX1;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay1 = Math.ceil(focusedElementRect!.top);\n            const ax2 = focusedElementX2;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay2 = Math.floor(focusedElementRect!.bottom);\n            let targetElement: HTMLElement | undefined;\n            let lastDistance: number | undefined;\n            let lastIntersection = 0;\n\n            focusable.findAll({\n                container,\n                currentElement: focused,\n                isBackward,\n                onElement: (el) => {\n                    // Find element which has maximal intersection with the focused element horizontally,\n                    // or the closest one.\n                    const rect = el.getBoundingClientRect();\n\n                    const bx1 = Math.ceil(rect.left);\n                    const by1 = Math.ceil(rect.top);\n                    const bx2 = Math.floor(rect.right);\n                    const by2 = Math.floor(rect.bottom);\n\n                    if (\n                        (isBackward && ay1 < by2) ||\n                        (!isBackward && ay2 > by1)\n                    ) {\n                        // Only consider elements which are below/above curretly focused.\n                        return true;\n                    }\n\n                    const xIntersectionWidth =\n                        Math.ceil(Math.min(ax2, bx2)) -\n                        Math.floor(Math.max(ax1, bx1));\n                    const minWidth = Math.ceil(Math.min(ax2 - ax1, bx2 - bx1));\n\n                    if (\n                        xIntersectionWidth > 0 &&\n                        minWidth >= xIntersectionWidth\n                    ) {\n                        // Element intersects with the focused element on X axis.\n                        const intersection = xIntersectionWidth / minWidth;\n\n                        if (intersection > lastIntersection) {\n                            targetElement = el;\n                            lastIntersection = intersection;\n                        }\n                    } else if (lastIntersection === 0) {\n                        // If we didn't have intersection, try just the closest one.\n                        const distance = getDistance(\n                            ax1,\n                            ay1,\n                            ax2,\n                            ay2,\n                            bx1,\n                            by1,\n                            bx2,\n                            by2\n                        );\n\n                        if (\n                            lastDistance === undefined ||\n                            distance < lastDistance\n                        ) {\n                            lastDistance = distance;\n                            targetElement = el;\n                        }\n                    } else if (lastIntersection > 0) {\n                        // Element doesn't intersect, but we had intersection already, stop search.\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            next = targetElement;\n        }\n\n        if (next) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n\n            nativeFocus(next);\n        }\n    };\n\n    private async _isIgnoredInput(\n        element: HTMLElement,\n        keyCode: number\n    ): Promise<boolean> {\n        if (\n            element.getAttribute(\"aria-expanded\") === \"true\" &&\n            element.hasAttribute(\"aria-activedescendant\")\n        ) {\n            // It is likely a combobox with expanded options and arrow keys are\n            // controlled by it.\n            return true;\n        }\n\n        if (matchesSelector(element, _inputSelector)) {\n            let selectionStart = 0;\n            let selectionEnd = 0;\n            let textLength = 0;\n            let asyncRet: Promise<boolean> | undefined;\n\n            if (element.tagName === \"INPUT\" || element.tagName === \"TEXTAREA\") {\n                const type = (element as HTMLInputElement).type;\n                const value = (element as HTMLInputElement).value;\n\n                textLength = (value || \"\").length;\n\n                if (type === \"email\" || type === \"number\") {\n                    // For these types Chromium doesn't provide selectionStart and selectionEnd.\n                    // Hence the ugly workaround to find if the caret position is changed with\n                    // the keypress.\n                    // TODO: Have a look at range, week, time, time, date, datetime-local.\n                    if (textLength) {\n                        const selection =\n                            element.ownerDocument.defaultView?.getSelection();\n\n                        if (selection) {\n                            const initialLength = selection.toString().length;\n                            const isBackward =\n                                keyCode === Keys.Left || keyCode === Keys.Up;\n\n                            selection.modify(\n                                \"extend\",\n                                isBackward ? \"backward\" : \"forward\",\n                                \"character\"\n                            );\n\n                            if (initialLength !== selection.toString().length) {\n                                // The caret is moved, so, we're not on the edge of the value.\n                                // Restore original selection.\n                                selection.modify(\n                                    \"extend\",\n                                    isBackward ? \"forward\" : \"backward\",\n                                    \"character\"\n                                );\n\n                                return true;\n                            } else {\n                                textLength = 0;\n                            }\n                        }\n                    }\n                } else {\n                    const selStart = (element as HTMLInputElement)\n                        .selectionStart;\n\n                    if (selStart === null) {\n                        // Do not ignore not text editable inputs like checkboxes and radios (but ignore hidden).\n                        return type === \"hidden\";\n                    }\n\n                    selectionStart = selStart || 0;\n                    selectionEnd =\n                        (element as HTMLInputElement).selectionEnd || 0;\n                }\n            } else if (element.contentEditable === \"true\") {\n                asyncRet = new (getPromise(this._win))((resolve) => {\n                    this._ignoredInputResolve = (value: boolean) => {\n                        delete this._ignoredInputResolve;\n                        resolve(value);\n                    };\n\n                    const win = this._win();\n\n                    if (this._ignoredInputTimer) {\n                        win.clearTimeout(this._ignoredInputTimer);\n                    }\n\n                    const {\n                        anchorNode: prevAnchorNode,\n                        focusNode: prevFocusNode,\n                        anchorOffset: prevAnchorOffset,\n                        focusOffset: prevFocusOffset,\n                    } = win.getSelection() || {};\n\n                    // Get selection gives incorrect value if we call it syncronously onKeyDown.\n                    this._ignoredInputTimer = win.setTimeout(() => {\n                        delete this._ignoredInputTimer;\n\n                        const {\n                            anchorNode,\n                            focusNode,\n                            anchorOffset,\n                            focusOffset,\n                        } = win.getSelection() || {};\n\n                        if (\n                            anchorNode !== prevAnchorNode ||\n                            focusNode !== prevFocusNode ||\n                            anchorOffset !== prevAnchorOffset ||\n                            focusOffset !== prevFocusOffset\n                        ) {\n                            this._ignoredInputResolve?.(false);\n                            return;\n                        }\n\n                        selectionStart = anchorOffset || 0;\n                        selectionEnd = focusOffset || 0;\n                        textLength = element.textContent?.length || 0;\n\n                        if (anchorNode && focusNode) {\n                            if (\n                                element.contains(anchorNode) &&\n                                element.contains(focusNode)\n                            ) {\n                                if (anchorNode !== element) {\n                                    let anchorFound = false;\n\n                                    const addOffsets = (\n                                        node: ChildNode\n                                    ): boolean => {\n                                        if (node === anchorNode) {\n                                            anchorFound = true;\n                                        } else if (node === focusNode) {\n                                            return true;\n                                        }\n\n                                        const nodeText = node.textContent;\n\n                                        if (nodeText && !node.firstChild) {\n                                            const len = nodeText.length;\n\n                                            if (anchorFound) {\n                                                if (focusNode !== anchorNode) {\n                                                    selectionEnd += len;\n                                                }\n                                            } else {\n                                                selectionStart += len;\n                                                selectionEnd += len;\n                                            }\n                                        }\n\n                                        let stop = false;\n\n                                        for (\n                                            let e = node.firstChild;\n                                            e && !stop;\n                                            e = e.nextSibling\n                                        ) {\n                                            stop = addOffsets(e);\n                                        }\n\n                                        return stop;\n                                    };\n\n                                    addOffsets(element);\n                                }\n                            }\n                        }\n\n                        this._ignoredInputResolve?.(true);\n                    }, 0);\n                });\n            }\n\n            if (asyncRet && !(await asyncRet)) {\n                return true;\n            }\n\n            if (selectionStart !== selectionEnd) {\n                return true;\n            }\n\n            if (\n                selectionStart > 0 &&\n                (keyCode === Keys.Left ||\n                    keyCode === Keys.Up ||\n                    keyCode === Keys.Home)\n            ) {\n                return true;\n            }\n\n            if (\n                selectionStart < textLength &&\n                (keyCode === Keys.Right ||\n                    keyCode === Keys.Down ||\n                    keyCode === Keys.End)\n            ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport {\n    createElementTreeWalker,\n    getInstanceContext,\n    HTMLElementWithUID,\n    InstanceContext,\n    WeakHTMLElement,\n} from \"./Utils\";\n\nexport function observeMutations(\n    doc: HTMLDocument,\n    tabster: Types.TabsterCore,\n    updateTabsterByAttribute: (\n        tabster: Types.TabsterCore,\n        element: HTMLElementWithUID,\n        dispose?: boolean\n    ) => void,\n    syncState: boolean\n): () => void {\n    if (typeof MutationObserver === \"undefined\") {\n        return () => {\n            /* Noop */\n        };\n    }\n\n    const getWindow = tabster.getWindow;\n\n    let elementByUId: InstanceContext[\"elementByUId\"] | undefined;\n\n    const onMutation = (mutations: MutationRecord[]) => {\n        for (const mutation of mutations) {\n            const target = mutation.target;\n            const removed = mutation.removedNodes;\n            const added = mutation.addedNodes;\n\n            if (mutation.type === \"attributes\") {\n                if (mutation.attributeName === Types.TabsterAttributeName) {\n                    updateTabsterByAttribute(tabster, target as HTMLElement);\n                }\n            } else {\n                for (let i = 0; i < removed.length; i++) {\n                    updateTabsterElements(removed[i], true);\n                    tabster._dummyObserver.domChanged?.(target as HTMLElement);\n                }\n\n                for (let i = 0; i < added.length; i++) {\n                    updateTabsterElements(added[i]);\n                    tabster._dummyObserver.domChanged?.(target as HTMLElement);\n                }\n            }\n        }\n\n        tabster.modalizer?.hiddenUpdate();\n    };\n\n    function updateTabsterElements(node: Node, removed?: boolean): void {\n        if (!elementByUId) {\n            elementByUId = getInstanceContext(getWindow).elementByUId;\n        }\n\n        processNode(node as HTMLElement, removed);\n\n        const walker = createElementTreeWalker(\n            doc,\n            node,\n            (element: Node): number => {\n                return processNode(element as HTMLElement, removed);\n            }\n        );\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n\n    function processNode(element: HTMLElement, removed?: boolean): number {\n        if (!element.getAttribute) {\n            // It might actually be a text node.\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        const uid = (element as HTMLElementWithUID).__tabsterElementUID;\n\n        if (uid && elementByUId) {\n            if (removed) {\n                delete elementByUId[uid];\n            } else {\n                elementByUId[uid] ??= new WeakHTMLElement(getWindow, element);\n            }\n        }\n\n        if (\n            getTabsterOnElement(tabster, element) ||\n            element.hasAttribute(Types.TabsterAttributeName)\n        ) {\n            updateTabsterByAttribute(tabster, element, removed);\n        }\n\n        return NodeFilter.FILTER_SKIP;\n    }\n\n    const observer = new MutationObserver(onMutation);\n\n    if (syncState) {\n        updateTabsterElements(getWindow().document.body);\n    }\n\n    observer.observe(doc, {\n        childList: true,\n        subtree: true,\n        attributes: true,\n        attributeFilter: [Types.TabsterAttributeName],\n    });\n\n    return () => {\n        observer.disconnect();\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"../Instance\";\nimport * as Types from \"../Types\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    WeakHTMLElement,\n} from \"../Utils\";\nimport { Subscribable } from \"./Subscribable\";\n\nconst _conditionCheckTimeout = 100;\n\ninterface ObservedElementInfo {\n    element: WeakHTMLElement;\n    prevNames?: string[];\n}\n\ninterface ObservedWaiting {\n    timer?: number;\n    conditionTimer?: number;\n    request?: Types.ObservedElementAsyncRequest<HTMLElement | null>;\n    resolve?: (value: HTMLElement | null) => void;\n    reject?: () => void;\n}\n\nexport class ObservedElementAPI\n    extends Subscribable<HTMLElement, Types.ObservedElementDetails>\n    implements Types.ObservedElementAPI\n{\n    private _win: Types.GetWindow;\n    private _tabster: Types.TabsterCore;\n    private _waiting: Record<string, ObservedWaiting> = {};\n    private _lastRequestFocusId = 0;\n    private _observedById: { [uid: string]: ObservedElementInfo } = {};\n    private _observedByName: {\n        [name: string]: { [uid: string]: ObservedElementInfo };\n    } = {};\n    private _currentRequest:\n        | Types.ObservedElementAsyncRequest<HTMLElement | null>\n        | undefined;\n    private _currentRequestTimestamp = 0;\n\n    constructor(tabster: Types.TabsterCore) {\n        super();\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n        });\n    }\n\n    dispose(): void {\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        for (const key of Object.keys(this._waiting)) {\n            this._rejectWaiting(key);\n        }\n\n        this._observedById = {};\n        this._observedByName = {};\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (e) {\n            const current = this._currentRequest;\n\n            if (current) {\n                const delta = Date.now() - this._currentRequestTimestamp;\n                const settleTime = 300;\n\n                if (delta >= settleTime) {\n                    // Giving some time for the focus to settle before\n                    // automatically cancelling the current request on focus change.\n                    delete this._currentRequest;\n                    current.cancel();\n                }\n            }\n        }\n    };\n\n    private _rejectWaiting(key: string, shouldResolve?: boolean): void {\n        const w = this._waiting[key];\n\n        if (w) {\n            const win = this._win();\n\n            if (w.timer) {\n                win.clearTimeout(w.timer);\n            }\n\n            if (w.conditionTimer) {\n                win.clearTimeout(w.conditionTimer);\n            }\n\n            if (!shouldResolve && w.reject) {\n                w.reject();\n            } else if (shouldResolve && w.resolve) {\n                w.resolve(null);\n            }\n\n            delete this._waiting[key];\n        }\n    }\n\n    private _isObservedNamesUpdated(cur: string[], prev?: string[]) {\n        if (!prev || cur.length !== prev.length) {\n            return true;\n        }\n        for (let i = 0; i < cur.length; ++i) {\n            if (cur[i] !== prev[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns existing element by observed name\n     *\n     * @param observedName An observed name\n     * @param accessibility Optionally, return only if the element is accessible or focusable\n     * @returns HTMLElement | null\n     */\n    getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccesibility\n    ): HTMLElement | null {\n        const o = this._observedByName[observedName];\n\n        if (o) {\n            for (const uid of Object.keys(o)) {\n                let el = o[uid].element.get() || null;\n                if (el) {\n                    if (\n                        (accessibility ===\n                            Types.ObservedElementAccesibilities.Accessible &&\n                            !this._tabster.focusable.isAccessible(el)) ||\n                        (accessibility ===\n                            Types.ObservedElementAccesibilities.Focusable &&\n                            !this._tabster.focusable.isFocusable(el, true))\n                    ) {\n                        el = null;\n                    }\n                } else {\n                    delete o[uid];\n                    delete this._observedById[uid];\n                }\n\n                return el;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Waits for the element to appear in the DOM and returns it.\n     *\n     * @param observedName An observed name\n     * @param timeout Wait no longer than this timeout\n     * @param accessibility Optionally, wait for the element to also become accessible or focusable before returning it\n     * @returns Promise<HTMLElement | null>\n     */\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccesibility\n    ): Types.ObservedElementAsyncRequest<HTMLElement | null> {\n        const el = this.getElement(observedName, accessibility);\n\n        if (el) {\n            return {\n                result: getPromise(this._win).resolve(el),\n                cancel: () => {\n                    /**/\n                },\n            };\n        }\n\n        let prefix: string;\n\n        if (accessibility === Types.ObservedElementAccesibilities.Accessible) {\n            prefix = \"a\";\n        } else if (\n            accessibility === Types.ObservedElementAccesibilities.Focusable\n        ) {\n            prefix = \"f\";\n        } else {\n            prefix = \"_\";\n        }\n\n        const key = prefix + observedName;\n        let w = this._waiting[key];\n\n        if (w && w.request) {\n            return w.request;\n        }\n\n        w = this._waiting[key] = {\n            timer: this._win().setTimeout(() => {\n                if (w.conditionTimer) {\n                    this._win().clearTimeout(w.conditionTimer);\n                }\n\n                delete this._waiting[key];\n\n                if (w.resolve) {\n                    w.resolve(null);\n                }\n            }, timeout),\n        };\n\n        const promise = new (getPromise(this._win))<HTMLElement | null>(\n            (resolve, reject) => {\n                w.resolve = resolve;\n                w.reject = reject;\n            }\n        );\n\n        w.request = {\n            result: promise,\n            cancel: () => {\n                this._rejectWaiting(key, true);\n            },\n        };\n\n        if (accessibility && this.getElement(observedName)) {\n            // If the observed element is alread in DOM, but not accessible yet,\n            // we need to run the wait logic.\n            this._waitConditional(observedName);\n        }\n\n        return w.request;\n    }\n\n    requestFocus(\n        observedName: string,\n        timeout: number\n    ): Types.ObservedElementAsyncRequest<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        const currentRequestFocus = this._currentRequest;\n\n        if (currentRequestFocus) {\n            currentRequestFocus.cancel();\n        }\n\n        const request = this.waitElement(\n            observedName,\n            timeout,\n            Types.ObservedElementAccesibilities.Focusable\n        );\n\n        this._currentRequest = request;\n        this._currentRequestTimestamp = Date.now();\n\n        request.result.finally(() => {\n            if (this._currentRequest === request) {\n                delete this._currentRequest;\n            }\n        });\n\n        return {\n            result: request.result.then((element) =>\n                this._lastRequestFocusId === requestId && element\n                    ? this._tabster.focusedElement.focus(element, true)\n                    : false\n            ),\n            cancel: () => {\n                request.cancel();\n            },\n        };\n    }\n\n    onObservedElementUpdate = (element: HTMLElement): void => {\n        const observed = getTabsterOnElement(this._tabster, element)?.observed;\n        const uid = getElementUId(this._win, element);\n        let info: ObservedElementInfo | undefined = this._observedById[uid];\n\n        if (observed && documentContains(element.ownerDocument, element)) {\n            if (!info) {\n                info = this._observedById[uid] = {\n                    element: new WeakHTMLElement(this._win, element),\n                };\n            }\n\n            observed.names.sort();\n            const observedNames = observed.names;\n            const prevNames = info.prevNames; // prevNames are already sorted\n\n            if (this._isObservedNamesUpdated(observedNames, prevNames)) {\n                if (prevNames) {\n                    prevNames.forEach((prevName) => {\n                        const obn = this._observedByName[prevName];\n\n                        if (obn && obn[uid]) {\n                            if (Object.keys(obn).length > 1) {\n                                delete obn[uid];\n                            } else {\n                                delete this._observedByName[prevName];\n                            }\n                        }\n                    });\n                }\n\n                info.prevNames = observedNames;\n            }\n\n            observedNames.forEach((observedName) => {\n                let obn = this._observedByName[observedName];\n\n                if (!obn) {\n                    obn = this._observedByName[observedName] = {};\n                }\n\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                obn[uid] = info!;\n\n                this._waitConditional(observedName);\n            });\n        } else if (info) {\n            const prevNames = info.prevNames;\n\n            if (prevNames) {\n                prevNames.forEach((prevName) => {\n                    const obn = this._observedByName[prevName];\n\n                    if (obn && obn[uid]) {\n                        if (Object.keys(obn).length > 1) {\n                            delete obn[uid];\n                        } else {\n                            delete this._observedByName[prevName];\n                        }\n                    }\n                });\n            }\n\n            delete this._observedById[uid];\n        }\n    };\n\n    private _waitConditional(observedName: string): void {\n        const waitingElementKey = \"_\" + observedName;\n        const waitingAccessibleElementKey = \"a\" + observedName;\n        const waitingFocusableElementKey = \"f\" + observedName;\n        const waitingElement = this._waiting[waitingElementKey];\n        const waitingAccessibleElement =\n            this._waiting[waitingAccessibleElementKey];\n        const waitingFocusableElement =\n            this._waiting[waitingFocusableElementKey];\n        const win = this._win();\n\n        const resolve = (\n            element: HTMLElement,\n            key: string,\n            waiting: ObservedWaiting,\n            accessibility: Types.ObservedElementAccesibility\n        ) => {\n            const observed = getTabsterOnElement(\n                this._tabster,\n                element\n            )?.observed;\n\n            if (!observed || !observed.names.includes(observedName)) {\n                return;\n            }\n\n            if (waiting.timer) {\n                win.clearTimeout(waiting.timer);\n            }\n\n            delete this._waiting[key];\n\n            if (waiting.resolve) {\n                waiting.resolve(element);\n            }\n\n            this.trigger(element, {\n                names: [observedName],\n                details: observed.details,\n                accessibility,\n            });\n        };\n\n        if (waitingElement) {\n            const element = this.getElement(observedName);\n\n            if (element && documentContains(element.ownerDocument, element)) {\n                resolve(\n                    element,\n                    waitingElementKey,\n                    waitingElement,\n                    Types.ObservedElementAccesibilities.Any\n                );\n            }\n        }\n\n        if (\n            waitingAccessibleElement &&\n            !waitingAccessibleElement.conditionTimer\n        ) {\n            const resolveAccessible = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isAccessible(element)\n                ) {\n                    resolve(\n                        element,\n                        waitingAccessibleElementKey,\n                        waitingAccessibleElement,\n                        Types.ObservedElementAccesibilities.Accessible\n                    );\n                } else {\n                    waitingAccessibleElement.conditionTimer = win.setTimeout(\n                        resolveAccessible,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveAccessible();\n        }\n\n        if (\n            waitingFocusableElement &&\n            !waitingFocusableElement.conditionTimer\n        ) {\n            const resolveFocusable = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isFocusable(element, true)\n                ) {\n                    resolve(\n                        element,\n                        waitingFocusableElementKey,\n                        waitingFocusableElement,\n                        Types.ObservedElementAccesibilities.Focusable\n                    );\n                } else {\n                    waitingFocusableElement.conditionTimer = win.setTimeout(\n                        resolveFocusable,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveFocusable();\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport { getBoundingRect } from \"./Utils\";\n\ninterface WindowWithOutlineStyle extends Window {\n    __tabsterOutline?: {\n        style?: HTMLStyleElement;\n        elements?: Types.OutlineElements;\n    };\n}\n\nconst defaultProps: Types.OutlineProps = {\n    areaClass: \"tabster-focus-outline-area\",\n    outlineClass: \"tabster-focus-outline\",\n    outlineColor: \"#ff4500\",\n    outlineWidth: 2,\n    zIndex: 2147483647,\n};\n\nlet _props: Types.OutlineProps = defaultProps;\n\nclass OutlinePosition {\n    public left: number;\n    public top: number;\n    public right: number;\n    public bottom: number;\n\n    constructor(left: number, top: number, right: number, bottom: number) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n\n    public equalsTo(other: OutlinePosition): boolean {\n        return (\n            this.left === other.left &&\n            this.top === other.top &&\n            this.right === other.right &&\n            this.bottom === other.bottom\n        );\n    }\n\n    public clone(): OutlinePosition {\n        return new OutlinePosition(\n            this.left,\n            this.top,\n            this.right,\n            this.bottom\n        );\n    }\n}\n\nexport class OutlineAPI implements Types.OutlineAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _updateTimer: number | undefined;\n    private _outlinedElement: HTMLElement | undefined;\n    private _curPos: OutlinePosition | undefined;\n    private _isVisible = false;\n    private _curOutlineElements: Types.OutlineElements | undefined;\n    private _allOutlineElements: Types.OutlineElements[] = [];\n    private _fullScreenElement: HTMLElement | undefined;\n    private _fullScreenEventName: string | undefined;\n    private _fullScreenElementName: string | undefined;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n\n        tabster.queueInit(this._init);\n\n        if (typeof document !== \"undefined\") {\n            if (\"onfullscreenchange\" in document) {\n                this._fullScreenEventName = \"fullscreenchange\";\n                this._fullScreenElementName = \"fullscreenElement\";\n            } else if (\"onwebkitfullscreenchange\" in document) {\n                this._fullScreenEventName = \"webkitfullscreenchange\";\n                this._fullScreenElementName = \"webkitFullscreenElement\";\n            } else if (\"onmozfullscreenchange\" in document) {\n                this._fullScreenEventName = \"mozfullscreenchange\";\n                this._fullScreenElementName = \"mozFullScreenElement\";\n            } else if (\"onmsfullscreenchange\" in document) {\n                this._fullScreenEventName = \"msfullscreenchange\";\n                this._fullScreenElementName = \"msFullscreenElement\";\n            }\n        }\n    }\n\n    private _init = (): void => {\n        this._tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.subscribe(this._onFocus);\n\n        const win = this._win();\n\n        win.addEventListener(\"scroll\", this._onScroll, true); // Capture!\n\n        if (this._fullScreenEventName) {\n            win.document.addEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n    };\n\n    setup(props?: Partial<Types.OutlineProps>): void {\n        _props = { ..._props, ...props };\n\n        const win = this._win() as WindowWithOutlineStyle;\n\n        if (!win.__tabsterOutline) {\n            win.__tabsterOutline = {};\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(win.document, _props);\n        }\n\n        if (!props || !props.areaClass) {\n            win.document.body.classList.add(defaultProps.areaClass);\n        } else {\n            win.document.body.classList.remove(defaultProps.areaClass);\n        }\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.removeEventListener(\"scroll\", this._onScroll, true);\n\n        if (this._fullScreenEventName) {\n            win.document.removeEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n\n        this._allOutlineElements.forEach((outlineElements) =>\n            this._removeDOM(outlineElements.container)\n        );\n        this._allOutlineElements = [];\n\n        delete this._outlinedElement;\n        delete this._curPos;\n        delete this._curOutlineElements;\n        delete this._fullScreenElement;\n    }\n\n    private _onFullScreenChanged = (e: Event): void => {\n        if (!this._fullScreenElementName || !e.target) {\n            return;\n        }\n\n        const target = (e.target as Document).body || (e.target as HTMLElement);\n        const outlineElements = this._getDOM(target);\n\n        if (target.ownerDocument && outlineElements) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const fsElement: HTMLElement | null = (target.ownerDocument as any)[\n                this._fullScreenElementName\n            ];\n\n            if (fsElement) {\n                fsElement.appendChild(outlineElements.container);\n                this._fullScreenElement = fsElement;\n            } else {\n                target.ownerDocument.body.appendChild(\n                    outlineElements.container\n                );\n                this._fullScreenElement = undefined;\n            }\n        }\n    };\n\n    private _onKeyboardNavigationStateChanged = (): void => {\n        this._onFocus(this._tabster.focusedElement.getFocusedElement());\n    };\n\n    private _shouldShowCustomOutline(element: HTMLElement): boolean {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n\n        if (\n            tabsterOnElement &&\n            tabsterOnElement.outline &&\n            tabsterOnElement.outline.isIgnored\n        ) {\n            return false;\n        }\n\n        for (let i: HTMLElement | null = element; i; i = i.parentElement) {\n            if (i.classList && i.classList.contains(_props.areaClass)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (!this._updateElement(e) && this._isVisible) {\n            this._setVisibility(false);\n        }\n    };\n\n    private _updateElement(e: HTMLElement | undefined): boolean {\n        this._outlinedElement = undefined;\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._curPos = undefined;\n\n        if (!this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            return false;\n        }\n\n        if (e) {\n            // TODO: It's hard (and not necessary) to come up with every possible\n            // condition when there should be no outline, it's better to add an\n            // API to customize the ignores.\n            if (e.tagName === \"INPUT\") {\n                const inputType = (e as HTMLInputElement).type;\n                const outlinedInputTypes = {\n                    button: true,\n                    checkbox: true,\n                    file: true,\n                    image: true,\n                    radio: true,\n                    range: true,\n                    reset: true,\n                    submit: true,\n                };\n\n                if (!(inputType in outlinedInputTypes)) {\n                    return false;\n                }\n            } else if (\n                e.tagName === \"TEXTAREA\" ||\n                e.contentEditable === \"true\" ||\n                e.tagName === \"IFRAME\"\n            ) {\n                return false;\n            }\n\n            if (!this._shouldShowCustomOutline(e)) {\n                return false;\n            }\n\n            if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n                this._outlinedElement = e;\n                this._updateOutline();\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    private _onScroll = (e: UIEvent): void => {\n        if (\n            !this._outlinedElement ||\n            !OutlineAPI._isParentChild(\n                e.target as HTMLElement,\n                this._outlinedElement\n            )\n        ) {\n            return;\n        }\n\n        this._curPos = undefined;\n\n        this._setOutlinePosition();\n    };\n\n    private _updateOutline(): void {\n        this._setOutlinePosition();\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        this._updateTimer = this._win().setTimeout(() => {\n            this._updateTimer = undefined;\n            this._updateOutline();\n        }, 30);\n    }\n\n    private _setVisibility(visible: boolean): void {\n        this._isVisible = visible;\n\n        if (this._curOutlineElements) {\n            if (visible) {\n                this._curOutlineElements.container.classList.add(\n                    `${_props.outlineClass}_visible`\n                );\n            } else {\n                this._curOutlineElements.container.classList.remove(\n                    `${_props.outlineClass}_visible`\n                );\n                this._curPos = undefined;\n            }\n        }\n    }\n\n    private _setOutlinePosition(): void {\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        let boundingRect = getBoundingRect(this._win, this._outlinedElement);\n\n        const position = new OutlinePosition(\n            boundingRect.left,\n            boundingRect.top,\n            boundingRect.right,\n            boundingRect.bottom\n        );\n\n        if (this._curPos && position.equalsTo(this._curPos)) {\n            return;\n        }\n\n        const outlineElements = this._getDOM(this._outlinedElement);\n        const win =\n            this._outlinedElement.ownerDocument &&\n            this._outlinedElement.ownerDocument.defaultView;\n\n        if (!outlineElements || !win) {\n            return;\n        }\n\n        if (this._curOutlineElements !== outlineElements) {\n            this._setVisibility(false);\n            this._curOutlineElements = outlineElements;\n        }\n\n        this._curPos = position;\n\n        const p = position.clone();\n        let hasAbsolutePositionedParent = false;\n        let hasFixedPositionedParent = false;\n\n        const container = outlineElements.container;\n        const scrollingElement =\n            container &&\n            container.ownerDocument &&\n            (container.ownerDocument.scrollingElement as HTMLElement);\n\n        if (!scrollingElement) {\n            return;\n        }\n\n        for (\n            let parent = this._outlinedElement.parentElement;\n            parent && parent.nodeType === Node.ELEMENT_NODE;\n            parent = parent.parentElement\n        ) {\n            // The element might be partially visible within its scrollable parent,\n            // reduce the bounding rect if this is the case.\n\n            if (parent === this._fullScreenElement) {\n                break;\n            }\n\n            boundingRect = getBoundingRect(this._win, parent);\n\n            const win =\n                parent.ownerDocument && parent.ownerDocument.defaultView;\n\n            if (!win) {\n                return;\n            }\n\n            const computedStyle = win.getComputedStyle(parent);\n            const position = computedStyle.position;\n\n            if (position === \"absolute\") {\n                hasAbsolutePositionedParent = true;\n            } else if (position === \"fixed\" || position === \"sticky\") {\n                hasFixedPositionedParent = true;\n            }\n\n            if (computedStyle.overflow === \"visible\") {\n                continue;\n            }\n\n            if (\n                (!hasAbsolutePositionedParent && !hasFixedPositionedParent) ||\n                computedStyle.overflow === \"hidden\"\n            ) {\n                if (boundingRect.left > p.left) {\n                    p.left = boundingRect.left;\n                }\n                if (boundingRect.top > p.top) {\n                    p.top = boundingRect.top;\n                }\n                if (boundingRect.right < p.right) {\n                    p.right = boundingRect.right;\n                }\n                if (boundingRect.bottom < p.bottom) {\n                    p.bottom = boundingRect.bottom;\n                }\n            }\n        }\n\n        const allRect = getBoundingRect(this._win, scrollingElement);\n        const allWidth = allRect.left + allRect.right;\n        const allHeight = allRect.top + allRect.bottom;\n        const ow = _props.outlineWidth;\n\n        p.left = p.left > ow ? p.left - ow : 0;\n        p.top = p.top > ow ? p.top - ow : 0;\n        p.right = p.right < allWidth - ow ? p.right + ow : allWidth;\n        p.bottom = p.bottom < allHeight - ow ? p.bottom + ow : allHeight;\n\n        const width = p.right - p.left;\n        const height = p.bottom - p.top;\n\n        if (width > ow * 2 && height > ow * 2) {\n            const leftBorderNode = outlineElements.left;\n            const topBorderNode = outlineElements.top;\n            const rightBorderNode = outlineElements.right;\n            const bottomBorderNode = outlineElements.bottom;\n            const sx =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageXOffset;\n            const sy =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageYOffset;\n\n            container.style.position = hasFixedPositionedParent\n                ? \"fixed\"\n                : \"absolute\";\n\n            container.style.background = _props.outlineColor;\n\n            leftBorderNode.style.width =\n                rightBorderNode.style.width =\n                topBorderNode.style.height =\n                bottomBorderNode.style.height =\n                    _props.outlineWidth + \"px\";\n\n            leftBorderNode.style.left =\n                topBorderNode.style.left =\n                bottomBorderNode.style.left =\n                    p.left + sx + \"px\";\n            rightBorderNode.style.left = p.left + sx + width - ow + \"px\";\n\n            leftBorderNode.style.top =\n                rightBorderNode.style.top =\n                topBorderNode.style.top =\n                    p.top + sy + \"px\";\n            bottomBorderNode.style.top = p.top + sy + height - ow + \"px\";\n\n            leftBorderNode.style.height = rightBorderNode.style.height =\n                height + \"px\";\n\n            topBorderNode.style.width = bottomBorderNode.style.width =\n                width + \"px\";\n\n            this._setVisibility(true);\n        } else {\n            this._setVisibility(false);\n        }\n    }\n\n    private _getDOM(\n        contextElement: HTMLElement\n    ): Types.OutlineElements | undefined {\n        const doc = contextElement.ownerDocument;\n        const win = (doc && doc.defaultView) as WindowWithOutlineStyle;\n\n        if (!doc || !win || !win.__tabsterOutline) {\n            return undefined;\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(doc, _props);\n        }\n\n        if (!win.__tabsterOutline.elements) {\n            const outlineElements: Types.OutlineElements = {\n                container: doc.createElement(\"div\"),\n                left: doc.createElement(\"div\"),\n                top: doc.createElement(\"div\"),\n                right: doc.createElement(\"div\"),\n                bottom: doc.createElement(\"div\"),\n            };\n\n            outlineElements.container.className = _props.outlineClass;\n            outlineElements.left.className = `${_props.outlineClass}__left`;\n            outlineElements.top.className = `${_props.outlineClass}__top`;\n            outlineElements.right.className = `${_props.outlineClass}__right`;\n            outlineElements.bottom.className = `${_props.outlineClass}__bottom`;\n\n            outlineElements.container.appendChild(outlineElements.left);\n            outlineElements.container.appendChild(outlineElements.top);\n            outlineElements.container.appendChild(outlineElements.right);\n            outlineElements.container.appendChild(outlineElements.bottom);\n\n            doc.body.appendChild(outlineElements.container);\n\n            win.__tabsterOutline.elements = outlineElements;\n\n            // TODO: Make a garbage collector to remove the references\n            // to the outlines which are nowhere in the DOM anymore.\n            this._allOutlineElements.push(outlineElements);\n        }\n\n        return win.__tabsterOutline.elements;\n    }\n\n    private _removeDOM(contextElement: HTMLElement): void {\n        const win = (contextElement.ownerDocument &&\n            contextElement.ownerDocument.defaultView) as WindowWithOutlineStyle;\n        const outline = win && win.__tabsterOutline;\n\n        if (!outline) {\n            return;\n        }\n\n        if (outline.style && outline.style.parentNode) {\n            outline.style.parentNode.removeChild(outline.style);\n\n            delete outline.style;\n        }\n\n        const outlineElements = outline && outline.elements;\n\n        if (outlineElements) {\n            if (outlineElements.container.parentNode) {\n                outlineElements.container.parentNode.removeChild(\n                    outlineElements.container\n                );\n            }\n\n            delete outline.elements;\n        }\n    }\n\n    private static _isParentChild(\n        parent: HTMLElement,\n        child: HTMLElement\n    ): boolean {\n        return (\n            child === parent ||\n            // tslint:disable-next-line:no-bitwise\n            !!(\n                parent.compareDocumentPosition(child) &\n                document.DOCUMENT_POSITION_CONTAINED_BY\n            )\n        );\n    }\n}\n\nfunction appendStyles(\n    document: HTMLDocument,\n    props: Types.OutlineProps\n): HTMLStyleElement {\n    const style = document.createElement(\"style\");\n    style.type = \"text/css\";\n    style.appendChild(document.createTextNode(getOutlineStyles(props)));\n    document.head.appendChild(style);\n    return style;\n}\n\nfunction getOutlineStyles(props: Types.OutlineProps): string {\n    return `\n.${props.areaClass} *, .${props.areaClass} *:focus {\noutline: none !important;\n}\n\n.${props.outlineClass} {\ndisplay: none;\nposition: absolute;\nwidth: 0;\nheight: 0;\nleft: 0;\ntop: 0;\nz-index: ${props.zIndex};\n}\n\n.${props.outlineClass}.${props.outlineClass}_visible {\ndisplay: block;\n}\n\n.${props.outlineClass}__left,\n.${props.outlineClass}__top,\n.${props.outlineClass}__right,\n.${props.outlineClass}__bottom {\nposition: absolute;\nbackground: inherit;\n}`;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\n/**\n * Allows default or user focus behaviour on the DOM subtree\n * i.e. Tabster will not control focus events within an uncontrolled area\n */\nexport class UncontrolledAPI implements Types.UncontrolledAPI {\n    private _isUncontrolledCompletely?: (\n        element: HTMLElement,\n        completely: boolean\n    ) => boolean | undefined;\n\n    constructor(\n        isUncontrolledCompletely?: (\n            element: HTMLElement,\n            completely: boolean\n        ) => boolean | undefined\n    ) {\n        this._isUncontrolledCompletely = isUncontrolledCompletely;\n    }\n\n    isUncontrolledCompletely(\n        element: HTMLElement,\n        completely: boolean\n    ): boolean {\n        const isUncontrolledCompletely = this._isUncontrolledCompletely?.(\n            element,\n            completely\n        );\n        // If isUncontrolledCompletely callback is not defined or returns undefined, then the default\n        // behaviour is to return the uncontrolled.completely value from the element.\n        return isUncontrolledCompletely === undefined\n            ? completely\n            : isUncontrolledCompletely;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport type {\n    RestorerAPI as RestorerAPIType,\n    GetWindow,\n    Restorer as RestorerInterface,\n    RestorerProps,\n    KeyboardNavigationState,\n    FocusedElementState,\n    TabsterCore,\n} from \"./Types\";\nimport { RestorerTypes } from \"./Types\";\nimport { TabsterPart, WeakHTMLElement } from \"./Utils\";\n\nconst EVENT_NAME = \"restorer:restorefocus\";\nconst HISOTRY_DEPTH = 10;\n\nclass Restorer extends TabsterPart<RestorerProps> implements RestorerInterface {\n    private _hasFocus = false;\n\n    constructor(\n        tabster: TabsterCore,\n        element: HTMLElement,\n        props: RestorerProps\n    ) {\n        super(tabster, element, props);\n\n        if (this._props.type === RestorerTypes.Source) {\n            const element = this._element?.get();\n            element?.addEventListener(\"focusout\", this._onFocusOut);\n            element?.addEventListener(\"focusin\", this._onFocusIn);\n        }\n    }\n\n    dispose(): void {\n        if (this._props.type === RestorerTypes.Source) {\n            const element = this._element?.get();\n            element?.removeEventListener(\"focusout\", this._onFocusOut);\n            element?.removeEventListener(\"focusin\", this._onFocusIn);\n\n            if (this._hasFocus) {\n                const doc = this._tabster.getWindow().document;\n                doc.body?.dispatchEvent(\n                    new Event(EVENT_NAME, {\n                        bubbles: true,\n                    })\n                );\n            }\n        }\n    }\n\n    private _onFocusOut = (e: FocusEvent) => {\n        const element = this._element?.get();\n        if (element && e.relatedTarget === null) {\n            element.dispatchEvent(\n                new Event(EVENT_NAME, {\n                    bubbles: true,\n                })\n            );\n        }\n        if (\n            element &&\n            !element.contains(e.relatedTarget as HTMLElement | null)\n        ) {\n            this._hasFocus = false;\n        }\n    };\n\n    private _onFocusIn = () => {\n        this._hasFocus = true;\n    };\n}\n\nexport class RestorerAPI implements RestorerAPIType {\n    private _tabster: TabsterCore;\n    private _history: WeakHTMLElement<HTMLElement>[] = [];\n    private _keyboardNavState: KeyboardNavigationState;\n    private _focusedElementState: FocusedElementState;\n    private _restoreFocusTimeout = 0;\n    private _getWindow: GetWindow;\n\n    constructor(tabster: TabsterCore) {\n        this._tabster = tabster;\n        this._getWindow = tabster.getWindow;\n        this._getWindow().addEventListener(EVENT_NAME, this._onRestoreFocus);\n\n        this._keyboardNavState = tabster.keyboardNavigation;\n        this._focusedElementState = tabster.focusedElement;\n\n        this._focusedElementState.subscribe(this._onFocusIn);\n    }\n\n    dispose(): void {\n        const win = this._getWindow();\n        this._focusedElementState.unsubscribe(this._onFocusIn);\n        win.removeEventListener(EVENT_NAME, this._onRestoreFocus);\n\n        if (this._restoreFocusTimeout) {\n            win.clearTimeout(this._restoreFocusTimeout);\n        }\n    }\n\n    private _onRestoreFocus = (e: Event) => {\n        const win = this._getWindow();\n        if (this._restoreFocusTimeout) {\n            win.clearTimeout(this._restoreFocusTimeout);\n        }\n\n        this._restoreFocusTimeout = win.setTimeout(() =>\n            this._restoreFocus(e.target as HTMLElement)\n        );\n    };\n\n    private _onFocusIn = (element: HTMLElement | undefined) => {\n        if (!element) {\n            return;\n        }\n\n        const tabsterAttribute = getTabsterOnElement(this._tabster, element);\n        if (\n            tabsterAttribute?.restorer?.getProps().type !== RestorerTypes.Target\n        ) {\n            return;\n        }\n\n        this._addToHistory(element);\n    };\n\n    private _addToHistory(element: HTMLElement) {\n        // Don't duplicate the top of history\n        if (this._history[this._history.length - 1]?.get() === element) {\n            return;\n        }\n\n        if (this._history.length > HISOTRY_DEPTH) {\n            this._history.shift();\n        }\n\n        this._history.push(\n            new WeakHTMLElement<HTMLElement>(this._getWindow, element)\n        );\n    }\n\n    private _restoreFocus = (source: HTMLElement) => {\n        // don't restore focus if focus isn't lost to body\n        const doc = this._getWindow().document;\n        if (doc.activeElement !== doc.body) {\n            return;\n        }\n\n        if (\n            // clicking on any empty space focuses body - this is can be a false positive\n            !this._keyboardNavState.isNavigatingWithKeyboard() &&\n            // Source no longer exists on DOM - always restore focus\n            doc.body.contains(source)\n        ) {\n            return;\n        }\n\n        let weakElement = this._history.pop();\n        while (\n            weakElement &&\n            !doc.body.contains(weakElement.get()?.parentElement ?? null)\n        ) {\n            weakElement = this._history.pop();\n        }\n\n        weakElement?.get()?.focus();\n    };\n\n    public createRestorer(element: HTMLElement, props: RestorerProps) {\n        const restorer = new Restorer(this._tabster, element, props);\n        // Focus might already be on a restorer target when it gets created so the focusin will not do anything\n        if (\n            props.type === RestorerTypes.Target &&\n            element.ownerDocument.activeElement === element\n        ) {\n            this._addToHistory(element);\n        }\n\n        return restorer;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CrossOriginAPI } from \"./CrossOrigin\";\nimport { DeloserAPI } from \"./Deloser\";\nimport { FocusableAPI } from \"./Focusable\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { GroupperAPI } from \"./Groupper\";\nimport { getTabsterOnElement, updateTabsterByAttribute } from \"./Instance\";\nimport { KeyboardNavigationState } from \"./State/KeyboardNavigation\";\nimport { ModalizerAPI } from \"./Modalizer\";\nimport { MoverAPI } from \"./Mover\";\nimport { observeMutations } from \"./MutationEvent\";\nimport { ObservedElementAPI } from \"./State/ObservedElement\";\nimport { OutlineAPI } from \"./Outline\";\nimport { RootAPI, WindowWithTabsterInstance } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { UncontrolledAPI } from \"./Uncontrolled\";\nimport {\n    cleanupFakeWeakRefs,\n    clearElementCache,\n    createElementTreeWalker,\n    createWeakMap,\n    disposeInstanceContext,\n    startFakeWeakRefsCleanup,\n    stopFakeWeakRefsCleanupAndClearStorage,\n    DummyInputObserver,\n} from \"./Utils\";\nimport { RestorerAPI } from \"./Restorer\";\n\nexport { Types };\nexport * from \"./AttributeHelpers\";\n\nclass Tabster implements Types.Tabster {\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    core: Types.TabsterCore;\n\n    constructor(tabster: Types.TabsterCore) {\n        this.keyboardNavigation = tabster.keyboardNavigation;\n        this.focusedElement = tabster.focusedElement;\n        this.focusable = tabster.focusable;\n        this.root = tabster.root;\n        this.uncontrolled = tabster.uncontrolled;\n        this.core = tabster;\n    }\n}\n\n/**\n * Extends Window to include an internal Tabster instance.\n */\nclass TabsterCore implements Types.TabsterCore {\n    private _storage: WeakMap<HTMLElement, Types.TabsterElementStorage>;\n    private _unobserve: (() => void) | undefined;\n    private _win: WindowWithTabsterInstance | undefined;\n    private _forgetMemorizedTimer: number | undefined;\n    private _forgetMemorizedElements: HTMLElement[] = [];\n    private _wrappers: Set<Tabster> = new Set<Tabster>();\n    private _initTimer: number | undefined;\n    private _initQueue: (() => void)[] = [];\n\n    _version: string = __VERSION__;\n    _noop = false;\n    controlTab: boolean;\n    rootDummyInputs: boolean;\n\n    // Core APIs\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    internal: Types.InternalAPI;\n    _dummyObserver: Types.DummyInputObserver;\n\n    // Extended APIs\n    groupper?: Types.GroupperAPI;\n    mover?: Types.MoverAPI;\n    outline?: Types.OutlineAPI;\n    deloser?: Types.DeloserAPI;\n    modalizer?: Types.ModalizerAPI;\n    observedElement?: Types.ObservedElementAPI;\n    crossOrigin?: Types.CrossOriginAPI;\n    restorer?: Types.RestorerAPI;\n    getParent: (el: Node) => Node | null;\n\n    constructor(win: Window, props?: Types.TabsterCoreProps) {\n        this._storage = createWeakMap(win);\n        this._win = win;\n\n        const getWindow = this.getWindow;\n\n        this.keyboardNavigation = new KeyboardNavigationState(getWindow);\n        this.focusedElement = new FocusedElementState(this, getWindow);\n        this.focusable = new FocusableAPI(this);\n        this.root = new RootAPI(this, props?.autoRoot);\n        this.uncontrolled = new UncontrolledAPI(\n            // TODO: Remove checkUncontrolledTrappingFocus in the next major version.\n            props?.checkUncontrolledCompletely ||\n                props?.checkUncontrolledTrappingFocus\n        );\n        this.controlTab = props?.controlTab ?? true;\n        this.rootDummyInputs = !!props?.rootDummyInputs;\n\n        this._dummyObserver = new DummyInputObserver(getWindow);\n\n        this.getParent = props?.getParent ?? ((el) => el.parentElement);\n\n        this.internal = {\n            stopObserver: (): void => {\n                if (this._unobserve) {\n                    this._unobserve();\n                    delete this._unobserve;\n                }\n            },\n\n            resumeObserver: (syncState: boolean): void => {\n                if (!this._unobserve) {\n                    const doc = getWindow().document;\n                    this._unobserve = observeMutations(\n                        doc,\n                        this,\n                        updateTabsterByAttribute,\n                        syncState\n                    );\n                }\n            },\n        };\n\n        startFakeWeakRefsCleanup(getWindow);\n\n        // Gives a tick to the host app to initialize other tabster\n        // APIs before tabster starts observing attributes.\n        this.queueInit(() => {\n            this.internal.resumeObserver(true);\n        });\n    }\n\n    /**\n     * Merges external props with the current props. Not all\n     * props can/should be mergeable, so let's add more as we move on.\n     * @param props Tabster props\n     */\n    private _mergeProps(props?: Types.TabsterCoreProps) {\n        if (!props) {\n            return;\n        }\n\n        this.getParent = props.getParent ?? this.getParent;\n    }\n\n    createTabster(\n        noRefCount?: boolean,\n        props?: Types.TabsterCoreProps\n    ): Types.Tabster {\n        const wrapper = new Tabster(this);\n\n        if (!noRefCount) {\n            this._wrappers.add(wrapper);\n        }\n\n        this._mergeProps(props);\n\n        return wrapper;\n    }\n\n    disposeTabster(wrapper: Types.Tabster, allInstances?: boolean) {\n        if (allInstances) {\n            this._wrappers.clear();\n        } else {\n            this._wrappers.delete(wrapper);\n        }\n\n        if (this._wrappers.size === 0) {\n            this.dispose();\n        }\n    }\n\n    dispose(): void {\n        this.internal.stopObserver();\n\n        const win = this._win;\n\n        win?.clearTimeout(this._initTimer);\n        delete this._initTimer;\n        this._initQueue = [];\n\n        this._forgetMemorizedElements = [];\n\n        if (win && this._forgetMemorizedTimer) {\n            win.clearTimeout(this._forgetMemorizedTimer);\n            delete this._forgetMemorizedTimer;\n        }\n\n        this.outline?.dispose();\n        this.crossOrigin?.dispose();\n        this.deloser?.dispose();\n        this.groupper?.dispose();\n        this.mover?.dispose();\n        this.modalizer?.dispose();\n        this.observedElement?.dispose();\n        this.restorer?.dispose();\n\n        this.keyboardNavigation.dispose();\n        this.focusable.dispose();\n        this.focusedElement.dispose();\n        this.root.dispose();\n\n        this._dummyObserver.dispose();\n\n        stopFakeWeakRefsCleanupAndClearStorage(this.getWindow);\n        clearElementCache(this.getWindow);\n\n        this._storage = new WeakMap();\n        this._wrappers.clear();\n\n        if (win) {\n            disposeInstanceContext(win);\n            delete win.__tabsterInstance;\n            delete this._win;\n        }\n    }\n\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): Types.TabsterElementStorageEntry | undefined {\n        const storage = this._storage;\n        let entry = storage.get(element);\n\n        if (entry) {\n            if (addremove === false && Object.keys(entry).length === 0) {\n                storage.delete(element);\n            }\n        } else if (addremove === true) {\n            entry = {};\n            storage.set(element, entry);\n        }\n\n        return entry;\n    }\n\n    getWindow = () => {\n        if (!this._win) {\n            throw new Error(\"Using disposed Tabster.\");\n        }\n\n        return this._win;\n    };\n\n    forceCleanup(): void {\n        if (!this._win) {\n            return;\n        }\n\n        this._forgetMemorizedElements.push(this._win.document.body);\n\n        if (this._forgetMemorizedTimer) {\n            return;\n        }\n\n        this._forgetMemorizedTimer = this._win.setTimeout(() => {\n            delete this._forgetMemorizedTimer;\n\n            for (\n                let el: HTMLElement | undefined =\n                    this._forgetMemorizedElements.shift();\n                el;\n                el = this._forgetMemorizedElements.shift()\n            ) {\n                clearElementCache(this.getWindow, el);\n                FocusedElementState.forgetMemorized(this.focusedElement, el);\n            }\n        }, 0);\n\n        cleanupFakeWeakRefs(this.getWindow, true);\n    }\n\n    queueInit(callback: () => void): void {\n        if (!this._win) {\n            return;\n        }\n\n        this._initQueue.push(callback);\n\n        if (!this._initTimer) {\n            this._initTimer = this._win?.setTimeout(() => {\n                delete this._initTimer;\n                this.drainInitQueue();\n            }, 0);\n        }\n    }\n\n    drainInitQueue(): void {\n        if (!this._win) {\n            return;\n        }\n\n        const queue = this._initQueue;\n        // Resetting the queue before calling the callbacks to avoid recursion.\n        this._initQueue = [];\n        queue.forEach((callback) => callback());\n    }\n}\n\nexport function forceCleanup(tabster: Types.Tabster): void {\n    // The only legit case for calling this method is when you've completely removed\n    // the application DOM and not going to add the new one for a while.\n    const tabsterCore = tabster.core;\n    tabsterCore.forceCleanup();\n}\n\n/**\n * Creates an instance of Tabster, returns the current window instance if it already exists.\n */\nexport function createTabster(\n    win: Window,\n    props?: Types.TabsterCoreProps\n): Types.Tabster {\n    let tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    if (tabster) {\n        return tabster.createTabster(false, props);\n    }\n\n    tabster = new TabsterCore(win, props);\n    (win as WindowWithTabsterInstance).__tabsterInstance = tabster;\n    return tabster.createTabster();\n}\n\n/**\n * Returns an instance of Tabster if it was created before or null.\n */\nexport function getTabster(win: Window): Types.Tabster | null {\n    const tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    return tabster ? tabster.createTabster(true) : null;\n}\n\n/**\n * Creates a new groupper instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getGroupper(tabster: Types.Tabster): Types.GroupperAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.groupper) {\n        tabsterCore.groupper = new GroupperAPI(\n            tabsterCore,\n            tabsterCore.getWindow\n        );\n    }\n\n    return tabsterCore.groupper;\n}\n\n/**\n * Creates a new mover instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getMover(tabster: Types.Tabster): Types.MoverAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.mover) {\n        tabsterCore.mover = new MoverAPI(tabsterCore, tabsterCore.getWindow);\n    }\n\n    return tabsterCore.mover;\n}\n\nexport function getOutline(tabster: Types.Tabster): Types.OutlineAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.outline) {\n        tabsterCore.outline = new OutlineAPI(tabsterCore);\n    }\n\n    return tabsterCore.outline;\n}\n\n/**\n * Creates a new new deloser instance or returns an existing one\n * @param tabster Tabster instance\n * @param props Deloser props\n */\nexport function getDeloser(\n    tabster: Types.Tabster,\n    props?: { autoDeloser: Types.DeloserProps }\n): Types.DeloserAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.deloser) {\n        tabsterCore.deloser = new DeloserAPI(tabsterCore, props);\n    }\n\n    return tabsterCore.deloser;\n}\n\n/**\n * Creates a new modalizer instance or returns an existing one\n * @param tabster Tabster instance\n * @param alwaysAccessibleSelector When Modalizer is active, we put\n * aria-hidden to everything else to hide it from screen readers. This CSS\n * selector allows to exclude some elements from this behaviour. For example,\n * this could be used to exclude aria-live region with the application-wide\n * status announcements.\n * @param accessibleCheck An optional callback that will be called when\n * active Modalizer wants to hide an element that doesn't belong to it from\n * the screen readers by setting aria-hidden. Similar to alwaysAccessibleSelector\n * but allows to address the elements programmatically rather than with a selector.\n * If the callback returns true, the element will not receive aria-hidden.\n */\nexport function getModalizer(\n    tabster: Types.Tabster,\n    // @deprecated use accessibleCheck.\n    alwaysAccessibleSelector?: string,\n    accessibleCheck?: Types.ModalizerElementAccessibleCheck\n): Types.ModalizerAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.modalizer) {\n        tabsterCore.modalizer = new ModalizerAPI(\n            tabsterCore,\n            alwaysAccessibleSelector,\n            accessibleCheck\n        );\n    }\n\n    return tabsterCore.modalizer;\n}\n\nexport function getObservedElement(\n    tabster: Types.Tabster\n): Types.ObservedElementAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.observedElement) {\n        tabsterCore.observedElement = new ObservedElementAPI(tabsterCore);\n    }\n\n    return tabsterCore.observedElement;\n}\n\nexport function getCrossOrigin(tabster: Types.Tabster): Types.CrossOriginAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.crossOrigin) {\n        getDeloser(tabster);\n        getModalizer(tabster);\n        getMover(tabster);\n        getGroupper(tabster);\n        getOutline(tabster);\n        getObservedElement(tabster);\n        tabsterCore.crossOrigin = new CrossOriginAPI(tabsterCore);\n    }\n\n    return tabsterCore.crossOrigin;\n}\n\nexport function getInternal(tabster: Types.Tabster): Types.InternalAPI {\n    const tabsterCore = tabster.core;\n    return tabsterCore.internal;\n}\n\nexport function getRestorer(tabster: Types.Tabster): Types.RestorerAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.restorer) {\n        tabsterCore.restorer = new RestorerAPI(tabsterCore);\n    }\n\n    return tabsterCore.restorer;\n}\n\nexport function disposeTabster(\n    tabster: Types.Tabster,\n    allInstances?: boolean\n): void {\n    tabster.core.disposeTabster(tabster, allInstances);\n}\n\n/**\n * Returns an instance of Tabster if it already exists on the window .\n * @param win window instance that could contain an Tabster instance.\n */\nexport function getCurrentTabster(win: Window): Types.TabsterCore | undefined {\n    return (win as WindowWithTabsterInstance).__tabsterInstance;\n}\n\n/**\n * Allows to make Tabster non operational. Intended for performance debugging (and other\n * kinds of debugging), you can switch Tabster off without changing the application code\n * that consumes it.\n * @param tabster a reference created by createTabster().\n * @param noop true if you want to make Tabster noop, false if you want to turn it back.\n */\nexport function makeNoOp(tabster: Types.Tabster, noop: boolean): void {\n    const core = tabster.core;\n\n    if (core._noop !== noop) {\n        core._noop = noop;\n\n        const processNode = (element: HTMLElement): number => {\n            if (!element.getAttribute) {\n                return NodeFilter.FILTER_SKIP;\n            }\n\n            if (\n                getTabsterOnElement(core, element) ||\n                element.hasAttribute(Types.TabsterAttributeName)\n            ) {\n                updateTabsterByAttribute(core, element);\n            }\n\n            return NodeFilter.FILTER_SKIP;\n        };\n\n        const doc = core.getWindow().document;\n        const body = doc.body;\n\n        processNode(body);\n\n        const walker = createElementTreeWalker(doc, body, processNode);\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n}\n\nexport function isNoOp(tabster: Types.TabsterCore): boolean {\n    return (tabster as TabsterCore)._noop;\n}\n"],"names":["TabsterAttributeName","TabsterDummyInputAttributeName","DeloserEventName","ModalizerActiveEventName","ModalizerInactiveEventName","ModalizerFocusInEventName","ModalizerFocusOutEventName","ModalizerBeforeFocusOutEventName","MoverEventName","FocusInEventName","FocusOutEventName","FocusableSelector","join","ObservedElementAccesibilities","Any","Accessible","Focusable","RestoreFocusOrders","History","DeloserDefault","RootDefault","DeloserFirst","RootFirst","Visibilities","Invisible","PartiallyVisible","Visible","RestorerTypes","Source","Target","MoverDirections","Both","Vertical","Horizontal","Grid","GridLinear","GroupperTabbabilities","Unlimited","Limited","LimitedTrapFocus","SysDummyInputsPositions","Auto","Inside","Outside","getTabsterOnElement","tabster","element","storageEntry","updateTabsterByAttribute","dispose","newAttrValue","_noop","undefined","getAttribute","Types","entry","newAttr","attr","string","newValue","JSON","parse","Error","object","e","__DEV__","console","error","tabsterOnElement","oldTabsterProps","newTabsterProps","key","Object","keys","root","onRoot","part","observedElement","onObservedElementUpdate","sys","deloser","setProps","createDeloser","createRoot","modalizer","createModalizer","restorer","createRestorer","focusable","groupper","createGroupper","mover","createMover","observed","uncontrolled","outline","length","createEventTarget","getWindow","global","EventTarget","TypeError","document","createElement","_isBrokenIE11","_DOMRect","DOMRect","constructor","x","y","width","height","left","top","right","bottom","_uidCounter","createTreeWalker","NodeFilter","SHOW_ELEMENT","_updateDummyInputsTimeout","getInstanceContext","win","ctx","__tabsterInstanceContext","elementByUId","basics","Promise","WeakRef","containerBoundingRectCache","lastContainerBoundingRectCacheId","fakeWeakRefs","fakeWeakRefsStarted","disposeInstanceContext","containerBoundingRectCacheTimer","clearTimeout","fakeWeakRefsTimer","createWeakMap","WeakMap","hasSubFocusable","querySelector","FakeWeakRef","target","_target","deref","cleanup","fwr","forceRemove","documentContains","ownerDocument","WeakHTMLElement","data","context","ref","push","_ref","_data","get","getData","cleanupFakeWeakRefs","filter","startFakeWeakRefsCleanup","getWeakRef","setTimeout","stopFakeWeakRefsCleanupAndClearStorage","createElementTreeWalker","doc","acceptNode","nodeType","Node","ELEMENT_NODE","getBoundingRect","cacheId","__tabsterCacheId","cached","rect","scrollingElement","documentElement","clientWidth","clientHeight","r","getBoundingClientRect","Math","max","min","window","cId","isElementVerticallyVisibleInContainer","tolerance","container","getScrollableContainer","containerRect","elementRect","intersectionTolerance","topIntersection","bottomIntersection","totalIntersection","scrollIntoView","alignToTop","scrollTop","el","parentElement","scrollWidth","scrollHeight","makeFocusIgnored","__shouldIgnoreFocus","shouldIgnoreFocus","getUId","wnd","rnd","Uint32Array","crypto","getRandomValues","msCrypto","i","random","srnd","toString","Date","now","getElementUId","uid","__tabsterElementUID","getWindowUId","__tabsterCrossOriginWindowUID","clearElementCache","parent","wel","contains","body","matchesSelector","selector","matches","msMatchesSelector","webkitMatchesSelector","call","getPromise","_lastTabsterPartId","TabsterPart","props","_tabster","_element","_props","id","getElement","getProps","DummyInput","isOutside","fixedTarget","_fixedTarget","nativeFocus","input","onFocusIn","relatedTarget","_isBackward","useDefaultAction","onFocusOut","tabIndex","setAttribute","style","position","opacity","zIndex","setProperty","isFirst","_isPhantom","isPhantom","addEventListener","_focusIn","_focusOut","__tabsterDummyContainer","_disposeTimer","_clearDisposeTimeout","removeEventListener","removeChild","setTopLeft","isIn","current","previous","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","DummyInputManagerPriorities","Root","Modalizer","Mover","Groupper","DummyInputManager","priority","outsideByDefault","callForDefaultAction","_instance","DummyInputManagerCore","_setHandlers","_onFocusIn","_onFocusOut","moveOut","backwards","moveOutWithDefaultAction","getHandler","setTabbable","tabbable","moveWithPhantomDummy","moveOutOfElement","isBackward","dummy","insertBefore","tagName","firstElementChild","isFocusable","nextElementSibling","potentialDummy","dummyFor","previousElementSibling","addPhantomDummyWithTarget","sourceElement","targetElement","dummyParent","setDummyInputDebugValue","wrappers","what","map","w","DummyInputObserver","Set","WeakSet","_changedParents","has","add","_updateDummyInputsTimer","_win","_dummyElements","dummyElement","callback","_dummyCallbacks","set","domChanged","_domChanged","remove","delete","_updateTimer","_updateQueue","clear","updatePositions","compute","_lastUpdateQueueTime","_scheduledUpdatePositions","scrollTopLeftCache","Map","setTopLeftCallbacks","manager","dummyInput","_onFocus","first","_firstDummy","last","_lastDummy","_ensurePosition","firstInput","lastInput","toFocus","_wrappers","wrapper","_getCurrent","_addTimer","_getWindow","_addTransformOffsets","_dummyObserver","_computeTransformOffsets","from","transformElements","_transformElements","newTransformElements","scrollLeft","scrollTopLeft","transform","getComputedStyle","_callForDefaultAction","instance","__tabsterDummy","forcedDummyPosition","dummyInputsPosition","_isOutside","_addDummyInputs","force","sort","a","b","firstDummyInput","lastDummyInput","elementParent","nextSibling","lastElementChild","appendChild","getLastChild","lastChild","getAdjacentElement","prev","cur","adjacent","triggerEvent","name","details","event","createEvent","initEvent","dispatchEvent","defaultPrevented","augmentAttribute","value","ret","aug","origVal","removeAttribute","origValue","getTabsterAttribute","plain","stringify","mergeTabsterProps","newProps","setTabsterAttribute","update","_setInformativeStyle","weakElement","removeProperty","RootDummyManager","setFocused","_setFocused","keyboardNavigation","setNavigatingWithKeyboard","focusedElement","getFirstOrLastTabbable","ignoreAccessibility","blur","_onDummyInputFocus","onDispose","hasFocused","_setFocusedTimer","_isFocused","_dummyManager","eventTarget","getParent","rootElement","curElement","_onDispose","_sys","controlTab","rootDummyInputs","addDummyInputs","_add","_remove","dummyManager","RootAPI","autoRoot","_autoRootUnwait","_autoRoot","_autoRootWaiting","_autoRootCreate","_roots","queueInit","forEach","rootId","rootById","newRoot","_onRootDispose","_forceDummy","roots","getRootByUId","__tabsterInstance","getTabsterContext","options","checkRtl","referenceElement","drainInitQueue","excludedFromMover","groupperBeforeMover","modalizerInGroupper","dirRightToLeft","ignoreKeydown","dir","toLowerCase","excludeFromMover","curModalizer","curGroupper","curMover","isActive","tabbability","userId","activeId","assign","rootAPI","shouldIgnoreKeydown","rtl","getRoot","removed","_containerHistoryLength","DeloserItemBase","DeloserItem","_deloser","belongsTo","unshift","focusAvailable","available","findAvailable","focus","resetFocus","resolve","DeloserHistoryByRootBase","rootUId","getLength","_history","removeDeloser","c","hasDeloser","some","d","DeloserHistoryByRoot","unshiftToDeloser","item","splice","skip","resetQueue","DeloserHistory","process","DeloserAPI","getDeloser","historyByRoot","make","createInstance","hbr","h","snapshotIndex","buildElementSelector","withClass","withIndex","escapeRegExp","escapeReplaceValue","elementId","replace","className","split","cls","trim","index","buildSelector","isBody","Deloser","_isActive","_snapshotIndex","focusFirst","focusDefault","preserveExisting","we","setActive","active","getActions","clearHistory","setSnapshot","pop","isVisible","restoreFocusOrder","findDefault","_findFirst","availableInHistory","_findInHistory","availableDefault","availableFirst","customFocusLostHandler","slice","noSelectorCheck","els","querySelectorAll","isNavigatingWithKeyboard","findFirst","useActiveModalizer","_restoreFocusTimer","_scheduleRestoreFocus","_activate","_deactivate","subscribe","activeElement","autoDeloser","_autoDeloser","_autoDeloserInstance","unsubscribe","_curDeloser","_onDeloserDispose","getFocusedElement","pause","_isPaused","resume","restore","curDeloser","_inDeloser","_isRestoringFocus","restoreFocus","lastFocused","getLastFocusedElement","offsetParent","deloserAPI","autoDeloserProps","getHistory","forceRestoreFocus","Subscribable","_callbacks","_val","callbacks","indexOf","subscribeFirst","setVal","val","_callCallbacks","getVal","trigger","_transactionTimeout","_pingTimeout","_targetIdUp","CrossOriginTransactionTypes","Bootstrap","FocusElement","State","GetElement","RestoreFocusInDeloser","Ping","CrossOriginDeloserItem","trasactions","_transactions","deloserUId","reset","beginTransaction","RestoreFocusInDeloserTransaction","then","CrossOriginDeloserHistoryByRoot","transactions","CrossOriginTransaction","getOwner","knownTargets","timeout","sentTo","targetId","sendUp","owner","ownerId","beginData","_knownTargets","_sentTo","_promise","reject","_resolve","_reject","getTargets","send","begin","selfResponse","targets","transaction","type","isResponse","timestamp","sentto","_isSelfResponding","endData","_sentCount","end","_send","_inProgress","_isDone","onResponse","inProgressId","BootstrapTransaction","shouldForward","makeResponse","FocusElementTransaction","shouldSelfRespond","GetElementTransaction","findElement","forwardResult","CrossOriginStates","Focused","Blurred","Observed","DeadWindow","KeyboardNavigation","Outline","StateTransaction","state","isSelfResponse","_makeFocusedResponse","_makeBlurredResponse","_makeObservedResponse","_makeDeadWindowResponse","_makeKeyboardNavigationResponse","_makeOutlineResponse","CrossOriginElement","ownerUId","observedName","observedDetails","focusOwner","focusOwnerTimestamp","history","historyItem","CrossOriginFocusedElementState","crossOrigin","isFocusedProgrammatically","CrossOriginObservedElementState","names","deadUId","removeTarget","ignoreKeyboardNavigationStateUpdate","origOutlineSetup","getElementById","accessibility","getElementData","getDeloserUID","dataOut","isWaitElementResolved","isForwardResolved","isResolved","waitElement","result","forwardRet","deloserByUId","PingTransaction","CrossOriginTransactions","_ownerUId","transactionId","knownTarget","t","Transaction","_getTransactionClass","forwardTransaction","_owner","response","_dead","source","postMessage","_onMessage","setup","isSetUp","setSendUp","_onPageHide","_ping","_isDefaultSendUp","_onBrowserMessage","_pingTimer","_deadPromise","timer","withReject","_beginTransaction","catch","finally","deadWindows","all","focused","noFocusedProgrammaticallyFlag","noAccessibleCheck","_focus","focusById","focusByObservedName","elementData","requestFocus","requestId","_lastRequestFocusId","CrossOriginAPI","_onKeyboardNavigationStateChanged","_onObserved","_ctx","_outlineSetup","_blurTimer","_init","deloserElement","FocusableAPI","includeProgrammaticallyFocusable","noVisibleCheck","isAccessible","defaultView","computedStyle","visibility","_isHidden","ignoreDisabled","ignoreAriaDisabled","_isDisabled","hasAttribute","attrVal","isAugmented","out","findLast","findNext","findPrev","acceptCondition","isDefault","findAll","_findElements","found","currentElement","modalizerId","onElement","elements","hasCustomCondition","acceptElementState","modalizerUserId","cachedGrouppers","walker","node","_acceptElement","prepareForNextElement","shouldContinueIfNotFound","foundElement","foundBackward","fromCtx","outOfDOMOrder","currentNode","FILTER_ACCEPT","skippedFocusable","previousNode","nextNode","FILTER_SKIP","FILTER_REJECT","rejectElementsFrom","currentCtx","fromMover","acceptElement","groupperElement","fromMoverElement","moverElement","Keys","Tab","Enter","Esc","Space","PageUp","PageDown","End","Home","Left","Up","Right","Down","getUncontrolledCompletelyContainer","uncontrolledOnElement","isUncontrolledCompletely","completely","FocusedElementState","KEYBORG_FOCUSIN","_onKeyDown","_setFocusedElement","_onChanged","keyCode","ctrlKey","contentEditable","shiftKey","next","findNextTabbable","nextElement","uncontrolledCompletelyContainer","nextUncontrolled","preventDefault","stopImmediatePropagation","_lastVal","lastCtx","_lastResetElement","_nextVal","forgetMemorized","_focusFirstOrLast","focusLast","prevTabIndex","prevAriaHidden","_setOrRemoveAttribute","lastResetElement","nextVal","_validateFocusedElement","actualContainer","isTabbingTimer","_isTabbingTimer","isTabbing","callFindNext","parentCtx","currentScopeElement","newCurrent","findProps","findPropsOut","GroupperDummyManager","makeTabbable","_first","currentIsDummy","_shouldTabInside","groupperFirstFocusable","getFirst","isTabbable","noIfFirstIsFocused","isParentActive","g","orContainer","setFirst","parentCtxGroupper","parentGroupper","parentGroupperElement","getIsActive","GroupperAPI","_onMouseDown","_grouppers","_updateCurrent","altKey","metaKey","handleKeyPress","_current","groupperId","newGroupper","_onGroupperDispose","forgetCurrentGrouppers","includeTarget","checkTarget","newIds","isTarget","delegated","noGoUp","KeyboardNavigationState","_keyborg","createKeyborg","_onChange","disposeKeyborg","_wasFocusedCounter","_ariaHidden","internalId","wasFocused","ModalizerDummyManager","dummyContainer","activeElements","_activeElements","_wasFocused","makeActive","triggerFocusEvent","noIncrement","modalizerElement","isTrapped","eventName","allElements","ModalizerAPI","alwaysAccessibleSelector","accessibleCheck","_parts","_modalizers","focusedSince","m","f","augmentedMap","_augMap","currentIsOthersAccessible","isOthersAccessible","isAlwaysAccessible","_restoreModalizerFocusTimer","_restoreModalizerFocus","_aug","_alwaysAccessibleSelector","_accessibleCheck","_hiddenUpdateTimer","_onModalizerDispose","hiddenUpdate","_hiddenUpdate","elementFromModalizer","noFocusFirst","noFocusDefault","modalizerRoot","isNoFocusFirst","isNoFocusDefault","currentModalizer","parts","visibleElements","hiddenElements","alwaysAccessibleElements","Array","activeModalizerElements","modalizerParts","allVisibleElements","newAugmented","newAugmentedMap","toggle","hide","walk","containsModalizer","outsideElement","DOCUMENT_POSITION_PRECEDING","_inputSelector","MoverDummyManager","getMemorized","memorized","_getMemorized","_onFocusDummyInput","_moverUpdateAdd","_moverUpdateAttr","_moverUpdateRemove","entries","newVisibility","fullyVisible","_fullyVisible","intersectionRatio","_visible","getState","visibilityTolerance","trackState","visibilityAware","_intersectionObserver","IntersectionObserver","_onIntersection","threshold","_observeState","memorizeCurrent","disconnect","_allElements","_unobserve","_setCurrentTimer","setCurrent","changed","_prevCurrent","weak","getCurrent","hasDefault","MutationObserver","tabsterFocusable","updateQueue","observer","mutations","mutation","removedNodes","added","addedNodes","attributeName","requestUpdate","setElement","unobserve","observe","updateElement","addNewElements","getMoverGroupper","removeWalk","toe","childList","subtree","attributes","attributeFilter","isCurrent","getDistance","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","xDistance","yDistance","sqrt","MoverAPI","_movers","currentFocusableElement","deepestFocusableElement","_ignoredInputTimer","_ignoredInputResolve","_isIgnoredInput","moverProps","direction","isBoth","isVertical","isHorizontal","isGridLinear","isGrid","isCyclic","cyclic","focusedElementRect","focusedElementX1","focusedElementX2","ceil","floor","nextElementX1","nextElementX2","firstColumnX1","lastColumnX1","lastDistance","lastIntersection","xIntersectionWidth","minWidth","intersection","distance","moverId","newMover","_onMoverDispose","selectionStart","selectionEnd","textLength","asyncRet","selection","getSelection","initialLength","modify","selStart","anchorNode","prevAnchorNode","focusNode","prevFocusNode","anchorOffset","prevAnchorOffset","focusOffset","prevFocusOffset","textContent","anchorFound","addOffsets","nodeText","firstChild","len","stop","observeMutations","syncState","onMutation","updateTabsterElements","processNode","_conditionCheckTimeout","ObservedElementAPI","_currentRequest","delta","_currentRequestTimestamp","settleTime","cancel","info","_observedById","observedNames","prevNames","_isObservedNamesUpdated","prevName","obn","_observedByName","_waitConditional","_waiting","_rejectWaiting","shouldResolve","conditionTimer","o","prefix","request","promise","currentRequestFocus","waitingElementKey","waitingAccessibleElementKey","waitingFocusableElementKey","waitingElement","waitingAccessibleElement","waitingFocusableElement","waiting","includes","resolveAccessible","resolveFocusable","defaultProps","areaClass","outlineClass","outlineColor","outlineWidth","OutlinePosition","equalsTo","other","clone","OutlineAPI","_onScroll","_fullScreenEventName","_onFullScreenChanged","_fullScreenElementName","outlineElements","_getDOM","fsElement","_fullScreenElement","_updateElement","_isVisible","_setVisibility","_outlinedElement","_isParentChild","_curPos","_setOutlinePosition","__tabsterOutline","appendStyles","classList","_allOutlineElements","_removeDOM","_curOutlineElements","_shouldShowCustomOutline","isIgnored","inputType","outlinedInputTypes","button","checkbox","file","image","radio","range","submit","_updateOutline","visible","boundingRect","p","hasAbsolutePositionedParent","hasFixedPositionedParent","overflow","allRect","allWidth","allHeight","ow","leftBorderNode","topBorderNode","rightBorderNode","bottomBorderNode","sx","pageXOffset","sy","pageYOffset","background","contextElement","parentNode","child","DOCUMENT_POSITION_CONTAINED_BY","createTextNode","getOutlineStyles","head","UncontrolledAPI","_isUncontrolledCompletely","EVENT_NAME","HISOTRY_DEPTH","Restorer","Event","bubbles","_hasFocus","RestorerAPI","_restoreFocusTimeout","_restoreFocus","tabsterAttribute","_addToHistory","_keyboardNavState","_onRestoreFocus","_focusedElementState","shift","Tabster","core","TabsterCore","__VERSION__","_storage","checkUncontrolledCompletely","checkUncontrolledTrappingFocus","internal","stopObserver","resumeObserver","_mergeProps","createTabster","noRefCount","disposeTabster","allInstances","size","_initTimer","_initQueue","_forgetMemorizedElements","_forgetMemorizedTimer","addremove","storage","forceCleanup","queue","tabsterCore","getCurrentTabster","getTabster","getGroupper","getMover","getOutline","getModalizer","getObservedElement","getCrossOrigin","getInternal","getRestorer","makeNoOp","noop","isNoOp"],"mappings":";;AAAA;;;;AAKO,MAAMA,oBAAoB,GAAG,cAA7B;AACA,MAAMC,8BAA8B,GAAG,oBAAvC;AACA,MAAMC,gBAAgB,GAAG,iBAAzB;AACA,MAAMC,wBAAwB,GAAG,0BAAjC;AACA,MAAMC,0BAA0B,GAAG,4BAAnC;AACA,MAAMC,yBAAyB,GAAG,2BAAlC;AACA,MAAMC,0BAA0B,GAAG,4BAAnC;AACA,MAAMC,gCAAgC,GACzC,kCADG;AAEA,MAAMC,cAAc,GAAG,eAAvB;AACA,MAAMC,gBAAgB,GAAG,iBAAzB;AACA,MAAMC,iBAAiB,GAAG,kBAA1B;AAEA,MAAMC,iBAAiB,gBAAG,CAC7B,SAD6B,EAE7B,wBAF6B,EAG7B,uBAH6B,EAI7B,wBAJ6B,EAK7B,0BAL6B,EAM7B,aAN6B,EAO7B,oBAP6B,EAQ/BC,IAR+B,CAQ1B,IAR0B,CAA1B;AAyJA,MAAMC,6BAA6B,GAAkC;AACxEC,EAAAA,GAAG,EAAE,CADmE;AAExEC,EAAAA,UAAU,EAAE,CAF4D;AAGxEC,EAAAA,SAAS,EAAE;AAH6D,CAArE;AAyKA,MAAMC,kBAAkB,GAAuB;AAClDC,EAAAA,OAAO,EAAE,CADyC;AAElDC,EAAAA,cAAc,EAAE,CAFkC;AAGlDC,EAAAA,WAAW,EAAE,CAHqC;AAIlDC,EAAAA,YAAY,EAAE,CAJoC;AAKlDC,EAAAA,SAAS,EAAE;AALuC,CAA/C;AAwQA,MAAMC,YAAY,GAAiB;AACtCC,EAAAA,SAAS,EAAE,CAD2B;AAEtCC,EAAAA,gBAAgB,EAAE,CAFoB;AAGtCC,EAAAA,OAAO,EAAE;AAH6B,CAAnC;AAoBA,MAAMC,aAAa,GAAG;AACzBC,EAAAA,MAAM,EAAE,CADiB;AAEzBC,EAAAA,MAAM,EAAE;AAFiB,CAAtB;AAOA,MAAMC,eAAe,GAAoB;AAC5CC,EAAAA,IAAI,EAAE,CADsC;AAE5CC,EAAAA,QAAQ,EAAE,CAFkC;AAG5CC,EAAAA,UAAU,EAAE,CAHgC;AAI5CC,EAAAA,IAAI,EAAE,CAJsC;AAK5CC,EAAAA,UAAU,EAAE;AALgC,CAAzC;AAkGA,MAAMC,qBAAqB,GAA0B;AACxDC,EAAAA,SAAS,EAAE,CAD6C;AAExDC,EAAAA,OAAO,EAAE,CAF+C;AAGxDC,EAAAA,gBAAgB,EAAE;AAHsC,CAArD;AAqIA,MAAMC,uBAAuB,GAA4B;AAC5DC,EAAAA,IAAI,EAAE,CADsD;AAE5DC,EAAAA,MAAM,EAAE,CAFoD;AAG5DC,EAAAA,OAAO,EAAE;AAHmD,CAAzD;;;;;;;;;;;;;;;;;;;;;;;;;AC91BP;;;;SAOgBC,oBACZC,SACAC;;;AAEA,SAAO,MAAAD,OAAO,CAACE,YAAR,CAAqBD,OAArB,CAAA,UAAA,iBAAA,SAAA,MAA+BD,OAAtC;AACH;SAEeG,yBACZH,SACAC,SACAG;;;AAEA,QAAMC,YAAY,GACdD,OAAO,IAAIJ,OAAO,CAACM,KAAnB,GACMC,SADN,GAEMN,OAAO,CAACO,YAAR,CAAqBC,oBAArB,CAHV;AAKA,MAAIC,KAAK,GAAGV,OAAO,CAACE,YAAR,CAAqBD,OAArB,CAAZ;AACA,MAAIU,OAAJ;;AAEA,MAAIN,YAAJ,EAAkB;AACd,QAAIA,YAAY,MAAK,MAAAK,KAAK,SAAL,IAAAA,KAAK,WAAL,SAAA,GAAAA,KAAK,CAAEE,IAAP,UAAA,iBAAA,SAAA,MAAaC,MAAlB,CAAhB,EAA0C;AACtC,UAAI;AACA,cAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CACbX,YADa,CAAjB;;AAIA,YAAI,OAAOS,QAAP,KAAoB,QAAxB,EAAkC;AAC9B,gBAAM,IAAIG,KAAJ,qCACkCZ,gBADlC,CAAN;AAGH;;AAEDM,QAAAA,OAAO,GAAG;AACNE,UAAAA,MAAM,EAAER,YADF;AAENa,UAAAA,MAAM,EAAEJ;AAFF,SAAV;AAIH,OAfD,CAeE,OAAOK,CAAP,EAAU;AACR,YAAIC,sCAAJ,EAAa;AACTC,UAAAA,OAAO,CAACC,KAAR,kCACqCH,GADrC,EAEIlB,OAFJ;AAIH;AACJ;AACJ,KAxBD,MAwBO;AACH;AACH;AACJ,GA5BD,MA4BO,IAAI,CAACS,KAAL,EAAY;AACf;AACH;;AAED,MAAI,CAACA,KAAL,EAAY;AACR;AACAA,IAAAA,KAAK,GAAGV,OAAO,CAACE,YAAR,CAAqBD,OAArB,EAA8B,IAA9B,CAAR;AACH;;AAED,MAAI,CAACS,KAAK,CAACV,OAAX,EAAoB;AAChBU,IAAAA,KAAK,CAACV,OAAN,GAAgB,EAAhB;AACH;;AAED,QAAMuB,gBAAgB,GAAGb,KAAK,CAACV,OAAN,IAAiB,EAA1C;AACA,QAAMwB,eAAe,GAAG,CAAA,MAAAd,KAAK,CAACE,IAAN,UAAA,iBAAA,SAAA,MAAYM,MAAZ,KAAsB,EAA9C;AACA,QAAMO,eAAe,GAAG,CAAAd,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEO,MAAT,KAAmB,EAA3C;;AAEA,OAAK,MAAMQ,GAAX,IAAkBC,MAAM,CAACC,IAAP,CACdJ,eADc,CAAlB,EAE4C;AACxC,QAAI,CAACC,eAAe,CAACC,GAAD,CAApB,EAA2B;AACvB,UAAIA,GAAG,KAAK,MAAZ,EAAoB;AAChB,cAAMG,IAAI,GAAGN,gBAAgB,CAACG,GAAD,CAA7B;;AAEA,YAAIG,IAAJ,EAAU;AACN7B,UAAAA,OAAO,CAAC6B,IAAR,CAAaC,MAAb,CAAoBD,IAApB,EAA0B,IAA1B;AACH;AACJ;;AAED,cAAQH,GAAR;AACI,aAAK,SAAL;AACA,aAAK,MAAL;AACA,aAAK,UAAL;AACA,aAAK,WAAL;AACA,aAAK,UAAL;AACA,aAAK,OAAL;AACI;AACA,gBAAMK,IAAI,GAAGR,gBAAgB,CAACG,GAAD,CAA7B;;AACA,cAAIK,IAAJ,EAAU;AACNA,YAAAA,IAAI,CAAC3B,OAAL;AACA,mBAAOmB,gBAAgB,CAACG,GAAD,CAAvB;AACH;;AACD;;AAEJ,aAAK,UAAL;AACI,iBAAOH,gBAAgB,CAACG,GAAD,CAAvB;;AACA,cAAI1B,OAAO,CAACgC,eAAZ,EAA6B;AACzBhC,YAAAA,OAAO,CAACgC,eAAR,CAAwBC,uBAAxB,CACIhC,OADJ;AAGH;;AACD;;AAEJ,aAAK,WAAL;AACA,aAAK,SAAL;AACA,aAAK,cAAL;AACA,aAAK,KAAL;AACI,iBAAOsB,gBAAgB,CAACG,GAAD,CAAvB;AACA;AA7BR;AA+BH;AACJ;;AAED,OAAK,MAAMA,GAAX,IAAkBC,MAAM,CAACC,IAAP,CACdH,eADc,CAAlB,EAE4C;AACxC,UAAMS,GAAG,GAAGT,eAAe,CAACS,GAA5B;;AAEA,YAAQR,GAAR;AACI,WAAK,SAAL;AACI,YAAIH,gBAAgB,CAACY,OAArB,EAA8B;AAC1BZ,UAAAA,gBAAgB,CAACY,OAAjB,CAAyBC,QAAzB,CACIX,eAAe,CAACU,OADpB;AAGH,SAJD,MAIO;AACH,cAAInC,OAAO,CAACmC,OAAZ,EAAqB;AACjBZ,YAAAA,gBAAgB,CAACY,OAAjB,GACInC,OAAO,CAACmC,OAAR,CAAgBE,aAAhB,CACIpC,OADJ,EAEIwB,eAAe,CAACU,OAFpB,CADJ;AAKH,WAND,MAMO,IAAIf,sCAAJ,EAAa;AAChBC,YAAAA,OAAO,CAACC,KAAR,CACI,oEADJ;AAGH;AACJ;;AACD;;AAEJ,WAAK,MAAL;AACI,YAAIC,gBAAgB,CAACM,IAArB,EAA2B;AACvBN,UAAAA,gBAAgB,CAACM,IAAjB,CAAsBO,QAAtB,CACIX,eAAe,CAACI,IADpB;AAGH,SAJD,MAIO;AACHN,UAAAA,gBAAgB,CAACM,IAAjB,GAAwB7B,OAAO,CAAC6B,IAAR,CAAaS,UAAb,CACpBrC,OADoB,EAEpBwB,eAAe,CAACI,IAFI,EAGpBK,GAHoB,CAAxB;AAKH;;AACDlC,QAAAA,OAAO,CAAC6B,IAAR,CAAaC,MAAb,CAAoBP,gBAAgB,CAACM,IAArC;AACA;;AAEJ,WAAK,WAAL;AACI,YAAIN,gBAAgB,CAACgB,SAArB,EAAgC;AAC5BhB,UAAAA,gBAAgB,CAACgB,SAAjB,CAA2BH,QAA3B,CACIX,eAAe,CAACc,SADpB;AAGH,SAJD,MAIO;AACH,cAAIvC,OAAO,CAACuC,SAAZ,EAAuB;AACnBhB,YAAAA,gBAAgB,CAACgB,SAAjB,GACIvC,OAAO,CAACuC,SAAR,CAAkBC,eAAlB,CACIvC,OADJ,EAEIwB,eAAe,CAACc,SAFpB,EAGIL,GAHJ,CADJ;AAMH,WAPD,MAOO,IAAId,sCAAJ,EAAa;AAChBC,YAAAA,OAAO,CAACC,KAAR,CACI,wEADJ;AAGH;AACJ;;AACD;;AAEJ,WAAK,UAAL;AACI,YAAIC,gBAAgB,CAACkB,QAArB,EAA+B;AAC3BlB,UAAAA,gBAAgB,CAACkB,QAAjB,CAA0BL,QAA1B,CACIX,eAAe,CAACgB,QADpB;AAGH,SAJD,MAIO;AACH,cAAIzC,OAAO,CAACyC,QAAZ,EAAsB;AAClB,gBAAIhB,eAAe,CAACgB,QAApB,EAA8B;AAC1BlB,cAAAA,gBAAgB,CAACkB,QAAjB,GACIzC,OAAO,CAACyC,QAAR,CAAiBC,cAAjB,CACIzC,OADJ,EAEIwB,eAAe,CAACgB,QAFpB,CADJ;AAKH;AACJ,WARD,MAQO,IAAIrB,sCAAJ,EAAa;AAChBC,YAAAA,OAAO,CAACC,KAAR,CACI,sEADJ;AAGH;AACJ;;AAED;;AAEJ,WAAK,WAAL;AACIC,QAAAA,gBAAgB,CAACoB,SAAjB,GAA6BlB,eAAe,CAACkB,SAA7C;AACA;;AAEJ,WAAK,UAAL;AACI,YAAIpB,gBAAgB,CAACqB,QAArB,EAA+B;AAC3BrB,UAAAA,gBAAgB,CAACqB,QAAjB,CAA0BR,QAA1B,CACIX,eAAe,CAACmB,QADpB;AAGH,SAJD,MAIO;AACH,cAAI5C,OAAO,CAAC4C,QAAZ,EAAsB;AAClBrB,YAAAA,gBAAgB,CAACqB,QAAjB,GACI5C,OAAO,CAAC4C,QAAR,CAAiBC,cAAjB,CACI5C,OADJ,EAEIwB,eAAe,CAACmB,QAFpB,EAGIV,GAHJ,CADJ;AAMH,WAPD,MAOO,IAAId,sCAAJ,EAAa;AAChBC,YAAAA,OAAO,CAACC,KAAR,CACI,sEADJ;AAGH;AACJ;;AACD;;AAEJ,WAAK,OAAL;AACI,YAAIC,gBAAgB,CAACuB,KAArB,EAA4B;AACxBvB,UAAAA,gBAAgB,CAACuB,KAAjB,CAAuBV,QAAvB,CACIX,eAAe,CAACqB,KADpB;AAGH,SAJD,MAIO;AACH,cAAI9C,OAAO,CAAC8C,KAAZ,EAAmB;AACfvB,YAAAA,gBAAgB,CAACuB,KAAjB,GAAyB9C,OAAO,CAAC8C,KAAR,CAAcC,WAAd,CACrB9C,OADqB,EAErBwB,eAAe,CAACqB,KAFK,EAGrBZ,GAHqB,CAAzB;AAKH,WAND,MAMO,IAAId,sCAAJ,EAAa;AAChBC,YAAAA,OAAO,CAACC,KAAR,CACI,gEADJ;AAGH;AACJ;;AACD;;AAEJ,WAAK,UAAL;AACI,YAAItB,OAAO,CAACgC,eAAZ,EAA6B;AACzBT,UAAAA,gBAAgB,CAACyB,QAAjB,GAA4BvB,eAAe,CAACuB,QAA5C;AACAhD,UAAAA,OAAO,CAACgC,eAAR,CAAwBC,uBAAxB,CAAgDhC,OAAhD;AACH,SAHD,MAGO,IAAImB,sCAAJ,EAAa;AAChBC,UAAAA,OAAO,CAACC,KAAR,CACI,oFADJ;AAGH;;AACD;;AAEJ,WAAK,cAAL;AACIC,QAAAA,gBAAgB,CAAC0B,YAAjB,GAAgCxB,eAAe,CAACwB,YAAhD;AACA;;AAEJ,WAAK,SAAL;AACI,YAAIjD,OAAO,CAACkD,OAAZ,EAAqB;AACjB3B,UAAAA,gBAAgB,CAAC2B,OAAjB,GAA2BzB,eAAe,CAACyB,OAA3C;AACH,SAFD,MAEO,IAAI9B,sCAAJ,EAAa;AAChBC,UAAAA,OAAO,CAACC,KAAR,CACI,oEADJ;AAGH;;AACD;;AAEJ,WAAK,KAAL;AACIC,QAAAA,gBAAgB,CAACW,GAAjB,GAAuBT,eAAe,CAACS,GAAvC;AACA;;AAEJ;AACIb,QAAAA,OAAO,CAACC,KAAR,iBACoBI,uCADpB;AA3JR;AA+JH;;AAED,MAAIf,OAAJ,EAAa;AACTD,IAAAA,KAAK,CAACE,IAAN,GAAaD,OAAb;AACH,GAFD,MAEO;AACH,QAAIgB,MAAM,CAACC,IAAP,CAAYL,gBAAZ,EAA8B4B,MAA9B,KAAyC,CAA7C,EAAgD;AAC5C,aAAOzC,KAAK,CAACV,OAAb;AACA,aAAOU,KAAK,CAACE,IAAb;AACH;;AACDZ,IAAAA,OAAO,CAACE,YAAR,CAAqBD,OAArB,EAA8B,KAA9B;AACH;AACJ;;ACrSD;;;;SAOgBmD,kBAAkBC;AAC9B,QAAMC,MAAM,GAAGD,SAAS,EAAxB;;AAEA,MAAI;AACA,QAAIC,MAAM,CAACC,WAAX,EAAwB;AACpB,aAAO,IAAID,MAAM,CAACC,WAAX,EAAP;AACH;AACJ,GAJD,CAIE,OAAOjC,KAAP,EAAc;AACZ;AACA,QAAI,EAAEA,KAAK,YAAYkC,SAAnB,CAAJ,EAAmC;AAC/B,YAAMlC,KAAN;AACH;AACJ;;AAED,SAAOgC,MAAM,CAACG,QAAP,CAAgBC,aAAhB,CAA8B,KAA9B,CAAP;AACH;;ACtBD;;;;;AAsDA,IAAIC,aAAJ;;AAEA,MAAMC,QAAQ,GACV,OAAOC,OAAP,KAAmB,WAAnB,GACMA,OADN,GAEM;AAMIC,EAAAA,YACIC,GACAC,GACAC,OACAC;AAEA,SAAKC,IAAL,GAAYJ,CAAC,IAAI,CAAjB;AACA,SAAKK,GAAL,GAAWJ,CAAC,IAAI,CAAhB;AACA,SAAKK,KAAL,GAAa,CAACN,CAAC,IAAI,CAAN,KAAYE,KAAK,IAAI,CAArB,CAAb;AACA,SAAKK,MAAL,GAAc,CAACN,CAAC,IAAI,CAAN,KAAYE,MAAM,IAAI,CAAtB,CAAd;AACH;;CAnBf;;AAsBA,IAAIK,WAAW,GAAG,CAAlB;;AAEA,IAAI;AACA;AACA;AACA;AACAd,EAAAA,QAAQ,CAACe,gBAAT,CAA0Bf,QAA1B,EAAoCgB,UAAU,CAACC,YAA/C;AACAf,EAAAA,aAAa,GAAG,KAAhB;AACH,CAND,CAME,OAAOxC,CAAP,EAAU;AACRwC,EAAAA,aAAa,GAAG,IAAhB;AACH;;AAED,MAAMgB,yBAAyB,GAAG,GAAlC;SAQgBC,mBAAmBvB;AAC/B,QAAMwB,GAAG,GAAGxB,SAAS,EAArB;AAEA,MAAIyB,GAAG,GAAGD,GAAG,CAACE,wBAAd;;AAEA,MAAI,CAACD,GAAL,EAAU;AACNA,IAAAA,GAAG,GAAG;AACFE,MAAAA,YAAY,EAAE,EADZ;AAEFC,MAAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAEL,GAAG,CAACK,OAAJ,IAAe3E,SADpB;AAEJ4E,QAAAA,OAAO,EAAEN,GAAG,CAACM,OAAJ,IAAe5E;AAFpB,OAFN;AAMF6E,MAAAA,0BAA0B,EAAE,EAN1B;AAOFC,MAAAA,gCAAgC,EAAE,CAPhC;AAQFC,MAAAA,YAAY,EAAE,EARZ;AASFC,MAAAA,mBAAmB,EAAE;AATnB,KAAN;AAYAV,IAAAA,GAAG,CAACE,wBAAJ,GAA+BD,GAA/B;AACH;;AAED,SAAOA,GAAP;AACH;SAEeU,uBAAuBX;AACnC,QAAMC,GAAG,GAAID,GAA6B,CAACE,wBAA3C;;AAEA,MAAID,GAAJ,EAAS;AACLA,IAAAA,GAAG,CAACE,YAAJ,GAAmB,EAAnB;AAEA,WAAOF,GAAG,CAACK,OAAX;AAEAL,IAAAA,GAAG,CAACM,0BAAJ,GAAiC,EAAjC;;AAEA,QAAIN,GAAG,CAACW,+BAAR,EAAyC;AACrCZ,MAAAA,GAAG,CAACa,YAAJ,CAAiBZ,GAAG,CAACW,+BAArB;AACH;;AAED,QAAIX,GAAG,CAACa,iBAAR,EAA2B;AACvBd,MAAAA,GAAG,CAACa,YAAJ,CAAiBZ,GAAG,CAACa,iBAArB;AACH;;AAEDb,IAAAA,GAAG,CAACQ,YAAJ,GAAmB,EAAnB;AAEA,WAAQT,GAA6B,CAACE,wBAAtC;AACH;AACJ;SAEea,cAAmCf;AAC/C,QAAMC,GAAG,GAAID,GAA6B,CAACE,wBAA3C;AACA,SAAO,KAAK,CAAAD,GAAG,SAAH,IAAAA,GAAG,WAAH,SAAA,GAAAA,GAAG,CAAEG,MAAL,CAAYY,OAAZ,KAAuBA,OAA5B,GAAP;AACH;SAEeC,gBAAgB7F;AAC5B,SAAO,CAAC,CAACA,OAAO,CAAC8F,aAAR,CAAsBtF,iBAAtB,CAAT;AACH;;AAMD,MAAMuF,WAAN;AAKIlC,EAAAA,YAAYmC;AACR,SAAKC,OAAL,GAAeD,MAAf;AACH;;AAEDE,EAAAA,KAAK;AACD,WAAO,KAAKD,OAAZ;AACH;;AAEa,SAAPE,OAAO,CAACC,GAAD,EAAmBC,WAAnB;AACV,QAAI,CAACD,GAAG,CAACH,OAAT,EAAkB;AACd,aAAO,IAAP;AACH;;AAED,QACII,WAAW,IACX,CAACC,gBAAgB,CAACF,GAAG,CAACH,OAAJ,CAAYM,aAAb,EAA4BH,GAAG,CAACH,OAAhC,CAFrB,EAGE;AACE,aAAOG,GAAG,CAACH,OAAX;AACA,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH;;;;MAGQO;AAMT3C,EAAAA,YAAYT,WAAsBpD,SAAYyG;AAC1C,UAAMC,OAAO,GAAG/B,kBAAkB,CAACvB,SAAD,CAAlC;AAEA,QAAIuD,GAAJ;;AACA,QAAID,OAAO,CAACxB,OAAZ,EAAqB;AACjByB,MAAAA,GAAG,GAAG,IAAID,OAAO,CAACxB,OAAZ,CAAoBlF,OAApB,CAAN;AACH,KAFD,MAEO;AACH2G,MAAAA,GAAG,GAAG,IAAIZ,WAAJ,CAAgB/F,OAAhB,CAAN;AACA0G,MAAAA,OAAO,CAACrB,YAAR,CAAqBuB,IAArB,CAA0BD,GAA1B;AACH;;AAED,SAAKE,IAAL,GAAYF,GAAZ;AACA,SAAKG,KAAL,GAAaL,IAAb;AACH;;AAEDM,EAAAA,GAAG;AACC,UAAMJ,GAAG,GAAG,KAAKE,IAAjB;AACA,QAAI7G,OAAJ;;AAEA,QAAI2G,GAAJ,EAAS;AACL3G,MAAAA,OAAO,GAAG2G,GAAG,CAACT,KAAJ,EAAV;;AAEA,UAAI,CAAClG,OAAL,EAAc;AACV,eAAO,KAAK6G,IAAZ;AACH;AACJ;;AAED,WAAO7G,OAAP;AACH;;AAEDgH,EAAAA,OAAO;AACH,WAAO,KAAKF,KAAZ;AACH;;;SAGWG,oBACZ7D,WACAiD;AAEA,QAAMK,OAAO,GAAG/B,kBAAkB,CAACvB,SAAD,CAAlC;AACAsD,EAAAA,OAAO,CAACrB,YAAR,GAAuBqB,OAAO,CAACrB,YAAR,CAAqB6B,MAArB,CAClBhG,CAAD,IAAO,CAAC6E,WAAW,CAACI,OAAZ,CAAoBjF,CAApB,EAAsCmF,WAAtC,CADW,CAAvB;AAGH;SAEec,yBAAyB/D;AACrC,QAAMsD,OAAO,GAAG/B,kBAAkB,CAACvB,SAAD,CAAlC;;AAEA,MAAI,CAACsD,OAAO,CAACpB,mBAAb,EAAkC;AAC9BoB,IAAAA,OAAO,CAACpB,mBAAR,GAA8B,IAA9B;AACAoB,IAAAA,OAAO,CAACxB,OAAR,GAAkBkC,UAAU,CAACV,OAAD,CAA5B;AACH;;AAED,MAAI,CAACA,OAAO,CAAChB,iBAAb,EAAgC;AAC5BgB,IAAAA,OAAO,CAAChB,iBAAR,GAA4BtC,SAAS,GAAGiE,UAAZ,CAAuB;AAC/CX,MAAAA,OAAO,CAAChB,iBAAR,GAA4BpF,SAA5B;AACA2G,MAAAA,mBAAmB,CAAC7D,SAAD,CAAnB;AACA+D,MAAAA,wBAAwB,CAAC/D,SAAD,CAAxB;AACH,KAJ2B,EAIzB,IAAI,EAAJ,GAAS,IAJgB,CAA5B,CAD4B;AAM/B;AACJ;SAEekE,uCACZlE;AAEA,QAAMsD,OAAO,GAAG/B,kBAAkB,CAACvB,SAAD,CAAlC;AAEAsD,EAAAA,OAAO,CAACpB,mBAAR,GAA8B,KAA9B;;AAEA,MAAIoB,OAAO,CAAChB,iBAAZ,EAA+B;AAC3BtC,IAAAA,SAAS,GAAGqC,YAAZ,CAAyBiB,OAAO,CAAChB,iBAAjC;AACAgB,IAAAA,OAAO,CAAChB,iBAAR,GAA4BpF,SAA5B;AACAoG,IAAAA,OAAO,CAACrB,YAAR,GAAuB,EAAvB;AACH;AACJ;SAEekC,wBACZC,KACA5F,MACA6F;AAEA;AACA,MAAI7F,IAAI,CAAC8F,QAAL,KAAkBC,IAAI,CAACC,YAA3B,EAAyC;AACrC,WAAOtH,SAAP;AACH;;;AAGD,QAAM4G,MAAM,GAAIxD,aAAa,GACvB+D,UADuB,GAEtB;AAAEA,IAAAA;AAAF,GAFP;AAIA,SAAOD,GAAG,CAACjD,gBAAJ,CACH3C,IADG,EAEH4C,UAAU,CAACC,YAFR,EAGHyC,MAHG;AAKH;AACA;AAAM;AANH,GAAP;AAQH;SAEeW,gBACZzE,WACApD;AAEA,MAAI8H,OAAO,GAAG9H,OAAO,CAAC+H,gBAAtB;AACA,QAAMrB,OAAO,GAAG/B,kBAAkB,CAACvB,SAAD,CAAlC;AACA,QAAM4E,MAAM,GAAGF,OAAO,GAChBpB,OAAO,CAACvB,0BAAR,CAAmC2C,OAAnC,CADgB,GAEhBxH,SAFN;;AAIA,MAAI0H,MAAJ,EAAY;AACR,WAAOA,MAAM,CAACC,IAAd;AACH;;AAED,QAAMC,gBAAgB,GAClBlI,OAAO,CAACuG,aAAR,IAAyBvG,OAAO,CAACuG,aAAR,CAAsB4B,eADnD;;AAGA,MAAI,CAACD,gBAAL,EAAuB;AACnB,WAAO,IAAIvE,QAAJ,EAAP;AACH;AAGD;;;AACA,MAAIO,IAAI,GAAG,CAAX;AACA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,KAAK,GAAG8D,gBAAgB,CAACE,WAA7B;AACA,MAAI/D,MAAM,GAAG6D,gBAAgB,CAACG,YAA9B;;AAEA,MAAIrI,OAAO,KAAKkI,gBAAhB,EAAkC;AAC9B,UAAMI,CAAC,GAAGtI,OAAO,CAACuI,qBAAR,EAAV;AACArE,IAAAA,IAAI,GAAGsE,IAAI,CAACC,GAAL,CAASvE,IAAT,EAAeoE,CAAC,CAACpE,IAAjB,CAAP;AACAC,IAAAA,GAAG,GAAGqE,IAAI,CAACC,GAAL,CAAStE,GAAT,EAAcmE,CAAC,CAACnE,GAAhB,CAAN;AACAC,IAAAA,KAAK,GAAGoE,IAAI,CAACE,GAAL,CAAStE,KAAT,EAAgBkE,CAAC,CAAClE,KAAlB,CAAR;AACAC,IAAAA,MAAM,GAAGmE,IAAI,CAACE,GAAL,CAASrE,MAAT,EAAiBiE,CAAC,CAACjE,MAAnB,CAAT;AACH;;AAED,QAAM4D,IAAI,GAAG,IAAItE,QAAJ,CACTO,IAAI,GAAGE,KAAP,GAAeF,IAAf,GAAsB,CAAC,CADd,EAETC,GAAG,GAAGE,MAAN,GAAeF,GAAf,GAAqB,CAAC,CAFb,EAGTD,IAAI,GAAGE,KAAP,GAAeA,KAAK,GAAGF,IAAvB,GAA8B,CAHrB,EAITC,GAAG,GAAGE,MAAN,GAAeA,MAAM,GAAGF,GAAxB,GAA8B,CAJrB,CAAb;;AAOA,MAAI,CAAC2D,OAAL,EAAc;AACVA,IAAAA,OAAO,GAAG,OAAO,EAAEpB,OAAO,CAACtB,gCAA3B;AACApF,IAAAA,OAAO,CAAC+H,gBAAR,GAA2BD,OAA3B;AACH;;AAEDpB,EAAAA,OAAO,CAACvB,0BAAR,CAAmC2C,OAAnC,IAA8C;AAC1CG,IAAAA,IAD0C;AAE1CjI,IAAAA;AAF0C,GAA9C;;AAKA,MAAI,CAAC0G,OAAO,CAAClB,+BAAb,EAA8C;AAC1CkB,IAAAA,OAAO,CAAClB,+BAAR,GAA0CmD,MAAM,CAACtB,UAAP,CAAkB;AACxDX,MAAAA,OAAO,CAAClB,+BAAR,GAA0ClF,SAA1C;;AAEA,WAAK,MAAMsI,GAAX,IAAkBlH,MAAM,CAACC,IAAP,CAAY+E,OAAO,CAACvB,0BAApB,CAAlB,EAAmE;AAC/D,eAAOuB,OAAO,CAACvB,0BAAR,CAAmCyD,GAAnC,EAAwC5I,OAAxC,CACF+H,gBADL;AAEH;;AAEDrB,MAAAA,OAAO,CAACvB,0BAAR,GAAqC,EAArC;AACH,KATyC,EASvC,EATuC,CAA1C;AAUH;;AAED,SAAO8C,IAAP;AACH;SAEeY,sCACZzF,WACApD,SACA8I;AAEA,QAAMC,SAAS,GAAGC,sBAAsB,CAAChJ,OAAD,CAAxC;;AACA,MAAI,CAAC+I,SAAL,EAAgB;AACZ,WAAO,KAAP;AACH;;AAED,QAAME,aAAa,GAAGpB,eAAe,CAACzE,SAAD,EAAY2F,SAAZ,CAArC;AACA,QAAMG,WAAW,GAAGlJ,OAAO,CAACuI,qBAAR,EAApB;AACA,QAAMY,qBAAqB,GAAGD,WAAW,CAACjF,MAAZ,IAAsB,IAAI6E,SAA1B,CAA9B;AACA,QAAMM,eAAe,GAAGZ,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYQ,aAAa,CAAC9E,GAAd,GAAoB+E,WAAW,CAAC/E,GAA5C,CAAxB;AACA,QAAMkF,kBAAkB,GAAGb,IAAI,CAACC,GAAL,CACvB,CADuB,EAEvBS,WAAW,CAAC7E,MAAZ,GAAqB4E,aAAa,CAAC5E,MAFZ,CAA3B;AAIA,QAAMiF,iBAAiB,GAAGF,eAAe,GAAGC,kBAA5C;AAEA,SACIC,iBAAiB,KAAK,CAAtB,IAA2BA,iBAAiB,IAAIH,qBADpD;AAGH;SAyCeI,eACZnG,WACApD,SACAwJ;AAEA;AACA;AACA,QAAMT,SAAS,GAAGC,sBAAsB,CAAChJ,OAAD,CAAxC;;AAEA,MAAI+I,SAAJ,EAAe;AACX,UAAME,aAAa,GAAGpB,eAAe,CAACzE,SAAD,EAAY2F,SAAZ,CAArC;AACA,UAAMG,WAAW,GAAGlJ,OAAO,CAACuI,qBAAR,EAApB;;AAEA,QAAIiB,UAAJ,EAAgB;AACZT,MAAAA,SAAS,CAACU,SAAV,IAAuBP,WAAW,CAAC/E,GAAZ,GAAkB8E,aAAa,CAAC9E,GAAvD;AACH,KAFD,MAEO;AACH4E,MAAAA,SAAS,CAACU,SAAV,IAAuBP,WAAW,CAAC7E,MAAZ,GAAqB4E,aAAa,CAAC5E,MAA1D;AACH;AACJ;AACJ;SAEe2E,uBACZhJ;AAEA,QAAMwH,GAAG,GAAGxH,OAAO,CAACuG,aAApB;;AAEA,MAAIiB,GAAJ,EAAS;AACL,SACI,IAAIkC,EAAE,GAAuB1J,OAAO,CAAC2J,aADzC,EAEID,EAFJ,EAGIA,EAAE,GAAGA,EAAE,CAACC,aAHZ,EAIE;AACE,UACID,EAAE,CAACE,WAAH,GAAiBF,EAAE,CAACtB,WAApB,IACAsB,EAAE,CAACG,YAAH,GAAkBH,EAAE,CAACrB,YAFzB,EAGE;AACE,eAAOqB,EAAP;AACH;AACJ;;AAED,WAAOlC,GAAG,CAACW,eAAX;AACH;;AAED,SAAO,IAAP;AACH;SAEe2B,iBAAiB9J;AAC5BA,EAAAA,OAAwC,CAAC+J,mBAAzC,GAA+D,IAA/D;AACJ;SAEeC,kBAAkBhK;AAC9B,SAAO,CAAC,CAAEA,OAAwC,CAAC+J,mBAAnD;AACH;SAEeE,OAAOC;AACnB,QAAMC,GAAG,GAAG,IAAIC,WAAJ,CAAgB,CAAhB,CAAZ;;AAEA,MAAIF,GAAG,CAACG,MAAJ,IAAcH,GAAG,CAACG,MAAJ,CAAWC,eAA7B,EAA8C;AAC1CJ,IAAAA,GAAG,CAACG,MAAJ,CAAWC,eAAX,CAA2BH,GAA3B;AACH,GAFD,MAEO,IAAID,GAAG,CAACK,QAAJ,IAAgBL,GAAG,CAACK,QAAJ,CAAaD,eAAjC,EAAkD;AACrDJ,IAAAA,GAAG,CAACK,QAAJ,CAAaD,eAAb,CAA6BH,GAA7B;AACH,GAFM,MAEA;AACH,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,GAAG,CAACjH,MAAxB,EAAgCsH,CAAC,EAAjC,EAAqC;AACjCL,MAAAA,GAAG,CAACK,CAAD,CAAH,GAAS,aAAahC,IAAI,CAACiC,MAAL,EAAtB;AACH;AACJ;;AAED,QAAMC,IAAI,GAAa,EAAvB;;AAEA,OAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,GAAG,CAACjH,MAAxB,EAAgCsH,CAAC,EAAjC,EAAqC;AACjCE,IAAAA,IAAI,CAAC9D,IAAL,CAAUuD,GAAG,CAACK,CAAD,CAAH,CAAOG,QAAP,CAAgB,EAAhB,CAAV;AACH;;AAEDD,EAAAA,IAAI,CAAC9D,IAAL,CAAU,GAAV;AACA8D,EAAAA,IAAI,CAAC9D,IAAL,CAAU,CAAC,EAAEtC,WAAH,EAAgBqG,QAAhB,CAAyB,EAAzB,CAAV;AACAD,EAAAA,IAAI,CAAC9D,IAAL,CAAU,GAAV;AACA8D,EAAAA,IAAI,CAAC9D,IAAL,CAAUgE,IAAI,CAACC,GAAL,GAAWF,QAAX,CAAoB,EAApB,CAAV;AAEA,SAAOD,IAAI,CAAC5M,IAAL,CAAU,EAAV,CAAP;AACH;SAEegN,cACZ1H,WACApD;AAEA,QAAM0G,OAAO,GAAG/B,kBAAkB,CAACvB,SAAD,CAAlC;AACA,MAAI2H,GAAG,GAAG/K,OAAO,CAACgL,mBAAlB;;AAEA,MAAI,CAACD,GAAL,EAAU;AACNA,IAAAA,GAAG,GAAG/K,OAAO,CAACgL,mBAAR,GAA8Bf,MAAM,CAAC7G,SAAS,EAAV,CAA1C;AACH;;AAED,MACI,CAACsD,OAAO,CAAC3B,YAAR,CAAqBgG,GAArB,CAAD,IACAzE,gBAAgB,CAACtG,OAAO,CAACuG,aAAT,EAAwBvG,OAAxB,CAFpB,EAGE;AACE0G,IAAAA,OAAO,CAAC3B,YAAR,CAAqBgG,GAArB,IAA4B,IAAIvE,eAAJ,CAAoBpD,SAApB,EAA+BpD,OAA/B,CAA5B;AACH;;AAED,SAAO+K,GAAP;AACH;SASeE,aAAarG;AACzB,MAAImG,GAAG,GAAGnG,GAAG,CAACsG,6BAAd;;AAEA,MAAI,CAACH,GAAL,EAAU;AACNA,IAAAA,GAAG,GAAGnG,GAAG,CAACsG,6BAAJ,GAAoCjB,MAAM,CAACrF,GAAD,CAAhD;AACH;;AAED,SAAOmG,GAAP;AACH;SAEeI,kBACZ/H,WACAgI;AAEA,QAAM1E,OAAO,GAAG/B,kBAAkB,CAACvB,SAAD,CAAlC;;AAEA,OAAK,MAAM3B,GAAX,IAAkBC,MAAM,CAACC,IAAP,CAAY+E,OAAO,CAAC3B,YAApB,CAAlB,EAAqD;AACjD,UAAMsG,GAAG,GAAG3E,OAAO,CAAC3B,YAAR,CAAqBtD,GAArB,CAAZ;AACA,UAAMiI,EAAE,GAAG2B,GAAG,IAAIA,GAAG,CAACtE,GAAJ,EAAlB;;AAEA,QAAI2C,EAAE,IAAI0B,MAAV,EAAkB;AACd,UAAI,CAACA,MAAM,CAACE,QAAP,CAAgB5B,EAAhB,CAAL,EAA0B;AACtB;AACH;AACJ;;AAED,WAAOhD,OAAO,CAAC3B,YAAR,CAAqBtD,GAArB,CAAP;AACH;AACJ;;SAGe6E,iBACZkB,KACAxH;;;AAEA,SAAO,CAAC,EAAC,MAAAwH,GAAG,SAAH,IAAAA,GAAG,WAAH,SAAA,GAAAA,GAAG,CAAE+D,IAAL,UAAA,iBAAA,SAAA,MAAWD,SAAStL,QAArB,CAAR;AACH;SAEewL,gBACZxL,SACAyL;AAOA,QAAMC,OAAO,GACT1L,OAAO,CAAC0L,OAAR,IACC1L,OAAkC,CAACwL,eADpC,IAECxL,OAAkC,CAAC2L,iBAFpC,IAGA3L,OAAO,CAAC4L,qBAJZ;AAMA,SAAOF,OAAO,IAAIA,OAAO,CAACG,IAAR,CAAa7L,OAAb,EAAsByL,QAAtB,CAAlB;AACH;SAEeK,WAAW1I;AACvB,QAAMsD,OAAO,GAAG/B,kBAAkB,CAACvB,SAAD,CAAlC;;AACA,MAAIsD,OAAO,CAAC1B,MAAR,CAAeC,OAAnB,EAA4B;AACxB,WAAOyB,OAAO,CAAC1B,MAAR,CAAeC,OAAtB;AACH;;AAED,QAAM,IAAIjE,KAAJ,CAAU,qBAAV,CAAN;AACH;SAEeoG,WACZV;AAEA,SAAOA,OAAO,CAAC1B,MAAR,CAAeE,OAAtB;AACH;AA6BD,IAAI6G,kBAAkB,GAAG,CAAzB;MAEsBC;AASlBnI,EAAAA,YAAY9D,SAA4BC,SAAsBiM;AAC1D,UAAM7I,SAAS,GAAGrD,OAAO,CAACqD,SAA1B;AACA,SAAK8I,QAAL,GAAgBnM,OAAhB;AACA,SAAKoM,QAAL,GAAgB,IAAI3F,eAAJ,CAAoBpD,SAApB,EAA+BpD,OAA/B,CAAhB;AACA,SAAKoM,MAAL,GAAc,EAAE,GAAGH;AAAL,KAAd;AACA,SAAKI,EAAL,GAAU,MAAM,EAAEN,kBAAlB;AACH;;AAEDO,EAAAA,UAAU;AACN,WAAO,KAAKH,QAAL,CAAcpF,GAAd,EAAP;AACH;;AAEDwF,EAAAA,QAAQ;AACJ,WAAO,KAAKH,MAAZ;AACH;;AAEDjK,EAAAA,QAAQ,CAAC8J,KAAD;AACJ,SAAKG,MAAL,GAAc,EAAE,GAAGH;AAAL,KAAd;AACH;;;AAgBL;;;;MAGaO;AAeT3I,EAAAA,YACIT,WACAqJ,WACAR,OACAjM,SACA0M;;;AAgGI,iBAAA,GAAYxL,CAAD;AACf,UAAI,KAAKyL,YAAT,EAAuB;AACnB,cAAM3G,MAAM,GAAG,KAAK2G,YAAL,CAAkB5F,GAAlB,EAAf;;AAEA,YAAIf,MAAJ,EAAY;AACR4G,UAAAA,WAAW,CAAC5G,MAAD,CAAX;AACH;;AAED;AACH;;AAED,YAAM6G,KAAK,GAAG,KAAKA,KAAnB;;AAEA,UAAI,KAAKC,SAAL,IAAkBD,KAAtB,EAA6B;AACzB,cAAME,aAAa,GAAG7L,CAAC,CAAC6L,aAAxB;AAEA,aAAKD,SAAL,CACI,IADJ,EAEI,KAAKE,WAAL,CAAiB,IAAjB,EAAuBH,KAAvB,EAA8BE,aAA9B,CAFJ,EAGIA,aAHJ;AAKH;AACJ,KAtBO;;AAwBA,kBAAA,GAAa7L,CAAD;AAChB,UAAI,KAAKyL,YAAT,EAAuB;AACnB;AACH;;AAED,WAAKM,gBAAL,GAAwB,KAAxB;AAEA,YAAMJ,KAAK,GAAG,KAAKA,KAAnB;;AAEA,UAAI,KAAKK,UAAL,IAAmBL,KAAvB,EAA8B;AAC1B,cAAME,aAAa,GAAG7L,CAAC,CAAC6L,aAAxB;AAEA,aAAKG,UAAL,CACI,IADJ,EAEI,KAAKF,WAAL,CAAiB,KAAjB,EAAwBH,KAAxB,EAA+BE,aAA/B,CAFJ,EAGIA,aAHJ;AAKH;AACJ,KAlBO;;AAtHJ,UAAMnI,GAAG,GAAGxB,SAAS,EAArB;AACA,UAAMyJ,KAAK,GAAGjI,GAAG,CAACpB,QAAJ,CAAaC,aAAb,CAA2B,GAA3B,CAAd;AAEAoJ,IAAAA,KAAK,CAACM,QAAN,GAAiB,CAAjB;AACAN,IAAAA,KAAK,CAACO,YAAN,CAAmB,MAAnB,EAA2B,MAA3B;AAEAP,IAAAA,KAAK,CAACO,YAAN,CAAmB5M,8BAAnB,EAAyD,EAAzD;AACAqM,IAAAA,KAAK,CAACO,YAAN,CAAmB,aAAnB,EAAkC,MAAlC;AAEA,UAAMC,KAAK,GAAGR,KAAK,CAACQ,KAApB;AACAA,IAAAA,KAAK,CAACC,QAAN,GAAiB,OAAjB;AACAD,IAAAA,KAAK,CAACrJ,KAAN,GAAcqJ,KAAK,CAACpJ,MAAN,GAAe,KAA7B;AACAoJ,IAAAA,KAAK,CAACE,OAAN,GAAgB,OAAhB;AACAF,IAAAA,KAAK,CAACG,MAAN,GAAe,IAAf;AACAH,IAAAA,KAAK,CAACI,WAAN,CAAkB,oBAAlB,EAAwC,QAAxC;AAEA3D,IAAAA,gBAAgB,CAAC+C,KAAD,CAAhB;AAEA,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKa,OAAL,GAAezB,KAAK,CAACyB,OAArB;AACA,SAAKjB,SAAL,GAAiBA,SAAjB;AACA,SAAKkB,UAAL,GAAkB,MAAA1B,KAAK,CAAC2B,SAAN,UAAA,iBAAA,KAAA,GAAmB,KAArC;AACA,SAAKjB,YAAL,GAAoBD,WAApB;AAEAG,IAAAA,KAAK,CAACgB,gBAAN,CAAuB,SAAvB,EAAkC,KAAKC,QAAvC;AACAjB,IAAAA,KAAK,CAACgB,gBAAN,CAAuB,UAAvB,EAAmC,KAAKE,SAAxC;AAEClB,IAAAA,KAAuC,CAACmB,uBAAxC,GACGhO,OADH;;AAGD,QAAI,KAAK2N,UAAT,EAAqB;AACjB,WAAKM,aAAL,GAAqBrJ,GAAG,CAACyC,UAAJ,CAAe;AAChC,eAAO,KAAK4G,aAAZ;AACA,aAAK9N,OAAL;AACH,OAHoB,EAGlB,CAHkB,CAArB;;AAKA,WAAK+N,oBAAL,GAA4B;AACxB,YAAI,KAAKD,aAAT,EAAwB;AACpBrJ,UAAAA,GAAG,CAACa,YAAJ,CAAiB,KAAKwI,aAAtB;AACA,iBAAO,KAAKA,aAAZ;AACH;;AAED,eAAO,KAAKC,oBAAZ;AACH,OAPD;AAQH;AACJ;;AAED/N,EAAAA,OAAO;;;AACH,QAAI,KAAK+N,oBAAT,EAA+B;AAC3B,WAAKA,oBAAL;AACH;;AAED,UAAMrB,KAAK,GAAG,KAAKA,KAAnB;;AAEA,QAAI,CAACA,KAAL,EAAY;AACR;AACH;;AAED,WAAO,KAAKF,YAAZ;AACA,WAAO,KAAKG,SAAZ;AACA,WAAO,KAAKI,UAAZ;AACA,WAAO,KAAKL,KAAZ;AAEAA,IAAAA,KAAK,CAACsB,mBAAN,CAA0B,SAA1B,EAAqC,KAAKL,QAA1C;AACAjB,IAAAA,KAAK,CAACsB,mBAAN,CAA0B,UAA1B,EAAsC,KAAKJ,SAA3C;AAEA,WAAQlB,KAAuC,CAACmB,uBAAhD;AAEA,UAAAnB,KAAK,CAAClD,aAAN,UAAA,iBAAA,SAAA,MAAqByE,YAAYvB,MAAjC;AACH;;AAEDwB,EAAAA,UAAU,CAAClK,GAAD,EAAcD,IAAd;;;AACN,UAAMmJ,KAAK,GAAG,MAAA,KAAKR,KAAL,UAAA,iBAAA,SAAA,MAAYQ,KAA1B;;AAEA,QAAIA,KAAJ,EAAW;AACPA,MAAAA,KAAK,CAAClJ,GAAN,MAAeA,OAAf;AACAkJ,MAAAA,KAAK,CAACnJ,IAAN,MAAgBA,QAAhB;AACH;AACJ;;AAEO8I,EAAAA,WAAW,CACfsB,IADe,EAEfC,OAFe,EAGfC,QAHe;AAKf,WAAOF,IAAI,IAAI,CAACE,QAAT,GACD,CAAC,KAAKd,OADL,GAED,CAAC,EACGc,QAAQ,IACRD,OAAO,CAACE,uBAAR,CAAgCD,QAAhC,IACI7G,IAAI,CAAC+G,2BAHZ,CAFP;AAOH;;;AAmDE,MAAMC,2BAA2B,GAAG;AACvCC,EAAAA,IAAI,EAAE,CADiC;AAEvCC,EAAAA,SAAS,EAAE,CAF4B;AAGvCC,EAAAA,KAAK,EAAE,CAHgC;AAIvCC,EAAAA,QAAQ,EAAE;AAJ6B,CAApC;MAOMC;AAMTnL,EAAAA,YACI9D,SACAC,SACAiP,UACAhN,KACAiN,kBACAC;AAEA,SAAKhD,QAAL,GAAgBnM,OAAhB;AAEA,SAAKoP,SAAL,GAAiB,IAAIC,qBAAJ,CACbtP,OADa,EAEbC,OAFa,EAGb,IAHa,EAIbiP,QAJa,EAKbhN,GALa,EAMbiN,gBANa,EAObC,oBAPa,CAAjB;AASH;;AAESG,EAAAA,YAAY,CAClBxC,SADkB,EAElBI,UAFkB;AAIlB,SAAKqC,UAAL,GAAkBzC,SAAlB;AACA,SAAK0C,WAAL,GAAmBtC,UAAnB;AACH;;AAEDuC,EAAAA,OAAO,CAACC,SAAD;;;AACH,UAAA,KAAKN,SAAL,UAAA,iBAAA,SAAA,MAAgBK,QAAQC,UAAxB;AACH;;AAEDC,EAAAA,wBAAwB,CAACD,SAAD;;;AACpB,UAAA,KAAKN,SAAL,UAAA,iBAAA,SAAA,MAAgBO,yBAAyBD,UAAzC;AACH;;AAEDE,EAAAA,UAAU,CAACtB,IAAD;AACN,WAAOA,IAAI,GAAG,KAAKiB,UAAR,GAAqB,KAAKC,WAArC;AACH;;AAEDK,EAAAA,WAAW,CAACC,QAAD;;;AACP,UAAA,KAAKV,SAAL,UAAA,iBAAA,SAAA,MAAgBS,YAAY,MAAMC,SAAlC;AACH;;AAED3P,EAAAA,OAAO;AACH,QAAI,KAAKiP,SAAT,EAAoB;AAChB,WAAKA,SAAL,CAAejP,OAAf,CAAuB,IAAvB;;AACA,aAAO,KAAKiP,SAAZ;AACH;;AAED,WAAO,KAAKG,UAAZ;AACA,WAAO,KAAKC,WAAZ;AACH;;AAE0B,SAApBO,oBAAoB,CACvBhQ,OADuB,EAEvBC,OAFuB;AAGvBgQ,EAAAA,gBAHuB;AAIvBC,EAAAA,UAJuB;AAAA;;AAOvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAMC,KAAK,GAAe,IAAI1D,UAAJ,CAAezM,OAAO,CAACqD,SAAvB,EAAkC,IAAlC,EAAwC;AAC9DwK,MAAAA,SAAS,EAAE,IADmD;AAE9DF,MAAAA,OAAO,EAAE;AAFqD,KAAxC,CAA1B;AAKA,UAAMb,KAAK,GAAGqD,KAAK,CAACrD,KAApB;;AAEA,QAAIA,KAAJ,EAAW;AACP,UAAIzB,MAAJ;AACA,UAAI+E,YAAJ,CAFO;AAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAInQ,OAAO,CAACoQ,OAAR,KAAoB,MAAxB,EAAgC;AAC5B;AACAhF,QAAAA,MAAM,GAAGpL,OAAT;AACAmQ,QAAAA,YAAY,GACPH,gBAAgB,IAAIC,UAArB,IACC,CAACD,gBAAD,IAAqB,CAACC,UADvB,GAEOjQ,OAAO,CAACqQ,iBAFf,GAGM,IAJV;AAKH,OARD,MAQO;AACH,YACIL,gBAAgB,KACf,CAACC,UAAD,IACIA,UAAU,IACP,CAAClQ,OAAO,CAAC2C,SAAR,CAAkB4N,WAAlB,CACGtQ,OADH,EAEG,KAFH,EAGG,IAHH,EAIG,IAJH,CAHO,CADpB,EAUE;AACEoL,UAAAA,MAAM,GAAGpL,OAAT;AACAmQ,UAAAA,YAAY,GAAGF,UAAU,GAClBjQ,OAAO,CAACqQ,iBADU,GAEnB,IAFN;AAGH,SAfD,MAeO;AACHjF,UAAAA,MAAM,GAAGpL,OAAO,CAAC2J,aAAjB;AACAwG,UAAAA,YAAY,GACPH,gBAAgB,IAAIC,UAArB,IACC,CAACD,gBAAD,IAAqB,CAACC,UADvB,GAEMjQ,OAFN,GAGOA,OAAO,CAACuQ,kBAJnB;AAKH;;AAED,YAAIC,cAAJ;AACA,YAAIC,QAAJ;;AAEA,WAAG;AACC;AACA;AACA;AACA;AACAD,UAAAA,cAAc,GACTR,gBAAgB,IAAIC,UAArB,IACC,CAACD,gBAAD,IAAqB,CAACC,UADvB,GAEME,YAAY,SAAZ,IAAAA,YAAY,WAAZ,SAAA,GAAAA,YAAY,CAAEO,sBAFpB,GAGMP,YAJV;AAOAM,UAAAA,QAAQ,GAAG,MAAAD,cAAc,SAAd,IAAAA,cAAc,WAAd,SAAA,GAAAA,cAAc,CAAExC,uBAAhB,UAAA,iBAAA,SAAA,MAAyCjH,KAApD;;AAEA,cAAI0J,QAAQ,KAAKzQ,OAAjB,EAA0B;AACtBmQ,YAAAA,YAAY,GACPH,gBAAgB,IAAIC,UAArB,IACC,CAACD,gBAAD,IAAqB,CAACC,UADvB,GAEMO,cAFN,GAGOA,cAAc,SAAd,IAAAA,cAAc,WAAd,SAAA,GAAAA,cAAc,CAAED,kBAJ3B;AAKH,WAND,MAMO;AACHE,YAAAA,QAAQ,GAAGnQ,SAAX;AACH;AACJ,SAvBD,QAuBSmQ,QAvBT;AAwBH;;AAED,UAAIrF,MAAJ,EAAY;AACRA,QAAAA,MAAM,CAAC+E,YAAP,CAAoBtD,KAApB,EAA2BsD,YAA3B;AACAvD,QAAAA,WAAW,CAACC,KAAD,CAAX;AACH;AACJ;AACJ;;AAE+B,SAAzB8D,yBAAyB,CAC5B5Q,OAD4B,EAE5B6Q,aAF4B,EAG5BX,UAH4B,EAI5BY,aAJ4B;AAM5B,UAAMX,KAAK,GAAe,IAAI1D,UAAJ,CACtBzM,OAAO,CAACqD,SADc,EAEtB,IAFsB,EAGtB;AACIwK,MAAAA,SAAS,EAAE,IADf;AAEIF,MAAAA,OAAO,EAAE;AAFb,KAHsB,EAOtBpN,SAPsB,EAQtB,IAAIkG,eAAJ,CAAoBzG,OAAO,CAACqD,SAA5B,EAAuCyN,aAAvC,CARsB,CAA1B;AAWA,UAAMhE,KAAK,GAAGqD,KAAK,CAACrD,KAApB;;AAEA,QAAIA,KAAJ,EAAW;AACP,UAAIiE,WAAJ;AACA,UAAIX,YAAJ;;AAEA,UAAItK,eAAe,CAAC+K,aAAD,CAAf,IAAkC,CAACX,UAAvC,EAAmD;AAC/Ca,QAAAA,WAAW,GAAGF,aAAd;AACAT,QAAAA,YAAY,GACRS,aAAa,CAACP,iBADlB;AAEH,OAJD,MAIO;AACHS,QAAAA,WAAW,GAAGF,aAAa,CAACjH,aAA5B;AACAwG,QAAAA,YAAY,GAAGF,UAAU,GACnBW,aADmB,GAElBA,aAAa,CAACL,kBAFrB;AAGH;;AAEDO,MAAAA,WAAW,SAAX,IAAAA,WAAW,WAAX,SAAA,GAAAA,WAAW,CAAEX,YAAb,CAA0BtD,KAA1B,EAAiCsD,YAAjC,CAAA;AACH;AACJ;;;;AASL,SAASY,uBAAT,CACIb,KADJ,EAEIc,QAFJ;;;AAII,QAAMC,IAAI,GAA2B;AACjC,OAAG,MAD8B;AAEjC,OAAG,WAF8B;AAGjC,OAAG,OAH8B;AAIjC,OAAG;AAJ8B,GAArC;AAOA,QAAAf,KAAK,CAACrD,KAAN,UAAA,iBAAA,SAAA,MAAaO,aACT5M,gCACA,YACe0P,KAAK,CAACxC,SADrB,eAEiBwC,KAAK,CAACzD,WAFvB,EAGI,GAAGuE,QAAQ,CAACE,GAAT,CACEC,CAAD,QAAWF,IAAI,CAACE,CAAC,CAAClC,QAAH,eAA0BkC,CAAC,CAACrB,WAD5C,CAHP,EAMEhS,IANF,CAMO,IANP,EAFJ;AAUH;;MAEYsT;AAkBTvN,EAAAA,YAAYe;AAhBJ,qBAAA,GAOJ,IAAIyM,GAAJ,EAPI;AASA,6BAAA,GAAuB,CAAvB;AACA,wBAAA,GAAwC,IAAIC,OAAJ,EAAxC;AAEA,uBAAA,GAAiD,EAAjD;AACA,wBAAA,GAAoD,IAAI1L,OAAJ,EAApD;;AAkDA,oBAAA,GAAewF,MAAD;;;AAClB,UAAI,KAAKmG,eAAL,CAAqBC,GAArB,CAAyBpG,MAAzB,CAAJ,EAAsC;AAClC;AACH;;AAED,WAAKmG,eAAL,CAAqBE,GAArB,CAAyBrG,MAAzB;;AAEA,UAAI,KAAKsG,uBAAT,EAAkC;AAC9B;AACH;;AAED,WAAKA,uBAAL,GAA+B,MAAA,KAAKC,IAAL,UAAA,iBAAA,SAAA,iBAActK,WAAW;AACpD,eAAO,KAAKqK,uBAAZ;;AAEA,aAAK,MAAM/K,GAAX,IAAkB,KAAKiL,cAAvB,EAAuC;AACnC,gBAAMC,YAAY,GAAGlL,GAAG,CAACI,GAAJ,EAArB;;AAEA,cAAI8K,YAAJ,EAAkB;AACd,kBAAMC,QAAQ,GAAG,KAAKC,eAAL,CAAqBhL,GAArB,CAAyB8K,YAAzB,CAAjB;;AAEA,gBAAIC,QAAJ,EAAc;AACV,oBAAMhB,WAAW,GAAGe,YAAY,CAAClI,aAAjC;;AAEA,kBACI,CAACmH,WAAD,IACA,KAAKS,eAAL,CAAqBC,GAArB,CAAyBV,WAAzB,CAFJ,EAGE;AACEgB,gBAAAA,QAAQ;AACX;AACJ;AACJ;AACJ;;AAED,aAAKP,eAAL,GAAuB,IAAID,OAAJ,EAAvB;AACH,SAAE5M,0BAvBH;AAwBH,KAnCO;;AA9CJ,SAAKiN,IAAL,GAAY/M,GAAZ;AACH;;AAED6M,EAAAA,GAAG,CAACvB,KAAD,EAAqB4B,QAArB;AACC,QAAI,CAAC,KAAKC,eAAL,CAAqBP,GAArB,CAAyBtB,KAAzB,CAAD,IAAoC,KAAKyB,IAA7C,EAAmD;AAC/C,WAAKC,cAAL,CAAoBhL,IAApB,CAAyB,IAAIJ,eAAJ,CAAoB,KAAKmL,IAAzB,EAA+BzB,KAA/B,CAAzB;;AACA,WAAK6B,eAAL,CAAqBC,GAArB,CAAyB9B,KAAzB,EAAgC4B,QAAhC;;AACA,WAAKG,UAAL,GAAkB,KAAKC,WAAvB;AACH;AACJ;;AAEDC,EAAAA,MAAM,CAACjC,KAAD;AACF,SAAK0B,cAAL,GAAsB,KAAKA,cAAL,CAAoB1K,MAApB,CAA4BP,GAAD;AAC7C,YAAM3G,OAAO,GAAG2G,GAAG,CAACI,GAAJ,EAAhB;AACA,aAAO/G,OAAO,IAAIA,OAAO,KAAKkQ,KAA9B;AACH,KAHqB,CAAtB;;AAKA,SAAK6B,eAAL,CAAqBK,MAArB,CAA4BlC,KAA5B;;AAEA,QAAI,KAAK0B,cAAL,CAAoB1O,MAApB,KAA+B,CAAnC,EAAsC;AAClC,aAAO,KAAK+O,UAAZ;AACH;AACJ;;AAED9R,EAAAA,OAAO;;;AACH,UAAMyE,GAAG,GAAG,MAAA,KAAK+M,IAAL,UAAA,iBAAA,SAAA,gBAAZ;;AAEA,QAAI,KAAKU,YAAT,EAAuB;AACnBzN,MAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,SAAA,GAAAA,GAAG,CAAEa,YAAL,CAAkB,KAAK4M,YAAvB,CAAA;AACA,aAAO,KAAKA,YAAZ;AACH;;AAED,QAAI,KAAKX,uBAAT,EAAkC;AAC9B9M,MAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,SAAA,GAAAA,GAAG,CAAEa,YAAL,CAAkB,KAAKiM,uBAAvB,CAAA;AACA,aAAO,KAAKA,uBAAZ;AACH;;AAED,SAAKH,eAAL,GAAuB,IAAID,OAAJ,EAAvB;AACA,SAAKS,eAAL,GAAuB,IAAInM,OAAJ,EAAvB;AACA,SAAKgM,cAAL,GAAsB,EAAtB;;AACA,SAAKU,YAAL,CAAkBC,KAAlB;;AAEA,WAAO,KAAKN,UAAZ;AACA,WAAO,KAAKN,IAAZ;AACH;;AAuCDa,EAAAA,eAAe,CACXC,OADW;AAQX,QAAI,CAAC,KAAKd,IAAV,EAAgB;AACZ;AACA;AACA;AACH;;AAED,SAAKW,YAAL,CAAkBb,GAAlB,CAAsBgB,OAAtB;;AAEA,SAAKC,oBAAL,GAA4B9H,IAAI,CAACC,GAAL,EAA5B;;AAEA,SAAK8H,yBAAL;AACH;;AAEOA,EAAAA,yBAAyB;;;AAC7B,QAAI,KAAKN,YAAT,EAAuB;AACnB;AACH;;AAED,SAAKA,YAAL,GAAoB,MAAA,KAAKV,IAAL,UAAA,iBAAA,SAAA,iBAActK,WAAW;AACzC,aAAO,KAAKgL,YAAZ;AAGA;AACA;AACA;AACA;AACA;;AACA,UACI,KAAKK,oBAAL,GAA4BhO,yBAA5B,IACAkG,IAAI,CAACC,GAAL,EAFJ,EAGE;AACE;AACA,cAAM+H,kBAAkB,GAAG,IAAIC,GAAJ,EAA3B;AAKA,cAAMC,mBAAmB,GAAmB,EAA5C;;AAEA,aAAK,MAAML,OAAX,IAAsB,KAAKH,YAA3B,EAAyC;AACrCQ,UAAAA,mBAAmB,CAAClM,IAApB,CAAyB6L,OAAO,CAACG,kBAAD,CAAhC;AACH;;AAED,aAAKN,YAAL,CAAkBC,KAAlB,GAbF;AAgBE;;;AACA,aAAK,MAAMlE,UAAX,IAAyByE,mBAAzB,EAA8C;AAC1CzE,UAAAA,UAAU;AACb,SAnBH;;;AAsBEuE,QAAAA,kBAAkB,CAACL,KAAnB;AACH,OA1BD,MA0BO;AACH,aAAKI,yBAAL;AACH;AACJ,OAAEjO,0BAtCH;AAuCH;;;AAGL;;;;AAGA,MAAM2K,qBAAN;AAYIxL,EAAAA,YACI9D,SACAC,SACA+S,SACA9D,UACAhN,KACAiN,kBACAC;AAfI,kBAAA,GAAiC,EAAjC;AAEA,mBAAA,GAAa,KAAb;AAGA,2BAAA,GAAuC,IAAIkC,GAAJ,EAAvC;;AAuJA,mBAAA,GAAa,CACjB2B,UADiB,EAEjB/C,UAFiB,EAGjBlD,aAHiB;AAKjB,WAAKkG,QAAL,CAAc,IAAd,EAAoBD,UAApB,EAAgC/C,UAAhC,EAA4ClD,aAA5C;AACH,KANO;;AAQA,oBAAA,GAAc,CAClBiG,UADkB,EAElB/C,UAFkB,EAGlBlD,aAHkB;AAKlB,WAAKkG,QAAL,CAAc,KAAd,EAAqBD,UAArB,EAAiC/C,UAAjC,EAA6ClD,aAA7C;AACH,KANO;;AAQR,gBAAA,GAAW2C,SAAD;;;AACN,YAAMwD,KAAK,GAAG,KAAKC,WAAnB;AACA,YAAMC,IAAI,GAAG,KAAKC,UAAlB;;AAEA,UAAIH,KAAK,IAAIE,IAAb,EAAmB;AACf;AACA;AACA;AACA,aAAKE,eAAL;;AAEA,cAAMC,UAAU,GAAGL,KAAK,CAACrG,KAAzB;AACA,cAAM2G,SAAS,GAAGJ,IAAI,CAACvG,KAAvB;AACA,cAAM7M,OAAO,GAAG,MAAA,KAAKmM,QAAL,UAAA,iBAAA,SAAA,MAAepF,KAA/B;;AAEA,YAAIwM,UAAU,IAAIC,SAAd,IAA2BxT,OAA/B,EAAwC;AACpC,cAAIyT,OAAJ;;AAEA,cAAI/D,SAAJ,EAAe;AACX6D,YAAAA,UAAU,CAACpG,QAAX,GAAsB,CAAtB;AACAsG,YAAAA,OAAO,GAAGF,UAAV;AACH,WAHD,MAGO;AACHC,YAAAA,SAAS,CAACrG,QAAV,GAAqB,CAArB;AACAsG,YAAAA,OAAO,GAAGD,SAAV;AACH;;AAED,cAAIC,OAAJ,EAAa;AACT7G,YAAAA,WAAW,CAAC6G,OAAD,CAAX;AACH;AACJ;AACJ;AACJ,KA9BD;AAgCA;;;;;;;AAKA,iCAAA,GAA4B/D,SAAD;;;AACvB,YAAMwD,KAAK,GAAG,KAAKC,WAAnB;AACA,YAAMC,IAAI,GAAG,KAAKC,UAAlB;;AAEA,UAAIH,KAAK,IAAIE,IAAb,EAAmB;AACf;AACA;AACA;AACA,aAAKE,eAAL;;AAEA,cAAMC,UAAU,GAAGL,KAAK,CAACrG,KAAzB;AACA,cAAM2G,SAAS,GAAGJ,IAAI,CAACvG,KAAvB;AACA,cAAM7M,OAAO,GAAG,MAAA,KAAKmM,QAAL,UAAA,iBAAA,SAAA,MAAepF,KAA/B;;AAEA,YAAIwM,UAAU,IAAIC,SAAd,IAA2BxT,OAA/B,EAAwC;AACpC,cAAIyT,OAAJ;;AAEA,cAAI/D,SAAJ,EAAe;AACX,gBACI,CAACwD,KAAK,CAACzG,SAAP,IACA,KAAKP,QAAL,CAAcxJ,SAAd,CAAwB4N,WAAxB,CACItQ,OADJ,EAEI,IAFJ,EAGI,IAHJ,EAII,IAJJ,CAFJ,EAQE;AACEyT,cAAAA,OAAO,GAAGzT,OAAV;AACH,aAVD,MAUO;AACHkT,cAAAA,KAAK,CAACjG,gBAAN,GAAyB,IAAzB;AACAsG,cAAAA,UAAU,CAACpG,QAAX,GAAsB,CAAtB;AACAsG,cAAAA,OAAO,GAAGF,UAAV;AACH;AACJ,WAhBD,MAgBO;AACHH,YAAAA,IAAI,CAACnG,gBAAL,GAAwB,IAAxB;AACAuG,YAAAA,SAAS,CAACrG,QAAV,GAAqB,CAArB;AACAsG,YAAAA,OAAO,GAAGD,SAAV;AACH;;AAED,cAAIC,OAAJ,EAAa;AACT7G,YAAAA,WAAW,CAAC6G,OAAD,CAAX;AACH;AACJ;AACJ;AACJ,KA5CD;;AA8CA,oBAAA,GAAc,CAACV,OAAD,EAA6BjD,QAA7B;;;AACV,WAAK,MAAMqB,CAAX,IAAgB,KAAKuC,SAArB,EAAgC;AAC5B,YAAIvC,CAAC,CAAC4B,OAAF,KAAcA,OAAlB,EAA2B;AACvB5B,UAAAA,CAAC,CAACrB,QAAF,GAAaA,QAAb;AACA;AACH;AACJ;;AAED,YAAM6D,OAAO,GAAG,KAAKC,WAAL,EAAhB;;AAEA,UAAID,OAAJ,EAAa;AACT,cAAMxG,QAAQ,GAAGwG,OAAO,CAAC7D,QAAR,GAAmB,CAAnB,GAAuB,CAAC,CAAzC;AAEA,YAAIjD,KAAK,GAAG,MAAA,KAAKsG,WAAL,UAAA,iBAAA,SAAA,MAAkBtG,KAA9B;;AAEA,YAAIA,KAAJ,EAAW;AACPA,UAAAA,KAAK,CAACM,QAAN,GAAiBA,QAAjB;AACH;;AAEDN,QAAAA,KAAK,GAAG,MAAA,KAAKwG,UAAL,UAAA,iBAAA,SAAA,MAAiBxG,KAAzB;;AAEA,YAAIA,KAAJ,EAAW;AACPA,UAAAA,KAAK,CAACM,QAAN,GAAiBA,QAAjB;AACH;AACJ;;AAED,UAAIhM,sCAAJ,EAAa;AACT,aAAKgS,WAAL,IACIpC,uBAAuB,CAAC,KAAKoC,WAAN,EAAmB,KAAKO,SAAxB,CAD3B;AAEA,aAAKL,UAAL,IACItC,uBAAuB,CAAC,KAAKsC,UAAN,EAAkB,KAAKK,SAAvB,CAD3B;AAEH;AACJ,KAhCD;AA8CA;;;;;;AAIQ,wBAAA,GAAkB;AACtB,UAAI,KAAKG,SAAT,EAAoB;AAChB;AACH;;AAED,WAAKA,SAAL,GAAiB,KAAKC,UAAL,GAAkBzM,UAAlB,CAA6B;AAC1C,eAAO,KAAKwM,SAAZ;;AAEA,aAAKP,eAAL;;AAEA,YAAInS,sCAAJ,EAAa;AACT,eAAKgS,WAAL,IACIpC,uBAAuB,CAAC,KAAKoC,WAAN,EAAmB,KAAKO,SAAxB,CAD3B;AAEA,eAAKL,UAAL,IACItC,uBAAuB,CAAC,KAAKsC,UAAN,EAAkB,KAAKK,SAAvB,CAD3B;AAEH;;AAED,aAAKK,oBAAL;AACH,OAbgB,EAad,CAbc,CAAjB;AAcH,KAnBO;;AAyDA,6BAAA,GAAuB;AAC3B,WAAK7H,QAAL,CAAc8H,cAAd,CAA6BxB,eAA7B,CACI,KAAKyB,wBADT;AAGH,KAJO;;AAMA,iCAAA,GACJrB,kBAD+B;;;AAM/B,YAAMsB,IAAI,GAAG,CAAA,MAAA,KAAKf,WAAL,UAAA,iBAAA,SAAA,MAAkBtG,KAAlB,MAA2B,MAAA,KAAKwG,UAAL,UAAA,iBAAA,SAAA,MAAiBxG,KAA5C,CAAb;AACA,YAAMsH,iBAAiB,GAAG,KAAKC,kBAA/B;AACA,YAAMC,oBAAoB,GAA6B,IAAIhD,GAAJ,EAAvD;AACA,UAAI5H,SAAS,GAAG,CAAhB;AACA,UAAI6K,UAAU,GAAG,CAAjB;;AAEA,YAAM1P,GAAG,GAAG,KAAKkP,UAAL,EAAZ;;AAEA,WACI,IAAI9T,OAAO,GAAmCkU,IADlD,EAEIlU,OAAO,IAAIA,OAAO,CAAC0H,QAAR,KAAqBC,IAAI,CAACC,YAFzC,EAGI5H,OAAO,GAAGA,OAAO,CAAC2J,aAHtB,EAIE;AACE,YAAI4K,aAAa,GAAG3B,kBAAkB,CAAC7L,GAAnB,CAAuB/G,OAAvB,CAApB,CADF;AAIE;;AACA,YAAIuU,aAAa,KAAKjU,SAAtB,EAAiC;AAC7B,gBAAMkU,SAAS,GAAG5P,GAAG,CAAC6P,gBAAJ,CAAqBzU,OAArB,EAA8BwU,SAAhD;;AAEA,cAAIA,SAAS,IAAIA,SAAS,KAAK,MAA/B,EAAuC;AACnCD,YAAAA,aAAa,GAAG;AACZ9K,cAAAA,SAAS,EAAEzJ,OAAO,CAACyJ,SADP;AAEZ6K,cAAAA,UAAU,EAAEtU,OAAO,CAACsU;AAFR,aAAhB;AAIH;;AAED1B,UAAAA,kBAAkB,CAACZ,GAAnB,CAAuBhS,OAAvB,EAAgCuU,aAAa,IAAI,IAAjD;AACH;;AAED,YAAIA,aAAJ,EAAmB;AACfF,UAAAA,oBAAoB,CAAC5C,GAArB,CAAyBzR,OAAzB;;AAEA,cAAI,CAACmU,iBAAiB,CAAC3C,GAAlB,CAAsBxR,OAAtB,CAAL,EAAqC;AACjCA,YAAAA,OAAO,CAAC6N,gBAAR,CACI,QADJ,EAEI,KAAKkG,oBAFT;AAIH;;AAEDtK,UAAAA,SAAS,IAAI8K,aAAa,CAAC9K,SAA3B;AACA6K,UAAAA,UAAU,IAAIC,aAAa,CAACD,UAA5B;AACH;AACJ;;AAED,WAAK,MAAM5K,EAAX,IAAiByK,iBAAjB,EAAoC;AAChC,YAAI,CAACE,oBAAoB,CAAC7C,GAArB,CAAyB9H,EAAzB,CAAL,EAAmC;AAC/BA,UAAAA,EAAE,CAACyE,mBAAH,CAAuB,QAAvB,EAAiC,KAAK4F,oBAAtC;AACH;AACJ;;AAED,WAAKK,kBAAL,GAA0BC,oBAA1B;AAEA,aAAO;;;AACH,cAAA,KAAKlB,WAAL,UAAA,iBAAA,SAAA,MAAkB9E,WAAW5E,WAAW6K,WAAxC;AACA,cAAA,KAAKjB,UAAL,UAAA,iBAAA,SAAA,MAAiBhF,WAAW5E,WAAW6K,WAAvC;AACH,OAHD;AAIH,KA/DO;;AA/VJ,UAAM5K,EAAE,GAAG1J,OAAO,CAAC+G,GAAR,EAAX;;AAEA,QAAI,CAAC2C,EAAL,EAAS;AACL,YAAM,IAAI1I,KAAJ,CAAU,YAAV,CAAN;AACH;;AAED,SAAKkL,QAAL,GAAgBnM,OAAhB;AACA,SAAK+T,UAAL,GAAkB/T,OAAO,CAACqD,SAA1B;AACA,SAAKsR,qBAAL,GAA6BvF,oBAA7B;AAEA,UAAMwF,QAAQ,GAAGjL,EAAE,CAACkL,cAApB;;AAEA,KAACD,QAAQ,IAAI,IAAb,EAAmBjB,SAAnB,CAA6B9M,IAA7B,CAAkC;AAC9BmM,MAAAA,OAD8B;AAE9B9D,MAAAA,QAF8B;AAG9Ba,MAAAA,QAAQ,EAAE;AAHoB,KAAlC;;AAMA,QAAI6E,QAAJ,EAAc;AACV,UAAIxT,sCAAJ,EAAa;AACT,aAAKgS,WAAL,IACIpC,uBAAuB,CACnB,KAAKoC,WADc,EAEnBwB,QAAQ,CAACjB,SAFU,CAD3B;AAKA,aAAKL,UAAL,IACItC,uBAAuB,CACnB,KAAKsC,UADc,EAEnBsB,QAAQ,CAACjB,SAFU,CAD3B;AAKH;;AAED,aAAOiB,QAAP;AACH;;AAEDjL,IAAAA,EAAE,CAACkL,cAAH,GAAoB,IAApB;AAGA;;AACA,UAAMC,mBAAmB,GAAG5S,GAAG,SAAH,IAAAA,GAAG,WAAH,SAAA,GAAAA,GAAG,CAAE6S,mBAAjC;AACA,UAAM1E,OAAO,GAAG1G,EAAE,CAAC0G,OAAnB;AACA,SAAK2E,UAAL,GAAkB,CAACF,mBAAD,GACZ,CAAC3F,gBAAgB,IACbkB,OAAO,KAAK,IADf,IAEGA,OAAO,KAAK,IAFf,IAGGA,OAAO,KAAK,OAHhB,KAIA,EAAEA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,IAAhC,IAAwCA,OAAO,KAAK,IAAtD,CALY,GAMZyE,mBAAmB,KAAKrU,uBAAA,CAA8BX,OAN5D;AAQA,SAAKsT,WAAL,GAAmB,IAAI3G,UAAJ,CACf,KAAKsH,UADU,EAEf,KAAKiB,UAFU,EAGf;AACIrH,MAAAA,OAAO,EAAE;AADb,KAHe,EAMf1N,OANe,CAAnB;AASA,SAAKqT,UAAL,GAAkB,IAAI7G,UAAJ,CACd,KAAKsH,UADS,EAEd,KAAKiB,UAFS,EAGd;AACIrH,MAAAA,OAAO,EAAE;AADb,KAHc,EAMd1N,OANc,CAAlB;AAUA;AACA;;AACA,UAAM6R,YAAY,GAAG,KAAKsB,WAAL,CAAiBtG,KAAtC;AACAgF,IAAAA,YAAY,IACR9R,OAAO,CAACiU,cAAR,CAAuBvC,GAAvB,CAA2BI,YAA3B,EAAyC,KAAKmD,eAA9C,CADJ;AAGA,SAAK7B,WAAL,CAAiBrG,SAAjB,GAA6B,KAAKyC,UAAlC;AACA,SAAK4D,WAAL,CAAiBjG,UAAjB,GAA8B,KAAKsC,WAAnC;AACA,SAAK6D,UAAL,CAAgBvG,SAAhB,GAA4B,KAAKyC,UAAjC;AACA,SAAK8D,UAAL,CAAgBnG,UAAhB,GAA6B,KAAKsC,WAAlC;AAEA,SAAKrD,QAAL,GAAgBnM,OAAhB;;AACA,SAAKgV,eAAL;AACH;;AAED7U,EAAAA,OAAO,CAAC4S,OAAD,EAA6BkC,KAA7B;;;AACH,UAAMjE,QAAQ,GAAI,KAAK0C,SAAL,GAAiB,KAAKA,SAAL,CAAexM,MAAf,CAC9BiK,CAAD,IAAOA,CAAC,CAAC4B,OAAF,KAAcA,OAAd,IAAyB,CAACkC,KADF,CAAnC;;AAIA,QAAI9T,sCAAJ,EAAa;AACT,WAAKgS,WAAL,IACIpC,uBAAuB,CAAC,KAAKoC,WAAN,EAAmBnC,QAAnB,CAD3B;AAEA,WAAKqC,UAAL,IACItC,uBAAuB,CAAC,KAAKsC,UAAN,EAAkBrC,QAAlB,CAD3B;AAEH;;AAED,QAAIA,QAAQ,CAAC9N,MAAT,KAAoB,CAAxB,EAA2B;AACvB,aAAO,CAAC,MAAA,KAAKiJ,QAAL,UAAA,iBAAA,SAAA,MAAepF,KAAhB,EACF6N,cADL;;AAGA,WAAK,MAAMlL,EAAX,IAAiB,KAAK0K,kBAAtB,EAA0C;AACtC1K,QAAAA,EAAE,CAACyE,mBAAH,CAAuB,QAAvB,EAAiC,KAAK4F,oBAAtC;AACH;;AACD,WAAKK,kBAAL,CAAwB7B,KAAxB;;AAEA,YAAM3N,GAAG,GAAG,KAAKkP,UAAL,EAAZ;;AAEA,UAAI,KAAKD,SAAT,EAAoB;AAChBjP,QAAAA,GAAG,CAACa,YAAJ,CAAiB,KAAKoO,SAAtB;AACA,eAAO,KAAKA,SAAZ;AACH;;AAED,YAAMhC,YAAY,GAAG,MAAA,KAAKsB,WAAL,UAAA,iBAAA,SAAA,MAAkBtG,KAAvC;AACAgF,MAAAA,YAAY,IAAI,KAAK3F,QAAL,CAAc8H,cAAd,CAA6B7B,MAA7B,CAAoCN,YAApC,CAAhB;AAEA,YAAA,KAAKsB,WAAL,UAAA,iBAAA,SAAA,MAAkBhT,SAAlB;AACA,YAAA,KAAKkT,UAAL,UAAA,iBAAA,SAAA,MAAiBlT,SAAjB;AACH;AACJ;;AAEO8S,EAAAA,QAAQ,CACZ3E,IADY,EAEZ0E,UAFY,EAGZ/C,UAHY,EAIZlD,aAJY;;;AAMZ,UAAM4G,OAAO,GAAG,KAAKC,WAAL,EAAhB;;AAEA,QACID,OAAO,KACN,CAACX,UAAU,CAAC/F,gBAAZ,IAAgC,KAAKyH,qBAD/B,CADX,EAGE;AACE,YAAAf,OAAO,CAACZ,OAAR,CAAgBnD,UAAhB,CAA2BtB,IAA3B,CAAA,UAAA,iBAAA,SAAA,MACI0E,YACA/C,YACAlD,cAHJ;AAKH;AACJ;;AAuIO6G,EAAAA,WAAW;AACf,SAAKF,SAAL,CAAewB,IAAf,CAAoB,CAACC,CAAD,EAAIC,CAAJ;AAChB,UAAID,CAAC,CAACrF,QAAF,KAAesF,CAAC,CAACtF,QAArB,EAA+B;AAC3B,eAAOqF,CAAC,CAACrF,QAAF,GAAa,CAAC,CAAd,GAAkB,CAAzB;AACH;;AAED,aAAOqF,CAAC,CAAClG,QAAF,GAAamG,CAAC,CAACnG,QAAtB;AACH,KAND;;AAQA,WAAO,KAAKyE,SAAL,CAAe,CAAf,CAAP;AACH;;AA2BOJ,EAAAA,eAAe;;;AACnB,UAAMtT,OAAO,GAAG,MAAA,KAAKmM,QAAL,UAAA,iBAAA,SAAA,MAAepF,KAA/B;AACA,UAAMsO,eAAe,GAAG,MAAA,KAAKlC,WAAL,UAAA,iBAAA,SAAA,MAAkBtG,KAA1C;AACA,UAAMyI,cAAc,GAAG,MAAA,KAAKjC,UAAL,UAAA,iBAAA,SAAA,MAAiBxG,KAAxC;;AAEA,QAAI,CAAC7M,OAAD,IAAY,CAACqV,eAAb,IAAgC,CAACC,cAArC,EAAqD;AACjD;AACH;;AAED,QAAI,KAAKP,UAAT,EAAqB;AACjB,YAAMQ,aAAa,GAAGvV,OAAO,CAAC2J,aAA9B;;AAEA,UAAI4L,aAAJ,EAAmB;AACf,cAAMC,WAAW,GAAGxV,OAAO,CAACuQ,kBAA5B;;AAEA,YAAIiF,WAAW,KAAKF,cAApB,EAAoC;AAChCC,UAAAA,aAAa,CAACpF,YAAd,CAA2BmF,cAA3B,EAA2CE,WAA3C;AACH;;AAED,YAAIxV,OAAO,CAAC0Q,sBAAR,KAAmC2E,eAAvC,EAAwD;AACpDE,UAAAA,aAAa,CAACpF,YAAd,CAA2BkF,eAA3B,EAA4CrV,OAA5C;AACH;AACJ;AACJ,KAdD,MAcO;AACH,UAAIA,OAAO,CAACyV,gBAAR,KAA6BH,cAAjC,EAAiD;AAC7CtV,QAAAA,OAAO,CAAC0V,WAAR,CAAoBJ,cAApB;AACH;;AAED,YAAMjF,iBAAiB,GAAGrQ,OAAO,CAACqQ,iBAAlC;;AAEA,UAAIA,iBAAiB,IAAIA,iBAAiB,KAAKgF,eAA/C,EAAgE;AAC5DrV,QAAAA,OAAO,CAACmQ,YAAR,CAAqBkF,eAArB,EAAsChF,iBAAtC;AACH;AACJ;AACJ;;;;SA0EWsF,aAAa5M;AACzB,MAAI6M,SAAS,GAAuB,IAApC;;AAEA,OAAK,IAAIpL,CAAC,GAAGzB,SAAS,CAAC0M,gBAAvB,EAAyCjL,CAAzC,EAA4CA,CAAC,GAAGA,CAAC,CAACiL,gBAAlD,EAAoE;AAChEG,IAAAA,SAAS,GAAGpL,CAAZ;AACH;;AAED,SAAOoL,SAAS,IAAItV,SAApB;AACH;SAEeuV,mBACZ3B,MACA4B;AAEA,MAAIC,GAAG,GAAuB7B,IAA9B;AACA,MAAI8B,QAAQ,GAAuB,IAAnC;;AAEA,SAAOD,GAAG,IAAI,CAACC,QAAf,EAAyB;AACrBA,IAAAA,QAAQ,GACJF,IAAI,GAAGC,GAAG,CAACrF,sBAAP,GAAgCqF,GAAG,CAACxF,kBAD5C;AAGAwF,IAAAA,GAAG,GAAGA,GAAG,CAACpM,aAAV;AACH;;AAED,SAAOqM,QAAQ,IAAI1V,SAAnB;AACH;SAEe2V,aACZjQ,QACAkQ,MACAC;AAEA,QAAMC,KAAK,GAAG5S,QAAQ,CAAC6S,WAAT,CACV,YADU,CAAd;AAIAD,EAAAA,KAAK,CAACE,SAAN,CAAgBJ,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B;AAEAE,EAAAA,KAAK,CAACD,OAAN,GAAgBA,OAAhB;AAEAnQ,EAAAA,MAAM,CAACuQ,aAAP,CAAqBH,KAArB;AAEA,SAAO,CAACA,KAAK,CAACI,gBAAd;AACH;SAEeC,iBACZ1W,SACAC,SACAkW,MACAQ;;AAEA;AACA,QAAMjW,KAAK,GAAGV,OAAO,CAACE,YAAR,CAAqBD,OAArB,EAA8B,IAA9B,CAAd;AACA,MAAI2W,GAAG,GAAG,KAAV;;AAEA,MAAI,CAAClW,KAAK,CAACmW,GAAX,EAAgB;AACZ,QAAIF,KAAK,KAAKpW,SAAd,EAAyB;AACrB,aAAOqW,GAAP;AACH;;AAEDlW,IAAAA,KAAK,CAACmW,GAAN,GAAY,EAAZ;AACH;;AAED,MAAIF,KAAK,KAAKpW,SAAd,EAAyB;AACrB,QAAI4V,IAAI,IAAIzV,KAAK,CAACmW,GAAlB,EAAuB;AACnB,YAAMC,OAAO,GAAGpW,KAAK,CAACmW,GAAN,CAAUV,IAAV,CAAhB;AAEA,aAAOzV,KAAK,CAACmW,GAAN,CAAUV,IAAV,CAAP;;AAEA,UAAIW,OAAO,KAAK,IAAhB,EAAsB;AAClB7W,QAAAA,OAAO,CAAC8W,eAAR,CAAwBZ,IAAxB;AACH,OAFD,MAEO;AACHlW,QAAAA,OAAO,CAACoN,YAAR,CAAqB8I,IAArB,EAA2BW,OAA3B;AACH;;AAEDF,MAAAA,GAAG,GAAG,IAAN;AACH;AACJ,GAdD,MAcO;AACH,QAAII,SAAJ;;AAEA,QAAI,EAAEb,IAAI,IAAIzV,KAAK,CAACmW,GAAhB,CAAJ,EAA0B;AACtBG,MAAAA,SAAS,GAAG/W,OAAO,CAACO,YAAR,CAAqB2V,IAArB,CAAZ;AACH;;AAED,QAAIa,SAAS,KAAKzW,SAAd,IAA2ByW,SAAS,KAAKL,KAA7C,EAAoD;AAChDjW,MAAAA,KAAK,CAACmW,GAAN,CAAUV,IAAV,IAAkBa,SAAlB;;AAEA,UAAIL,KAAK,KAAK,IAAd,EAAoB;AAChB1W,QAAAA,OAAO,CAAC8W,eAAR,CAAwBZ,IAAxB;AACH,OAFD,MAEO;AACHlW,QAAAA,OAAO,CAACoN,YAAR,CAAqB8I,IAArB,EAA2BQ,KAA3B;AACH;;AAEDC,MAAAA,GAAG,GAAG,IAAN;AACH;AACJ;;AAED,MAAID,KAAK,KAAKpW,SAAV,IAAuBoB,MAAM,CAACC,IAAP,CAAYlB,KAAK,CAACmW,GAAlB,EAAuB1T,MAAvB,KAAkC,CAA7D,EAAgE;AAC5D,WAAOzC,KAAK,CAACmW,GAAb;AACA7W,IAAAA,OAAO,CAACE,YAAR,CAAqBD,OAArB,EAA8B,KAA9B;AACH;;AAED,SAAO2W,GAAP;AACH;;ACjyDD;;;;SAcgBK,oBACZ/K,OACAgL;AAEA,QAAMtW,IAAI,GAAGG,IAAI,CAACoW,SAAL,CAAejL,KAAf,CAAb;;AAEA,MAAIgL,KAAK,KAAK,IAAd,EAAoB;AAChB,WAAOtW,IAAP;AACH;;AAED,SAAO;AACH,KAACH,oBAAD,GAA8BG;AAD3B,GAAP;AAGH;AAED;;;;;;;;;SAQgBwW,kBACZlL,OACAmL;AAEA,OAAK,MAAM3V,GAAX,IAAkBC,MAAM,CAACC,IAAP,CACdyV,QADc,CAAlB,EAE4C;AACxC,UAAMV,KAAK,GAAGU,QAAQ,CAAC3V,GAAD,CAAtB;;AAEA,QAAIiV,KAAJ,EAAW;AACP;AACAzK,MAAAA,KAAK,CAACxK,GAAD,CAAL,GAAaiV,KAAb;AACH,KAHD,MAGO;AACH,aAAOzK,KAAK,CAACxK,GAAD,CAAZ;AACH;AACJ;AACJ;AAED;;;;;;;;;SAQgB4V,oBACZrX,SACAoX,UACAE;AAEA,MAAIrL,KAAJ;;AAEA,MAAIqL,MAAJ,EAAY;AACR,UAAM3W,IAAI,GAAGX,OAAO,CAACO,YAAR,CAAqBC,oBAArB,CAAb;;AAEA,QAAIG,IAAJ,EAAU;AACN,UAAI;AACAsL,QAAAA,KAAK,GAAGnL,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAR;AACH,OAFD,CAEE,OAAOO,CAAP,EAAU;AACR,YAAIC,sCAAJ,EAAa;AACTC,UAAAA,OAAO,CAACC,KAAR,kCACqCH,GADrC,EAEIlB,OAFJ;AAIH;AACJ;AACJ;AACJ;;AAED,MAAI,CAACiM,KAAL,EAAY;AACRA,IAAAA,KAAK,GAAG,EAAR;AACH;;AAEDkL,EAAAA,iBAAiB,CAAClL,KAAD,EAAQmL,QAAR,CAAjB;;AAEA,MAAI1V,MAAM,CAACC,IAAP,CAAYsK,KAAZ,EAAmB/I,MAAnB,GAA4B,CAAhC,EAAmC;AAC/BlD,IAAAA,OAAO,CAACoN,YAAR,CACI5M,oBADJ,EAEIwW,mBAAmB,CAAC/K,KAAD,EAAQ,IAAR,CAFvB;AAIH,GALD,MAKO;AACHjM,IAAAA,OAAO,CAAC8W,eAAR,CAAwBtW,oBAAxB;AACH;AACJ;;ACrGD;;;;;AAwBA,SAAS+W,sBAAT,CACIC,WADJ,EAEIrF,MAFJ,EAGI9F,EAHJ;AAKI,MAAIlL,sCAAJ,EAAa;AACT,UAAMnB,OAAO,GAAGwX,WAAW,CAACzQ,GAAZ,EAAhB;;AAEA,QAAI/G,OAAJ,EAAa;AACT,UAAImS,MAAJ,EAAY;AACRnS,QAAAA,OAAO,CAACqN,KAAR,CAAcoK,cAAd,CAA6B,gBAA7B;AACH,OAFD,MAEO;AACHzX,QAAAA,OAAO,CAACqN,KAAR,CAAcI,WAAd,CAA0B,gBAA1B,EAA4CpB,EAAE,GAAG,GAAjD;AACH;AACJ;AACJ;AACJ;;AAED,MAAMqL,gBAAN,SAA+B1I,iBAA/B;AAIInL,EAAAA,YACI9D,SACAC,SACA2X,YACA1V;AAEA,UACIlC,OADJ,EAEIC,OAFJ,EAGI2O,2BAA2B,CAACC,IAHhC,EAII3M,GAJJ,EAKI3B,SALJ,EAMI,IANJ;;AAeI,2BAAA,GAAsB0S,UAAD;;;AACzB,UAAIA,UAAU,CAAC/F,gBAAf,EAAiC;AAC7B;AACA;AACA;AACA;AACA,aAAK2K,WAAL,CAAiB,KAAjB;AACH,OAND,MAMO;AACH;AACA,aAAK1L,QAAL,CAAc2L,kBAAd,CAAiCC,yBAAjC,CAA2D,IAA3D;;AAEA,cAAM9X,OAAO,GAAG,KAAKmM,QAAL,CAAcpF,GAAd,EAAhB;;AAEA,YAAI/G,OAAJ,EAAa;AACT,eAAK4X,WAAL,CAAiB,IAAjB;;AAEA,gBAAMnE,OAAO,GACT,KAAKvH,QAAL,CAAc6L,cAAd,CAA6BC,sBAA7B,CACIhF,UAAU,CAACtF,OADf,EAEI;AAAE3E,YAAAA,SAAS,EAAE/I,OAAb;AAAsBiY,YAAAA,mBAAmB,EAAE;AAA3C,WAFJ,CADJ;;AAMA,cAAIxE,OAAJ,EAAa;AACT7G,YAAAA,WAAW,CAAC6G,OAAD,CAAX;AACA;AACH;AACJ;;AAED,cAAAT,UAAU,CAACnG,KAAX,UAAA,iBAAA,SAAA,MAAkBqL,MAAlB;AACH;AACJ,KA9BO;;AANJ,SAAK5I,YAAL,CAAkB,KAAK6I,kBAAvB;;AAEA,SAAKjM,QAAL,GAAgBnM,OAAhB;AACA,SAAK6X,WAAL,GAAmBD,UAAnB;AACH;;;;MAmCQ/I,aACD5C;AAWRnI,EAAAA,YACI9D,SACAC,SACAoY,WACAnM,OACAhK;AAEA,UAAMlC,OAAN,EAAeC,OAAf,EAAwBiM,KAAxB;AAXI,mBAAA,GAAa,KAAb;;AA+EA,oBAAA,GAAeoM,UAAD;;;AAClB,UAAI,KAAKC,gBAAT,EAA2B;AACvB,aAAKpM,QAAL,CAAc9I,SAAd,GAA0BqC,YAA1B,CAAuC,KAAK6S,gBAA5C;;AACA,eAAO,KAAKA,gBAAZ;AACH;;AAED,UAAI,KAAKC,UAAL,KAAoBF,UAAxB,EAAoC;AAChC;AACH;;AAED,YAAMrY,OAAO,GAAG,KAAKmM,QAAL,CAAcpF,GAAd,EAAhB;;AAEA,UAAI/G,OAAJ,EAAa;AACT,YAAIqY,UAAJ,EAAgB;AACZ,eAAKE,UAAL,GAAkB,IAAlB;AACA,gBAAA,KAAKC,aAAL,UAAA,iBAAA,SAAA,MAAoB3I,YAAY,MAAhC;AAEAoG,UAAAA,YAAY,CACR,KAAK/J,QAAL,CAActK,IAAd,CAAmB6W,WADX,EAER,OAFQ,EAGR;AAAEzY,YAAAA;AAAF,WAHQ,CAAZ;AAKH,SATD,MASO;AACH,eAAKsY,gBAAL,GAAwB,KAAKpM,QAAL,CACnB9I,SADmB,GAEnBiE,UAFmB,CAER;;;AACR,mBAAO,KAAKiR,gBAAZ;AAEA,iBAAKC,UAAL,GAAkB,KAAlB;AACA,kBAAA,KAAKC,aAAL,UAAA,iBAAA,SAAA,MAAoB3I,YAAY,KAAhC;AAEAoG,YAAAA,YAAY,CACR,KAAK/J,QAAL,CAActK,IAAd,CAAmB6W,WADX,EAER,MAFQ,EAGR;AAAEzY,cAAAA;AAAF,aAHQ,CAAZ;AAKH,WAbmB,EAajB,CAbiB,CAAxB;AAcH;AACJ;AACJ,KAvCO;;AAyCA,mBAAA,GAAcoW,KAAD;AACjB,YAAMsC,SAAS,GAAG,KAAKxM,QAAL,CAAcwM,SAAhC;;AACA,YAAMC,WAAW,GAAG,KAAKxM,QAAL,CAAcpF,GAAd,EAApB;;AACA,UAAI6R,UAAU,GAAGxC,KAAK,CAACpQ,MAAvB;;AAEA,SAAG;AACC,YAAI4S,UAAU,KAAKD,WAAnB,EAAgC;AAC5B,eAAKf,WAAL,CAAiB,IAAjB;;AACA;AACH;;AAEDgB,QAAAA,UAAU,GACNA,UAAU,IAAKF,SAAS,CAACE,UAAD,CAD5B;AAEH,OARD,QAQSA,UART;AASH,KAdO;;AAgBA,oBAAA,GAAc;AAClB,WAAKhB,WAAL,CAAiB,KAAjB;AACH,KAFO;;AA3HJ,SAAKiB,UAAL,GAAkBT,SAAlB;AAEA,UAAMxT,GAAG,GAAG7E,OAAO,CAACqD,SAApB;AACA,SAAK2H,GAAL,GAAWD,aAAa,CAAClG,GAAD,EAAM5E,OAAN,CAAxB;AAEA,SAAK8Y,IAAL,GAAY7W,GAAZ;;AAEA,QAAIlC,OAAO,CAACgZ,UAAR,IAAsBhZ,OAAO,CAACiZ,eAAlC,EAAmD;AAC/C,WAAKC,cAAL;AACH;;AAED,UAAM9H,CAAC,GAAGvM,GAAG,EAAb;AAEAuM,IAAAA,CAAC,CAAC3N,QAAF,CAAWqK,gBAAX,CAA4B,SAA5B,EAAuC,KAAK0B,UAA5C;AACA4B,IAAAA,CAAC,CAAC3N,QAAF,CAAWqK,gBAAX,CAA4B,UAA5B,EAAwC,KAAK2B,WAA7C;;AAEA,SAAK0J,IAAL;AACH;;AAEDD,EAAAA,cAAc;AACV,QAAI,CAAC,KAAKT,aAAV,EAAyB;AACrB,WAAKA,aAAL,GAAqB,IAAId,gBAAJ,CACjB,KAAKxL,QADY,EAEjB,KAAKC,QAFY,EAGjB,KAAKyL,WAHY,EAIjB,KAAKkB,IAJY,CAArB;AAMH;AACJ;;AAED3Y,EAAAA,OAAO;;;AACH,SAAK0Y,UAAL,CAAgB,IAAhB;;AAEA,UAAMjU,GAAG,GAAG,KAAKsH,QAAL,CAAc9I,SAAd,EAAZ;;AAEAwB,IAAAA,GAAG,CAACpB,QAAJ,CAAa2K,mBAAb,CAAiC,SAAjC,EAA4C,KAAKoB,UAAjD;AACA3K,IAAAA,GAAG,CAACpB,QAAJ,CAAa2K,mBAAb,CAAiC,UAAjC,EAA6C,KAAKqB,WAAlD;;AAEA,QAAI,KAAK8I,gBAAT,EAA2B;AACvB1T,MAAAA,GAAG,CAACa,YAAJ,CAAiB,KAAK6S,gBAAtB;AACA,aAAO,KAAKA,gBAAZ;AACH;;AAED,UAAA,KAAKE,aAAL,UAAA,iBAAA,SAAA,MAAoBrY,SAApB;;AACA,SAAKgZ,OAAL;AACH;;AAEDxJ,EAAAA,wBAAwB,CAACM,UAAD;AACpB,UAAMmJ,YAAY,GAAG,KAAKZ,aAA1B;;AAEA,QAAIY,YAAJ,EAAkB;AACdA,MAAAA,YAAY,CAACzJ,wBAAb,CAAsCM,UAAtC;AACH,KAFD,MAEO;AACH,YAAMvG,EAAE,GAAG,KAAK4C,UAAL,EAAX;;AAEA,UAAI5C,EAAJ,EAAQ;AACJgO,QAAAA,gBAAgB,CAAC3H,oBAAjB,CACI,KAAK7D,QADT,EAEIxC,EAFJ,EAGI,IAHJ,EAIIuG,UAJJ;AAMH;AACJ;AACJ;;AA+DOiJ,EAAAA,IAAI;AACR,QAAI/X,sCAAJ,EAAa;AACToW,MAAAA,sBAAoB,CAAC,KAAKpL,QAAN,EAAgB,KAAhB,EAAuB,KAAKpB,GAA5B,CAApB;AACH;AACJ;;AAEOoO,EAAAA,OAAO;AACX,QAAIhY,sCAAJ,EAAa;AACToW,MAAAA,sBAAoB,CAAC,KAAKpL,QAAN,EAAgB,IAAhB,CAApB;AACH;AACJ;;;;MAQQkN;AAUTxV,EAAAA,YAAY9D,SAA4BuZ;AANhC,yBAAA,GAAmB,KAAnB;AACA,eAAA,GAAqC,EAArC;AACA,oBAAA,GAAc,KAAd;AACR,iBAAA,GAAyC,EAAzC;;AAgBQ,wBAAA,GAAkB;;;AACtB,YAAM9R,GAAG,GAAG,KAAKmK,IAAL,GAAYnO,QAAxB;;AACA,YAAM+H,IAAI,GAAG/D,GAAG,CAAC+D,IAAjB;;AAEA,UAAIA,IAAJ,EAAU;AACN,aAAKgO,eAAL,CAAqB/R,GAArB;;AAEA,cAAMyE,KAAK,GAAG,KAAKuN,SAAnB;;AAEA,YAAIvN,KAAJ,EAAW;AACPoL,UAAAA,mBAAmB,CAAC9L,IAAD,EAAO;AAAE3J,YAAAA,IAAI,EAAEqK;AAAR,WAAP,EAAwB,IAAxB,CAAnB;AACA/L,UAAAA,wBAAwB,CAAC,KAAKgM,QAAN,EAAgBX,IAAhB,CAAxB;AACA,iBAAO,MAAAzL,mBAAmB,CAAC,KAAKoM,QAAN,EAAgBX,IAAhB,CAAnB,UAAA,iBAAA,SAAA,MAA0C3J,IAAjD;AACH;AACJ,OAVD,MAUO,IAAI,CAAC,KAAK6X,gBAAV,EAA4B;AAC/B,aAAKA,gBAAL,GAAwB,IAAxB;AACAjS,QAAAA,GAAG,CAACqG,gBAAJ,CAAqB,kBAArB,EAAyC,KAAK6L,eAA9C;AACH;;AAED,aAAOpZ,SAAP;AACH,KApBO;;AA6RA,uBAAA,GAAkBsB,IAAD;AACrB,aAAO,KAAK+X,MAAL,CAAY/X,IAAI,CAACyK,EAAjB,CAAP;AACH,KAFO;;AAzSJ,SAAKH,QAAL,GAAgBnM,OAAhB;AACA,SAAK4R,IAAL,GAAY5R,OAAO,CAACqD,SAApB;AACA,SAAKoW,SAAL,GAAiBF,QAAjB;AACA,SAAKb,WAAL,GAAmBtV,iBAAiB,CAAC,KAAKwO,IAAN,CAApC;AAEA5R,IAAAA,OAAO,CAAC6Z,SAAR,CAAkB;AACd,UAAI,KAAKJ,SAAT,EAAoB;AAChB,aAAKE,eAAL;AACH;AACJ,KAJD;AAKH;;AAwBOH,EAAAA,eAAe,CAAC/R,GAAD;AACnBA,IAAAA,GAAG,CAAC2G,mBAAJ,CAAwB,kBAAxB,EAA4C,KAAKuL,eAAjD;AACA,SAAKD,gBAAL,GAAwB,KAAxB;AACH;;AAEDtZ,EAAAA,OAAO;AACH,UAAMyE,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AAEA,SAAK4H,eAAL,CAAqB3U,GAAG,CAACpB,QAAzB;;AACA,WAAO,KAAKgW,SAAZ;AAEA9X,IAAAA,MAAM,CAACC,IAAP,CAAY,KAAKgY,MAAjB,EAAyBE,OAAzB,CAAkCC,MAAD;AAC7B,UAAI,KAAKH,MAAL,CAAYG,MAAZ,CAAJ,EAAyB;AACrB,aAAKH,MAAL,CAAYG,MAAZ,EAAoB3Z,OAApB;;AACA,eAAO,KAAKwZ,MAAL,CAAYG,MAAZ,CAAP;AACH;AACJ,KALD;AAOA,SAAKC,QAAL,GAAgB,EAAhB;AACH;;AAED1X,EAAAA,UAAU,CACNrC,OADM,EAENiM,KAFM,EAGNhK,GAHM;AAKN,QAAId,sCAAJ,EAAa;;AAIb,UAAM6Y,OAAO,GAAG,IAAIpL,IAAJ,CACZ,KAAK1C,QADO,EAEZlM,OAFY,EAGZ,KAAKia,cAHO,EAIZhO,KAJY,EAKZhK,GALY,CAAhB;AAQA,SAAK0X,MAAL,CAAYK,OAAO,CAAC3N,EAApB,IAA0B2N,OAA1B;;AAEA,QAAI,KAAKE,WAAT,EAAsB;AAClBF,MAAAA,OAAO,CAACf,cAAR;AACH;;AAED,WAAOe,OAAP;AACH;;AAEDf,EAAAA,cAAc;AACV,SAAKiB,WAAL,GAAmB,IAAnB;AAEA,UAAMC,KAAK,GAAG,KAAKR,MAAnB;;AAEA,SAAK,MAAMtN,EAAX,IAAiB3K,MAAM,CAACC,IAAP,CAAYwY,KAAZ,CAAjB,EAAqC;AACjCA,MAAAA,KAAK,CAAC9N,EAAD,CAAL,CAAU4M,cAAV;AACH;AACJ;;AAEkB,SAAZmB,YAAY,CACfhX,SADe,EAEfiJ,EAFe;AAIf,UAAMtM,OAAO,GAAIqD,SAAS,GACrBiX,iBADL;;AAEA,WAAOta,OAAO,IAAKA,OAAO,CAAC6B,IAAR,CAAyBmY,QAAzB,CAAkC1N,EAAlC,CAAnB;AACH;AAED;;;;;;;;;;AAQwB,SAAjBiO,iBAAiB,CACpBva,OADoB,EAEpBC,OAFoB,EAGpBua,OAHoB;QAGpBA;AAAAA,MAAAA,UAA0C;;;;;AAE1C,QAAI,CAACva,OAAO,CAACuG,aAAb,EAA4B;AACxB,aAAOjG,SAAP;AACH;;AAED,UAAM;AAAEka,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAiCF,OAAvC;AAEA,UAAM7B,SAAS,GAAG3Y,OAAO,CAAC2Y,SAA1B;AAGA;AACA;;AACA3Y,IAAAA,OAAO,CAAC2a,cAAR;AAEA,QAAI9Y,IAAJ;AACA,QAAIU,SAAJ;AACA,QAAIK,QAAJ;AACA,QAAIE,KAAJ;AACA,QAAI8X,iBAAiB,GAAG,KAAxB;AACA,QAAIC,mBAAJ;AACA,QAAIC,mBAAJ;AACA,QAAIC,cAAJ;AACA,QAAI9X,YAAJ;AACA,QAAI4V,UAAU,GAAgB6B,gBAAgB,IAAIza,OAAlD;AACA,UAAM+a,aAAa,GAA0C,EAA7D;;AAEA,WAAOnC,UAAU,KAAK,CAAChX,IAAD,IAAS4Y,QAAd,CAAjB,EAA0C;AACtC,YAAMlZ,gBAAgB,GAAGxB,mBAAmB,CACxCC,OADwC,EAExC6Y,UAFwC,CAA5C;;AAKA,UAAI4B,QAAQ,IAAIM,cAAc,KAAKxa,SAAnC,EAA8C;AAC1C,cAAM0a,GAAG,GAAIpC,UAA0B,CAACoC,GAAxC;;AAEA,YAAIA,GAAJ,EAAS;AACLF,UAAAA,cAAc,GAAGE,GAAG,CAACC,WAAJ,OAAsB,KAAvC;AACH;AACJ;;AAED,UAAI,CAAC3Z,gBAAL,EAAuB;AACnBsX,QAAAA,UAAU,GAAGF,SAAS,CAACE,UAAD,CAAtB;AACA;AACH;;AAED,YAAMxI,OAAO,GAAIwI,UAA0B,CAACxI,OAA5C;;AAEA,UACI9O,gBAAgB,CAAC0B,YAAjB,IACAoN,OAAO,KAAK,QADZ,IAEAA,OAAO,KAAK,SAHhB,EAIE;AACEpN,QAAAA,YAAY,GAAG4V,UAAf;AACH;;AAED,UACI,CAAC/V,KAAD,KACA,MAAAvB,gBAAgB,CAACoB,SAAjB,UAAA,iBAAA,SAAA,MAA4BwY,gBAD5B,KAEA,CAACvY,QAHL,EAIE;AACEgY,QAAAA,iBAAiB,GAAG,IAApB;AACH;;AAED,YAAMQ,YAAY,GAAG7Z,gBAAgB,CAACgB,SAAtC;AACA,YAAM8Y,WAAW,GAAG9Z,gBAAgB,CAACqB,QAArC;AACA,YAAM0Y,QAAQ,GAAG/Z,gBAAgB,CAACuB,KAAlC;;AAEA,UAAI,CAACP,SAAD,IAAc6Y,YAAlB,EAAgC;AAC5B7Y,QAAAA,SAAS,GAAG6Y,YAAZ;AACH;;AAED,UAAI,CAACxY,QAAD,IAAayY,WAAb,KAA6B,CAAC9Y,SAAD,IAAc6Y,YAA3C,CAAJ,EAA8D;AAC1D,YAAI7Y,SAAJ,EAAe;AACX;AACA,cACI,CAAC8Y,WAAW,CAACE,QAAZ,EAAD,IACAF,WAAW,CAAC7O,QAAZ,GAAuBgP,WADvB,IAEAjZ,SAAS,CAACkZ,MAAV,MAAqB,MAAAzb,OAAO,CAACuC,SAAR,UAAA,iBAAA,SAAA,MAAmBmZ,QAAxC,CAHJ,EAIE;AACEnZ,YAAAA,SAAS,GAAGhC,SAAZ;AACAqC,YAAAA,QAAQ,GAAGyY,WAAX;AACH;;AAEDP,UAAAA,mBAAmB,GAAGO,WAAtB;AACH,SAZD,MAYO;AACHzY,UAAAA,QAAQ,GAAGyY,WAAX;AACH;AACJ;;AAED,UACI,CAACvY,KAAD,IACAwY,QADA,KAEC,CAAC/Y,SAAD,IAAc6Y,YAFf,MAGC,CAACC,WAAD,IAAgBxC,UAAU,KAAK5Y,OAHhC,CADJ,EAKE;AACE6C,QAAAA,KAAK,GAAGwY,QAAR;AACAT,QAAAA,mBAAmB,GAAG,CAAC,CAACjY,QAAF,IAAcA,QAAQ,KAAKyY,WAAjD;AACH;;AAED,UAAI9Z,gBAAgB,CAACM,IAArB,EAA2B;AACvBA,QAAAA,IAAI,GAAGN,gBAAgB,CAACM,IAAxB;AACH;;AAED,UAAI,MAAAN,gBAAgB,CAACoB,SAAjB,UAAA,iBAAA,SAAA,MAA4BqY,aAAhC,EAA+C;AAC3CrZ,QAAAA,MAAM,CAACga,MAAP,CACIX,aADJ,EAEIzZ,gBAAgB,CAACoB,SAAjB,CAA2BqY,aAF/B;AAIH;;AAEDnC,MAAAA,UAAU,GAAGF,SAAS,CAACE,UAAD,CAAtB;AACH;;;AAGD,QAAI,CAAChX,IAAL,EAAW;AACP,YAAM+Z,OAAO,GAAG5b,OAAO,CAAC6B,IAAxB;AACA,YAAM0X,QAAQ,GAAGqC,OAAO,CAACnC,SAAzB;;AAEA,UAAIF,QAAJ,EAAc;AACV,YAAI,MAAAtZ,OAAO,CAACuG,aAAR,UAAA,iBAAA,SAAA,MAAuBgF,IAA3B,EAAiC;AAC7B3J,UAAAA,IAAI,GAAG+Z,OAAO,CAACjC,eAAR,EAAP;AACH;AACJ;AACJ;;AAED,QAAI/W,QAAQ,IAAI,CAACE,KAAjB,EAAwB;AACpB+X,MAAAA,mBAAmB,GAAG,IAAtB;AACH;;AAED,QAAIzZ,sCAAO,IAAI,CAACS,IAAhB,EAAsB;AAClB,UAAIU,SAAS,IAAIK,QAAb,IAAyBE,KAA7B,EAAoC;AAChCzB,QAAAA,OAAO,CAACC,KAAR,CACI,qEADJ;AAGH;AACJ;;AAED,UAAMua,mBAAmB,GAAIxF,KAAD,IACxB,CAAC,CAAC2E,aAAa,CAAC3E,KAAK,CAAC3U,GAAP,CADnB;;AAGA,WAAOG,IAAI,GACL;AACIA,MAAAA,IADJ;AAEIU,MAAAA,SAFJ;AAGIK,MAAAA,QAHJ;AAIIE,MAAAA,KAJJ;AAKI+X,MAAAA,mBALJ;AAMIC,MAAAA,mBANJ;AAOIgB,MAAAA,GAAG,EAAErB,QAAQ,GAAG,CAAC,CAACM,cAAL,GAAsBxa,SAPvC;AAQI0C,MAAAA,YARJ;AASI2X,MAAAA,iBATJ;AAUII,MAAAA,aAAa,EAAEa;AAVnB,KADK,GAaLtb,SAbN;AAcH;;AAEa,SAAPwb,OAAO,CACV/b,OADU,EAEVC,OAFU;;;AAIV,UAAM0Y,SAAS,GAAG3Y,OAAO,CAAC2Y,SAA1B;;AAEA,SACI,IAAIhP,EAAE,GAAG1J,OADb,EAEI0J,EAFJ,EAGIA,EAAE,GAAGgP,SAAS,CAAChP,EAAD,CAHlB,EAIE;AACE,YAAM9H,IAAI,GAAG,MAAA9B,mBAAmB,CAACC,OAAD,EAAU2J,EAAV,CAAnB,UAAA,iBAAA,SAAA,MAAkC9H,IAA/C;;AAEA,UAAIA,IAAJ,EAAU;AACN,eAAOA,IAAP;AACH;AACJ;;AAED,WAAOtB,SAAP;AACH;;AAEDuB,EAAAA,MAAM,CAACD,IAAD,EAAmBma,OAAnB;AACF,QAAIA,OAAJ,EAAa;AACT,aAAO,KAAKhC,QAAL,CAAcnY,IAAI,CAACmJ,GAAnB,CAAP;AACH,KAFD,MAEO;AACH,WAAKgP,QAAL,CAAcnY,IAAI,CAACmJ,GAAnB,IAA0BnJ,IAA1B;AACH;AACJ;;;;AC5jBL;;;;AAiBA,MAAMoa,uBAAuB,GAAG,EAAhC;MAEsBC;MAKTC,oBAAoBD;AAK7BpY,EAAAA,YAAY9D,SAA4BmC;AACpC;AACA,SAAK6I,GAAL,GAAW7I,OAAO,CAAC6I,GAAnB;AACA,SAAKmB,QAAL,GAAgBnM,OAAhB;AACA,SAAKoc,QAAL,GAAgBja,OAAhB;AACH;;AAEDka,EAAAA,SAAS,CAACla,OAAD;AACL,WAAOA,OAAO,KAAK,KAAKia,QAAxB;AACH;;AAEDE,EAAAA,OAAO,CAACrc,OAAD;AACH,SAAKmc,QAAL,CAAcE,OAAd,CAAsBrc,OAAtB;AACH;;AAEmB,QAAdsc,cAAc;AAChB,UAAMC,SAAS,GAAG,KAAKJ,QAAL,CAAcK,aAAd,EAAlB;;AACA,WAAOD,SAAS,GACV,KAAKrQ,QAAL,CAAc6L,cAAd,CAA6B0E,KAA7B,CAAmCF,SAAnC,CADU,GAEV,KAFN;AAGH;;AAEe,QAAVG,UAAU;AACZ,UAAMtZ,SAAS,GAAG,KAAK8I,QAAL,CAAc9I,SAAhC;AACA,WAAO0I,UAAU,CAAC1I,SAAD,CAAV,CAAsBuZ,OAAtB,CAA8B,KAAKR,QAAL,CAAcO,UAAd,EAA9B,CAAP;AACH;;;MAGiBE;AAQlB/Y,EAAAA,YAAY9D,SAA4B8c;AAH9B,iBAAA,GAAgB,EAAhB;AAIN,SAAK3Q,QAAL,GAAgBnM,OAAhB;AACA,SAAK8c,OAAL,GAAeA,OAAf;AACH;;AAEDC,EAAAA,SAAS;AACL,WAAO,KAAKC,QAAL,CAAc7Z,MAArB;AACH;;AAED8Z,EAAAA,aAAa,CAAC9a,OAAD;AACT,SAAK6a,QAAL,GAAgB,KAAKA,QAAL,CAAc7V,MAAd,CAAsB+V,CAAD,IAAO,CAACA,CAAC,CAACb,SAAF,CAAYla,OAAZ,CAA7B,CAAhB;AACH;;AAEDgb,EAAAA,UAAU,CAAChb,OAAD;AACN,WAAO,KAAK6a,QAAL,CAAcI,IAAd,CAAoBC,CAAD,IAAOA,CAAC,CAAChB,SAAF,CAAYla,OAAZ,CAA1B,CAAP;AACH;;;;AAML,MAAMmb,oBAAN,SAAmCT,wBAAnC;AAIIU,EAAAA,gBAAgB,CAACpb,OAAD,EAAyBlC,OAAzB;AACZ,QAAIud,IAAJ;;AAEA,SAAK,IAAI/S,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKuS,QAAL,CAAc7Z,MAAlC,EAA0CsH,CAAC,EAA3C,EAA+C;AAC3C,UAAI,KAAKuS,QAAL,CAAcvS,CAAd,EAAiB4R,SAAjB,CAA2Bla,OAA3B,CAAJ,EAAyC;AACrCqb,QAAAA,IAAI,GAAG,KAAKR,QAAL,CAAcvS,CAAd,CAAP;;AACA,aAAKuS,QAAL,CAAcS,MAAd,CAAqBhT,CAArB,EAAwB,CAAxB;;AACA;AACH;AACJ;;AAED,QAAI,CAAC+S,IAAL,EAAW;AACPA,MAAAA,IAAI,GAAG,IAAIrB,WAAJ,CAAgB,KAAKhQ,QAArB,EAA+BhK,OAA/B,CAAP;AACH;;AAEDqb,IAAAA,IAAI,CAAClB,OAAL,CAAarc,OAAb;;AAEA,SAAK+c,QAAL,CAAcV,OAAd,CAAsBkB,IAAtB;;AAEA,SAAKR,QAAL,CAAcS,MAAd,CACIxB,uBADJ,EAEI,KAAKe,QAAL,CAAc7Z,MAAd,GAAuB8Y,uBAF3B;AAIH;;AAEmB,QAAdM,cAAc,CAACpI,IAAD;AAChB,QAAIuJ,IAAI,GAAG,CAAC,CAACvJ,IAAb;;AAEA,SAAK,MAAM1J,CAAX,IAAgB,KAAKuS,QAArB,EAA+B;AAC3B,UAAI7I,IAAI,IAAI1J,CAAC,CAAC4R,SAAF,CAAYlI,IAAZ,CAAZ,EAA+B;AAC3BuJ,QAAAA,IAAI,GAAG,KAAP;AACH;;AAED,UAAI,CAACA,IAAD,KAAU,MAAMjT,CAAC,CAAC8R,cAAF,EAAhB,CAAJ,EAAyC;AACrC,eAAO,IAAP;AACH;AACJ;;AAED,WAAO,KAAP;AACH;;AAEe,QAAVI,UAAU,CAACxI,IAAD;AACZ,QAAIuJ,IAAI,GAAG,CAAC,CAACvJ,IAAb;AACA,UAAMwJ,UAAU,GAAkC,EAAlD;;AAEA,SAAK,MAAMlT,CAAX,IAAgB,KAAKuS,QAArB,EAA+B;AAC3B,UAAI7I,IAAI,IAAI1J,CAAC,CAAC4R,SAAF,CAAYlI,IAAZ,CAAZ,EAA+B;AAC3BuJ,QAAAA,IAAI,GAAG,KAAP;AACH;;AAED,UAAI,CAACA,IAAD,IAAS,CAACC,UAAU,CAAClT,CAAC,CAACO,GAAH,CAAxB,EAAiC;AAC7B2S,QAAAA,UAAU,CAAClT,CAAC,CAACO,GAAH,CAAV,GAAoBP,CAApB;AACH;AACJ;;;AAGD,SAAK,MAAM6B,EAAX,IAAiB3K,MAAM,CAACC,IAAP,CAAY+b,UAAZ,CAAjB,EAA0C;AACtC,UAAI,MAAMA,UAAU,CAACrR,EAAD,CAAV,CAAeqQ,UAAf,EAAV,EAAuC;AACnC,eAAO,IAAP;AACH;AACJ;;AAED,WAAO,KAAP;AACH;;;;MAGQiB;AAQT9Z,EAAAA,YAAY9D;AANZ;AACQ,iBAAA,GAGF,EAHE;AAMJ,SAAKmM,QAAL,GAAgBnM,OAAhB;AACH;;AAEDI,EAAAA,OAAO;AACH,SAAK4c,QAAL,GAAgB,EAAhB;AACH;;AAEDa,EAAAA,OAAO,CAAC5d,OAAD;;;AACH,UAAM6E,GAAG,GAAGwU,OAAO,CAACiB,iBAAR,CAA0B,KAAKpO,QAA/B,EAAyClM,OAAzC,CAAZ;AACA,UAAM6c,OAAO,GAAGhY,GAAG,IAAIA,GAAG,CAACjD,IAAJ,CAASmJ,GAAhC;AACA,UAAM7I,OAAO,GAAG2b,UAAU,CAACC,UAAX,CAAsB,KAAK5R,QAA3B,EAAqClM,OAArC,CAAhB;;AAEA,QAAI,CAAC6c,OAAD,IAAY,CAAC3a,OAAjB,EAA0B;AACtB,aAAO5B,SAAP;AACH;;AAED,UAAMyd,aAAa,GAAG,KAAKC,IAAL,CAClBnB,OADkB,EAElB,MAAM,IAAIQ,oBAAJ,CAAyB,KAAKnR,QAA9B,EAAwC2Q,OAAxC,CAFY,CAAtB;;AAKA,QAAI,CAAChY,GAAD,IAAQ,CAACA,GAAG,CAACvC,SAAb,KAA0B,MAAAuC,GAAG,CAACvC,SAAJ,UAAA,iBAAA,SAAA,MAAegZ,UAAzC,CAAJ,EAAyD;AACrDyC,MAAAA,aAAa,CAACT,gBAAd,CAA+Bpb,OAA/B,EAAwClC,OAAxC;AACH;;AAED,WAAOkC,OAAP;AACH;;AAED8b,EAAAA,IAAI,CAIFnB,OAJE,EAIeoB,cAJf;AAKA,QAAIF,aAAJ;;AAEA,SAAK,IAAIvT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKuS,QAAL,CAAc7Z,MAAlC,EAA0CsH,CAAC,EAA3C,EAA+C;AAC3C,YAAM0T,GAAG,GAAG,KAAKnB,QAAL,CAAcvS,CAAd,CAAZ;;AAEA,UAAI0T,GAAG,CAACrB,OAAJ,KAAgBA,OAApB,EAA6B;AACzBkB,QAAAA,aAAa,GAAGG,GAAhB;;AACA,aAAKnB,QAAL,CAAcS,MAAd,CAAqBhT,CAArB,EAAwB,CAAxB;;AACA;AACH;AACJ;;AAED,QAAI,CAACuT,aAAL,EAAoB;AAChBA,MAAAA,aAAa,GAAGE,cAAc,EAA9B;AACH;;AAED,SAAKlB,QAAL,CAAcV,OAAd,CAAsB0B,aAAtB;;AAEA,SAAKhB,QAAL,CAAcS,MAAd,CACIxB,uBADJ,EAEI,KAAKe,QAAL,CAAc7Z,MAAd,GAAuB8Y,uBAF3B;;AAKA,WAAO+B,aAAP;AACH;;AAEDf,EAAAA,aAAa,CAAC9a,OAAD;AACT,SAAK6a,QAAL,CAAclD,OAAd,CAAuBrP,CAAD;AAClBA,MAAAA,CAAC,CAACwS,aAAF,CAAgB9a,OAAhB;AACH,KAFD;;AAIA,SAAK6a,QAAL,GAAgB,KAAKA,QAAL,CAAc7V,MAAd,CAAsBsD,CAAD,IAAOA,CAAC,CAACsS,SAAF,KAAgB,CAA5C,CAAhB;AACH;;AAEmB,QAAdR,cAAc,CAACpI,IAAD;AAChB,QAAIuJ,IAAI,GAAG,CAAC,CAACvJ,IAAb;;AAEA,SAAK,MAAMiK,CAAX,IAAgB,KAAKpB,QAArB,EAA+B;AAC3B,UAAI7I,IAAI,IAAIiK,CAAC,CAACjB,UAAF,CAAahJ,IAAb,CAAZ,EAAgC;AAC5BuJ,QAAAA,IAAI,GAAG,KAAP;AACH;;AAED,UAAI,CAACA,IAAD,KAAU,MAAMU,CAAC,CAAC7B,cAAF,CAAiBpI,IAAjB,CAAhB,CAAJ,EAA6C;AACzC,eAAO,IAAP;AACH;AACJ;;AAED,WAAO,KAAP;AACH;;AAEe,QAAVwI,UAAU,CAACxI,IAAD;AACZ,QAAIuJ,IAAI,GAAG,CAAC,CAACvJ,IAAb;;AAEA,SAAK,MAAMiK,CAAX,IAAgB,KAAKpB,QAArB,EAA+B;AAC3B,UAAI7I,IAAI,IAAIiK,CAAC,CAACjB,UAAF,CAAahJ,IAAb,CAAZ,EAAgC;AAC5BuJ,QAAAA,IAAI,GAAG,KAAP;AACH;;AAED,UAAI,CAACA,IAAD,KAAU,MAAMU,CAAC,CAACzB,UAAF,CAAaxI,IAAb,CAAhB,CAAJ,EAAyC;AACrC,eAAO,IAAP;AACH;AACJ;;AAED,WAAO,KAAP;AACH;;;;AAGL,SAASqD,sBAAT,CACIC,WADJ,EAEIrF,MAFJ,EAGImJ,QAHJ,EAII8C,aAJJ;AAMI,MAAIjd,sCAAJ,EAAa;AACT,UAAMnB,OAAO,GAAGwX,WAAW,CAACzQ,GAAZ,EAAhB;;AAEA,QAAI/G,OAAJ,EAAa;AACT,UAAImS,MAAJ,EAAY;AACRnS,QAAAA,OAAO,CAACqN,KAAR,CAAcoK,cAAd,CAA6B,mBAA7B;AACH,OAFD,MAEO;AACHzX,QAAAA,OAAO,CAACqN,KAAR,CAAcI,WAAd,CACI,mBADJ,EAEI,CAAC6N,QAAQ,GAAG,QAAH,GAAc,UAAvB,IACI,GADJ,IAEK,cAAc8C,aAFnB,CAFJ;AAMH;AACJ;AACJ;AACJ;;AAED,SAASC,oBAAT,CACIre,OADJ,EAEIse,SAFJ,EAGIC,SAHJ;AAKI,QAAM9S,QAAQ,GAAa,EAA3B;AACA,QAAM+S,YAAY,GAAG,qBAArB;AACA,QAAMC,kBAAkB,GAAG,MAA3B;AAEA,QAAMC,SAAS,GAAG1e,OAAO,CAACO,YAAR,CAAqB,IAArB,CAAlB;;AAEA,MAAIme,SAAJ,EAAe;AACXjT,IAAAA,QAAQ,CAAC7E,IAAT,CACI,MAAM8X,SAAS,CAACC,OAAV,CAAkBH,YAAlB,EAAgCC,kBAAhC,CADV;AAGH;;AAED,MAAIH,SAAS,KAAK,KAAd,IAAuBte,OAAO,CAAC4e,SAAnC,EAA8C;AAC1C5e,IAAAA,OAAO,CAAC4e,SAAR,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BhF,OAA7B,CAAsCiF,GAAD;AACjCA,MAAAA,GAAG,GAAGA,GAAG,CAACC,IAAJ,EAAN;;AAEA,UAAID,GAAJ,EAAS;AACLrT,QAAAA,QAAQ,CAAC7E,IAAT,CACI,MAAMkY,GAAG,CAACH,OAAJ,CAAYH,YAAZ,EAA0BC,kBAA1B,CADV;AAGH;AACJ,KARD;AASH;;AAED,MAAIO,KAAK,GAAG,CAAZ;AACA,MAAItV,EAAJ;;AAEA,MAAI6U,SAAS,KAAK,KAAd,IAAuB9S,QAAQ,CAACvI,MAAT,KAAoB,CAA/C,EAAkD;AAC9CwG,IAAAA,EAAE,GAAG1J,OAAL;;AACA,WAAO0J,EAAP,EAAW;AACPsV,MAAAA,KAAK;AACLtV,MAAAA,EAAE,GAAGA,EAAE,CAACgH,sBAAR;AACH;;AACDjF,IAAAA,QAAQ,CAAC4Q,OAAT,CAAiB,gBAAgB2C,KAAhB,GAAwB,GAAzC;AACH;;AAEDvT,EAAAA,QAAQ,CAAC4Q,OAAT,CAAiBrc,OAAO,CAACoQ,OAAR,CAAgB6K,WAAhB,EAAjB;AAEA,SAAOxP,QAAQ,CAAC3N,IAAT,CAAc,EAAd,CAAP;AACH;;AAED,SAASmhB,aAAT,CAAuBjf,OAAvB;AACI,MAAI,CAACsG,gBAAgB,CAACtG,OAAO,CAACuG,aAAT,EAAwBvG,OAAxB,CAArB,EAAuD;AACnD,WAAOM,SAAP;AACH;;AAED,QAAMmL,QAAQ,GAAa,CAAC4S,oBAAoB,CAACre,OAAD,CAArB,CAA3B;AAEA,MAAI0J,EAAE,GAAG1J,OAAO,CAAC2J,aAAjB;;AAEA,SAAOD,EAAP,EAAW;AACP,UAAMwV,MAAM,GAAGxV,EAAE,CAAC0G,OAAH,KAAe,MAA9B;AACA3E,IAAAA,QAAQ,CAAC4Q,OAAT,CAAiBgC,oBAAoB,CAAC3U,EAAD,EAAK,KAAL,EAAY,CAACwV,MAAb,CAArC;;AAEA,QAAIA,MAAJ,EAAY;AACR;AACH;;AAEDxV,IAAAA,EAAE,GAAGA,EAAE,CAACC,aAAR;AACH;;AAED,SAAO8B,QAAQ,CAAC3N,IAAT,CAAc,GAAd,CAAP;AACH;;MAEYqhB,gBACDnT;AASRnI,EAAAA,YACI9D,SACAC,SACAoY,WACAnM;AAEA,UAAMlM,OAAN,EAAeC,OAAf,EAAwBiM,KAAxB;AAXI,kBAAA,GAAY,KAAZ;AACA,iBAAA,GAAqD,CAAC,EAAD,CAArD;AACA,uBAAA,GAAiB,CAAjB;;AAoCR,iBAAA,GAAW;AACP,aAAO,KAAKmT,SAAZ;AACH,KAFD;;AA4BA,oBAAA,GAAeJ,KAAD;AACV,WAAKK,cAAL,GAAsBL,KAAtB;;AAEA,UAAI,KAAKjC,QAAL,CAAc7Z,MAAd,GAAuB8b,KAAK,GAAG,CAAnC,EAAsC;AAClC,aAAKjC,QAAL,CAAcS,MAAd,CAAqBwB,KAAK,GAAG,CAA7B,EAAgC,KAAKjC,QAAL,CAAc7Z,MAAd,GAAuB8b,KAAvB,GAA+B,CAA/D;AACH;;AAED,UAAI,CAAC,KAAKjC,QAAL,CAAciC,KAAd,CAAL,EAA2B;AACvB,aAAKjC,QAAL,CAAciC,KAAd,IAAuB,EAAvB;AACH;;AAED,UAAI7d,sCAAJ,EAAa;AACToW,QAAAA,sBAAoB,CAChB,KAAKpL,QADW,EAEhB,KAFgB,EAGhB,KAAKiT,SAHW,EAIhB,KAAKC,cAJW,CAApB;AAMH;AACJ,KAnBD;;AAqBA,mBAAA,GAAa;AACT,YAAMne,CAAC,GAAG,KAAKiL,QAAL,CAAcpF,GAAd,EAAV;;AACA,aAAO,CAAC,CAAC7F,CAAF,IAAO,KAAKgL,QAAL,CAAc6L,cAAd,CAA6BuH,UAA7B,CAAwC;AAAEvW,QAAAA,SAAS,EAAE7H;AAAb,OAAxC,CAAd;AACH,KAHD;;AA0BA,qBAAA,GAAe;AACX,YAAMA,CAAC,GAAG,KAAKiL,QAAL,CAAcpF,GAAd,EAAV;;AACA,aAAO,CAAC,CAAC7F,CAAF,IAAO,KAAKgL,QAAL,CAAc6L,cAAd,CAA6BwH,YAA7B,CAA0Cre,CAA1C,CAAd;AACH,KAHD;;AAKA,mBAAA,GAAa;AACT,YAAMA,CAAC,GAAG,KAAKiL,QAAL,CAAcpF,GAAd,EAAV;;AACA,aAAO,CAAC,CAAC7F,CAAF,IAAO,KAAKgL,QAAL,CAAc6L,cAAd,CAA6B2E,UAA7B,CAAwCxb,CAAxC,CAAd;AACH,KAHD;;AA+EA,qBAAA,GAAgBse,gBAAD;AACX,YAAMxf,OAAO,GAAG,KAAKmM,QAAL,CAAcpF,GAAd,EAAhB;;AAEA,UAAI,CAAC/G,OAAL,EAAc;AACV,aAAK+c,QAAL,CAAc,KAAKsC,cAAnB,IAAqC,EAArC;AAEA;AACH;;AAED,WAAKtC,QAAL,CAAc,KAAKsC,cAAnB,IAAqC,KAAKtC,QAAL,CACjC,KAAKsC,cAD4B,EAEnCnY,MAFmC,CAE3BuY,EAAD;AACL,cAAMve,CAAC,GAAGue,EAAE,CAAC1Y,GAAH,EAAV;AACA,eAAO7F,CAAC,IAAIse,gBAAL,GAAwBxf,OAAO,CAACsL,QAAR,CAAiBpK,CAAjB,CAAxB,GAA8C,KAArD;AACH,OALoC,CAArC;AAMH,KAfD;;AAxLI,SAAK6J,GAAL,GAAWD,aAAa,CAAC/K,OAAO,CAACqD,SAAT,EAAoBpD,OAApB,CAAxB;AACA,SAAK6Y,UAAL,GAAkBT,SAAlB;;AAEA,QAAIjX,sCAAJ,EAAa;AACToW,MAAAA,sBAAoB,CAChB,KAAKpL,QADW,EAEhB,KAFgB,EAGhB,KAAKiT,SAHW,EAIhB,KAAKC,cAJW,CAApB;AAMH;AACJ;;AAEDlf,EAAAA,OAAO;AACH,SAAKgZ,OAAL;;AAEA,SAAKN,UAAL,CAAgB,IAAhB;;AAEA,SAAKuG,SAAL,GAAiB,KAAjB;AACA,SAAKC,cAAL,GAAsB,CAAtB;AAEA,SAAKjT,MAAL,GAAc,EAAd;AACA,SAAK2Q,QAAL,GAAgB,EAAhB;AACH;;AAMD2C,EAAAA,SAAS,CAACC,MAAD;AACL,SAAKP,SAAL,GAAiBO,MAAjB;;AAEA,QAAIxe,sCAAJ,EAAa;AACToW,MAAAA,sBAAoB,CAChB,KAAKpL,QADW,EAEhB,KAFgB,EAGhB,KAAKiT,SAHW,EAIhB,KAAKC,cAJW,CAApB;AAMH;AACJ;;AAEDO,EAAAA,UAAU;AACN,WAAO;AACHL,MAAAA,YAAY,EAAE,KAAKA,YADhB;AAEHD,MAAAA,UAAU,EAAE,KAAKA,UAFd;AAGH5C,MAAAA,UAAU,EAAE,KAAKA,UAHd;AAIHmD,MAAAA,YAAY,EAAE,KAAKA,YAJhB;AAKHC,MAAAA,WAAW,EAAE,KAAKA,WALf;AAMHxE,MAAAA,QAAQ,EAAE,KAAKA;AANZ,KAAP;AAQH;;AA4BDe,EAAAA,OAAO,CAACrc,OAAD;AACH,QAAI+V,GAAG,GAAG,KAAKgH,QAAL,CAAc,KAAKsC,cAAnB,CAAV;AAEAtJ,IAAAA,GAAG,GAAG,KAAKgH,QAAL,CAAc,KAAKsC,cAAnB,IAAqCtJ,GAAG,CAAC7O,MAAJ,CAAYuY,EAAD;AAClD,YAAMve,CAAC,GAAGue,EAAE,CAAC1Y,GAAH,EAAV;AACA,aAAO7F,CAAC,IAAIA,CAAC,KAAKlB,OAAlB;AACH,KAH0C,CAA3C;AAKA+V,IAAAA,GAAG,CAACsG,OAAJ,CACI,IAAI7V,eAAJ,CACI,KAAK0F,QAAL,CAAc9I,SADlB,EAEIpD,OAFJ,EAGIif,aAAa,CAACjf,OAAD,CAHjB,CADJ;;AAQA,WAAO+V,GAAG,CAAC7S,MAAJ,GAAa8Y,uBAApB,EAA6C;AACzCjG,MAAAA,GAAG,CAACgK,GAAJ;AACH;AACJ;;AAYDvD,EAAAA,aAAa;AACT,UAAMxc,OAAO,GAAG,KAAKmM,QAAL,CAAcpF,GAAd,EAAhB;;AAEA,QAAI,CAAC/G,OAAD,IAAY,CAAC,KAAKkM,QAAL,CAAcxJ,SAAd,CAAwBsd,SAAxB,CAAkChgB,OAAlC,CAAjB,EAA6D;AACzD,aAAO,IAAP;AACH;;AAED,QAAIigB,iBAAiB,GAAG,KAAK7T,MAAL,CAAY6T,iBAApC;AACA,QAAI1D,SAAS,GAAuB,IAApC;AAEA,UAAM1X,GAAG,GAAGwU,OAAO,CAACiB,iBAAR,CAA0B,KAAKpO,QAA/B,EAAyClM,OAAzC,CAAZ;;AAEA,QAAI,CAAC6E,GAAL,EAAU;AACN,aAAO,IAAP;AACH;;AAED,UAAMjD,IAAI,GAAGiD,GAAG,CAACjD,IAAjB;AACA,UAAM+W,WAAW,GAAG/W,IAAI,CAAC0K,UAAL,EAApB;;AAEA,QAAI,CAACqM,WAAL,EAAkB;AACd,aAAO,IAAP;AACH;;AAED,QAAIsH,iBAAiB,KAAK3f,SAA1B,EAAqC;AACjC2f,MAAAA,iBAAiB,GAAGre,IAAI,CAAC2K,QAAL,GAAgB0T,iBAApC;AACH;;AAED,QAAIA,iBAAiB,KAAKzf,kBAAA,CAAyBlC,WAAnD,EAAgE;AAC5Die,MAAAA,SAAS,GAAG,KAAKrQ,QAAL,CAAcxJ,SAAd,CAAwBwd,WAAxB,CAAoC;AAC5CnX,QAAAA,SAAS,EAAE4P;AADiC,OAApC,CAAZ;AAGH;;AAED,QACI,CAAC4D,SAAD,IACA0D,iBAAiB,KAAKzf,kBAAA,CAAyBhC,SAFnD,EAGE;AACE+d,MAAAA,SAAS,GAAG,KAAK4D,UAAL,CAAgBxH,WAAhB,CAAZ;AACH;;AAED,QAAI4D,SAAJ,EAAe;AACX,aAAOA,SAAP;AACH;;AAED,UAAM6D,kBAAkB,GAAG,KAAKC,cAAL,EAA3B;;AACA,UAAMC,gBAAgB,GAAG,KAAKpU,QAAL,CAAcxJ,SAAd,CAAwBwd,WAAxB,CAAoC;AACzDnX,MAAAA,SAAS,EAAE/I;AAD8C,KAApC,CAAzB;;AAGA,UAAMugB,cAAc,GAAG,KAAKJ,UAAL,CAAgBngB,OAAhB,CAAvB;;AAEA,QACIogB,kBAAkB,IAClBH,iBAAiB,KAAKzf,kBAAA,CAAyBpC,OAFnD,EAGE;AACE,aAAOgiB,kBAAP;AACH;;AAED,QACIE,gBAAgB,IAChBL,iBAAiB,KAAKzf,kBAAA,CAAyBnC,cAFnD,EAGE;AACE,aAAOiiB,gBAAP;AACH;;AAED,QACIC,cAAc,IACdN,iBAAiB,KAAKzf,kBAAA,CAAyBjC,YAFnD,EAGE;AACE,aAAOgiB,cAAP;AACH;;AAED,WAAOD,gBAAgB,IAAIF,kBAApB,IAA0CG,cAA1C,IAA4D,IAAnE;AACH;;AAmBDC,EAAAA,sBAAsB,CAACxgB,OAAD;AAClB,WAAOiW,YAAY,CAACjW,OAAD,EAAUQ,gBAAV,EAAkC,KAAKof,UAAL,EAAlC,CAAnB;AACH;;AAEOS,EAAAA,cAAc;AAClB,UAAMtK,GAAG,GAAG,KAAKgH,QAAL,CAAc,KAAKsC,cAAnB,EAAmCoB,KAAnC,CAAyC,CAAzC,CAAZ;;AAEA,SAAKZ,YAAL,CAAkB,IAAlB;;AAEA,SAAK,IAAIrV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuL,GAAG,CAAC7S,MAAxB,EAAgCsH,CAAC,EAAjC,EAAqC;AACjC,YAAMiV,EAAE,GAAG1J,GAAG,CAACvL,CAAD,CAAd;AACA,YAAMtJ,CAAC,GAAGue,EAAE,CAAC1Y,GAAH,EAAV;;AACA,YAAM/G,OAAO,GAAG,KAAKmM,QAAL,CAAcpF,GAAd,EAAhB;;AAEA,UAAI7F,CAAC,IAAIlB,OAAL,IAAgBA,OAAO,CAACsL,QAAR,CAAiBpK,CAAjB,CAApB,EAAyC;AACrC,YAAI,KAAKgL,QAAL,CAAcxJ,SAAd,CAAwB4N,WAAxB,CAAoCpP,CAApC,CAAJ,EAA4C;AACxC,iBAAOA,CAAP;AACH;AACJ,OAJD,MAIO,IAAI,CAAC,KAAKkL,MAAL,CAAYsU,eAAjB,EAAkC;AACrC;AACA;AACA;AACA,cAAMjV,QAAQ,GAAGgU,EAAE,CAACzY,OAAH,EAAjB;;AAEA,YAAIyE,QAAQ,IAAIzL,OAAhB,EAAyB;AACrB,cAAI2gB,GAAJ;;AAEA,cAAI;AACAA,YAAAA,GAAG,GAAG3gB,OAAO,CAACuG,aAAR,CAAsBqa,gBAAtB,CAAuCnV,QAAvC,CAAN;AACH,WAFD,CAEE,OAAOvK,CAAP,EAAU;AACR,gBAAIC,sCAAJ,EAAa;AACT;AACAC,cAAAA,OAAO,CAACC,KAAR,gCACmCoK,YADnC;AAGH;;AACD;AACH;;AAED,eAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmW,GAAG,CAACzd,MAAxB,EAAgCsH,CAAC,EAAjC,EAAqC;AACjC,kBAAMd,EAAE,GAAGiX,GAAG,CAACnW,CAAD,CAAd;;AAEA,gBAAId,EAAE,IAAI,KAAKwC,QAAL,CAAcxJ,SAAd,CAAwB4N,WAAxB,CAAoC5G,EAApC,CAAV,EAAmD;AAC/C,qBAAOA,EAAP;AACH;AACJ;AACJ;AACJ;AACJ;;AAED,WAAO,IAAP;AACH;;AAEOyW,EAAAA,UAAU,CAACngB,OAAD;AACd,QAAI,KAAKkM,QAAL,CAAc2L,kBAAd,CAAiCgJ,wBAAjC,EAAJ,EAAiE;AAC7D,YAAM3N,KAAK,GAAG,KAAKhH,QAAL,CAAcxJ,SAAd,CAAwBoe,SAAxB,CAAkC;AAC5C/X,QAAAA,SAAS,EAAE/I,OADiC;AAE5C+gB,QAAAA,kBAAkB,EAAE;AAFwB,OAAlC,CAAd;;AAKA,UAAI7N,KAAJ,EAAW;AACP,eAAOA,KAAP;AACH;AACJ;;AAED,WAAO,IAAP;AACH;;AAEOiG,EAAAA,OAAO;AACX,QAAIhY,sCAAJ,EAAa;AACToW,MAAAA,sBAAoB,CAAC,KAAKpL,QAAN,EAAgB,IAAhB,CAApB;AACH;AACJ;;;;MAQQ0R;AAeTha,EAAAA,YACI9D,SACAkM;AAdJ;;;AAGQ,mBAAA,GAAa,KAAb;AAIA,0BAAA,GAAoB,KAApB;AACA,kBAAA,GAAY,KAAZ;;AA0GA,iBAAA,GAAY/K,CAAD;AACf,UAAI,KAAK8f,kBAAT,EAA6B;AACzB,aAAKrP,IAAL,GAAYlM,YAAZ,CAAyB,KAAKub,kBAA9B;;AACA,aAAKA,kBAAL,GAA0B1gB,SAA1B;AACH;;AAED,UAAI,CAACY,CAAL,EAAQ;AACJ,aAAK+f,qBAAL;;AAEA;AACH;;AAED,YAAM/e,OAAO,GAAG,KAAK6a,QAAL,CAAca,OAAd,CAAsB1c,CAAtB,CAAhB;;AAEA,UAAIgB,OAAJ,EAAa;AACT,aAAKgf,SAAL,CAAehf,OAAf;AACH,OAFD,MAEO;AACH,aAAKif,WAAL;AACH;AACJ,KAnBO;;AAkJA,0BAAA,GAAqBjf,OAAD;AACxB,WAAK6a,QAAL,CAAcC,aAAd,CAA4B9a,OAA5B;;AAEA,UAAIA,OAAO,CAACoZ,QAAR,EAAJ,EAAwB;AACpB,aAAK2F,qBAAL;AACH;AACJ,KANO;;AApPJ,SAAK/U,QAAL,GAAgBnM,OAAhB;AACA,SAAK4R,IAAL,GAAY5R,OAAO,CAACqD,SAApB;AACA,SAAK2Z,QAAL,GAAgB,IAAIY,cAAJ,CAAmB5d,OAAnB,CAAhB;AAEAA,IAAAA,OAAO,CAAC6Z,SAAR,CAAkB;AACd,WAAK1N,QAAL,CAAc6L,cAAd,CAA6BqJ,SAA7B,CAAuC,KAAKnO,QAA5C;;AACA,YAAMzL,GAAG,GAAG,KAAKmK,IAAL,GAAYnO,QAAxB;;AAEA,YAAM6d,aAAa,GAAG7Z,GAAG,CAAC6Z,aAA1B;;AAEA,UAAIA,aAAa,IAAIA,aAAa,KAAK7Z,GAAG,CAAC+D,IAA3C,EAAiD;AAC7C;AACA,aAAK0H,QAAL,CAAcoO,aAAd;AACH;AACJ,KAVD;AAYA,UAAMC,WAAW,GAAGrV,KAAK,SAAL,IAAAA,KAAK,WAAL,SAAA,GAAAA,KAAK,CAAEqV,WAA3B;;AACA,QAAIA,WAAJ,EAAiB;AACb,WAAKC,YAAL,GAAoBD,WAApB;AACH;AACJ;;AAEDnhB,EAAAA,OAAO;AACH,UAAMyE,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AAEA,QAAI,KAAKqP,kBAAT,EAA6B;AACzBpc,MAAAA,GAAG,CAACa,YAAJ,CAAiB,KAAKub,kBAAtB;AACA,WAAKA,kBAAL,GAA0B1gB,SAA1B;AACH;;AAED,QAAI,KAAKkhB,oBAAT,EAA+B;AAC3B,WAAKA,oBAAL,CAA0BrhB,OAA1B;;AACA,aAAO,KAAKqhB,oBAAZ;AACA,aAAO,KAAKD,YAAZ;AACH;;AAED,SAAKrV,QAAL,CAAc6L,cAAd,CAA6B0J,WAA7B,CAAyC,KAAKxO,QAA9C;;AAEA,SAAK8J,QAAL,CAAc5c,OAAd;;AAEA,WAAO,KAAKuhB,WAAZ;AACH;;AAEDtf,EAAAA,aAAa,CACTpC,OADS,EAETiM,KAFS;;;AAIT,QAAI9K,sCAAJ,EAAa;;AAIb,UAAMe,OAAO,GAAG,IAAIid,OAAJ,CACZ,KAAKjT,QADO,EAEZlM,OAFY,EAGZ,KAAK2hB,iBAHO,EAIZ1V,KAJY,CAAhB;;AAOA,QACIjM,OAAO,CAACsL,QAAR,CACI,MAAA,KAAKY,QAAL,CAAc6L,cAAd,CAA6B6J,iBAA7B,EAAA,UAAA,iBAAA,KAAA,GAAoD,IADxD,CADJ,EAIE;AACE,WAAKV,SAAL,CAAehf,OAAf;AACH;;AAED,WAAOA,OAAP;AACH;;AAED0d,EAAAA,UAAU,CAAC5f,OAAD;AACN,SAAK,IAAIkB,CAAC,GAAuBlB,OAAjC,EAA0CkB,CAA1C,EAA6CA,CAAC,GAAGA,CAAC,CAACyI,aAAnD,EAAkE;AAC9D,YAAMrI,gBAAgB,GAAGxB,mBAAmB,CAAC,KAAKoM,QAAN,EAAgBhL,CAAhB,CAA5C;;AAEA,UAAII,gBAAgB,IAAIA,gBAAgB,CAACY,OAAzC,EAAkD;AAC9C,eAAOZ,gBAAgB,CAACY,OAAjB,CAAyB0d,UAAzB,EAAP;AACH;AACJ;;AAED,WAAOtf,SAAP;AACH;;AAEDuhB,EAAAA,KAAK;AACD,SAAKC,SAAL,GAAiB,IAAjB;;AAEA,QAAI,KAAKd,kBAAT,EAA6B;AACzB,WAAKrP,IAAL,GAAYlM,YAAZ,CAAyB,KAAKub,kBAA9B;;AACA,WAAKA,kBAAL,GAA0B1gB,SAA1B;AACH;AACJ;;AAEDyhB,EAAAA,MAAM,CAACC,OAAD;AACF,SAAKF,SAAL,GAAiB,KAAjB;;AAEA,QAAIE,OAAJ,EAAa;AACT,WAAKf,qBAAL;AACH;AACJ;AAuBD;;;;;AAGQC,EAAAA,SAAS,CAAChf,OAAD;AACb,UAAM+f,UAAU,GAAG,KAAKP,WAAxB;;AACA,QAAIO,UAAU,KAAK/f,OAAnB,EAA4B;AACxB,WAAKggB,UAAL,GAAkB,IAAlB;AACAD,MAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,SAAA,GAAAA,UAAU,CAAEvC,SAAZ,CAAsB,KAAtB,CAAA;AACAxd,MAAAA,OAAO,CAACwd,SAAR,CAAkB,IAAlB;AACA,WAAKgC,WAAL,GAAmBxf,OAAnB;AACH;AACJ;AAED;;;;;AAGQif,EAAAA,WAAW;;;AACf,SAAKe,UAAL,GAAkB,KAAlB;AACA,UAAA,KAAKR,WAAL,UAAA,iBAAA,SAAA,MAAkBhC,UAAU,MAA5B;AACA,SAAKgC,WAAL,GAAmBphB,SAAnB;AACH;;AAEO2gB,EAAAA,qBAAqB,CAAChM,KAAD;AACzB,QAAI,KAAK6M,SAAL,IAAkB,KAAKK,iBAA3B,EAA8C;AAC1C;AACH;;AAED,UAAMC,YAAY,GAAG;AACjB,WAAKpB,kBAAL,GAA0B1gB,SAA1B;;AACA,YAAM+hB,WAAW,GACb,KAAKnW,QAAL,CAAc6L,cAAd,CAA6BuK,qBAA7B,EADJ;;AAGA,UACI,CAACrN,KAAD,KACC,KAAKkN,iBAAL,IACG,CAAC,KAAKD,UADT,IAEG,CAAC,EAACG,WAAW,SAAX,IAAAA,WAAW,WAAX,SAAA,GAAAA,WAAW,CAAEE,YAAd,CAHL,CADJ,EAKE;AACE;AACH;;AAED,YAAMN,UAAU,GAAG,KAAKP,WAAxB;;AACA,UAAIO,UAAJ,EAAgB;AACZ,YACII,WAAW,IACXJ,UAAU,CAACzB,sBAAX,CAAkC6B,WAAlC,CAFJ,EAGE;AACE;AACH;;AAED,cAAM3Y,EAAE,GAAGuY,UAAU,CAACzF,aAAX,EAAX;;AAEA,YAAI9S,EAAE,IAAI,KAAKwC,QAAL,CAAc6L,cAAd,CAA6B0E,KAA7B,CAAmC/S,EAAnC,CAAV,EAAkD;AAC9C;AACH;AACJ;;AAED,WAAKyX,WAAL;;AAEA,WAAKgB,iBAAL,GAAyB,IAAzB;;AAEA,UAAI,EAAE,MAAM,KAAKpF,QAAL,CAAcT,cAAd,CAA6B,IAA7B,CAAR,CAAJ,EAAiD;AAC7C,cAAM,KAAKS,QAAL,CAAcL,UAAd,CAAyB,IAAzB,CAAN;AACH;;AAED,WAAKyF,iBAAL,GAAyB,KAAzB;AACH,KAvCD;;AAyCA,QAAIlN,KAAJ,EAAW;AACPmN,MAAAA,YAAY;AACf,KAFD,MAEO;AACH,WAAKpB,kBAAL,GAA0B,KAAKrP,IAAL,GAAYtK,UAAZ,CAAuB+a,YAAvB,EAAqC,GAArC,CAA1B;AACH;AACJ;;AAEgB,SAAVtE,UAAU,CACb/d,OADa,EAEbC,OAFa;;;AAIb,QAAI4B,IAAJ;;AAEA,SAAK,IAAIV,CAAC,GAAuBlB,OAAjC,EAA0CkB,CAA1C,EAA6CA,CAAC,GAAGA,CAAC,CAACyI,aAAnD,EAAkE;AAC9D,YAAMrI,gBAAgB,GAAGxB,mBAAmB,CAACC,OAAD,EAAUmB,CAAV,CAA5C;;AAEA,UAAII,gBAAJ,EAAsB;AAClB,YAAI,CAACM,IAAL,EAAW;AACPA,UAAAA,IAAI,GAAGN,gBAAgB,CAACM,IAAxB;AACH;;AAED,cAAMM,OAAO,GAAGZ,gBAAgB,CAACY,OAAjC;;AAEA,YAAIA,OAAJ,EAAa;AACT,iBAAOA,OAAP;AACH;AACJ;AACJ;;AAED,UAAMsgB,UAAU,GAAGziB,OAAO,CAACmC,OAAR,IAAoBnC,OAAO,CAACmC,OAA/C;;AAEA,QAAIsgB,UAAJ,EAAgB;AACZ,UAAIA,UAAU,CAAChB,oBAAf,EAAqC;AACjC,eAAOgB,UAAU,CAAChB,oBAAlB;AACH;;AAED,YAAMiB,gBAAgB,GAAGD,UAAU,CAACjB,YAApC;;AAEA,UAAI3f,IAAI,IAAI,CAAC4gB,UAAU,CAAChB,oBAApB,IAA4CiB,gBAAhD,EAAkE;AAC9D,cAAMlX,IAAI,GAAG,MAAAvL,OAAO,CAACuG,aAAR,UAAA,iBAAA,SAAA,MAAuBgF,IAApC;;AAEA,YAAIA,IAAJ,EAAU;AACNiX,UAAAA,UAAU,CAAChB,oBAAX,GAAkC,IAAIrC,OAAJ,CAC9Bpf,OAD8B,EAE9BwL,IAF8B,EAG7BxL,OAAO,CAACmC,OAAR,CAA+Byf,iBAHF,EAI9Bc,gBAJ8B,CAAlC;AAMH;AACJ;;AAED,aAAOD,UAAU,CAAChB,oBAAlB;AACH;;AAED,WAAOlhB,SAAP;AACH;;AAUgB,SAAVoiB,UAAU,CAAC/N,QAAD;AACb,WAAQA,QAAuB,CAACoI,QAAhC;AACH;;AAEuB,SAAjB4F,iBAAiB,CAAChO,QAAD;AACnBA,IAAAA,QAAuB,CAACsM,qBAAxB,CAA8C,IAA9C;AACJ;;;;ACt6BL;;;;MAOsB2B;AAAtB/e,EAAAA;AAIY,mBAAA,GAAiD,EAAjD;AAwDX;;AAtDG1D,EAAAA,OAAO;AACH,SAAK0iB,UAAL,GAAkB,EAAlB;AACA,WAAO,KAAKC,IAAZ;AACH;;AAED1B,EAAAA,SAAS,CAACtP,QAAD;AACL,UAAMiR,SAAS,GAAG,KAAKF,UAAvB;AACA,UAAM7D,KAAK,GAAG+D,SAAS,CAACC,OAAV,CAAkBlR,QAAlB,CAAd;;AAEA,QAAIkN,KAAK,GAAG,CAAZ,EAAe;AACX+D,MAAAA,SAAS,CAACnc,IAAV,CAAekL,QAAf;AACH;AACJ;;AAEDmR,EAAAA,cAAc,CAACnR,QAAD;AACV,UAAMiR,SAAS,GAAG,KAAKF,UAAvB;AACA,UAAM7D,KAAK,GAAG+D,SAAS,CAACC,OAAV,CAAkBlR,QAAlB,CAAd;;AAEA,QAAIkN,KAAK,IAAI,CAAb,EAAgB;AACZ+D,MAAAA,SAAS,CAACvF,MAAV,CAAiBwB,KAAjB,EAAwB,CAAxB;AACH;;AAED+D,IAAAA,SAAS,CAAC1G,OAAV,CAAkBvK,QAAlB;AACH;;AAED2P,EAAAA,WAAW,CAAC3P,QAAD;AACP,UAAMkN,KAAK,GAAG,KAAK6D,UAAL,CAAgBG,OAAhB,CAAwBlR,QAAxB,CAAd;;AAEA,QAAIkN,KAAK,IAAI,CAAb,EAAgB;AACZ,WAAK6D,UAAL,CAAgBrF,MAAhB,CAAuBwB,KAAvB,EAA8B,CAA9B;AACH;AACJ;;AAESkE,EAAAA,MAAM,CAACC,GAAD,EAAShN,OAAT;AACZ,QAAI,KAAK2M,IAAL,KAAcK,GAAlB,EAAuB;AACnB;AACH;;AAED,SAAKL,IAAL,GAAYK,GAAZ;;AAEA,SAAKC,cAAL,CAAoBD,GAApB,EAAyBhN,OAAzB;AACH;;AAESkN,EAAAA,MAAM;AACZ,WAAO,KAAKP,IAAZ;AACH;;AAESQ,EAAAA,OAAO,CAACH,GAAD,EAAShN,OAAT;AACb,SAAKiN,cAAL,CAAoBD,GAApB,EAAyBhN,OAAzB;AACH;;AAEOiN,EAAAA,cAAc,CAACD,GAAD,EAAShN,OAAT;AAClB,SAAK0M,UAAL,CAAgBhJ,OAAhB,CAAyB/H,QAAD,IAAcA,QAAQ,CAACqR,GAAD,EAAMhN,OAAN,CAA9C;AACH;;;;AClEL;;;;AAuBA,MAAMoN,mBAAmB,GAAG,IAA5B;AACA,MAAMC,YAAY,GAAG,IAArB;AAEA,MAAMC,WAAW,GAAG,IAApB;AAEA,MAAMC,2BAA2B,GAAsC;AACnEC,EAAAA,SAAS,EAAE,CADwD;AAEnEC,EAAAA,YAAY,EAAE,CAFqD;AAGnEC,EAAAA,KAAK,EAAE,CAH4D;AAInEC,EAAAA,UAAU,EAAE,CAJuD;AAKnEC,EAAAA,qBAAqB,EAAE,CAL4C;AAMnEC,EAAAA,IAAI,EAAE;AAN6D,CAAvE;;AAyBA,MAAMC,sBAAN,SAAqChI,eAArC;AAIIpY,EAAAA,YACI9D,SACAmC,SACAgiB;AAEA;AACA,SAAK/H,QAAL,GAAgBja,OAAhB;AACA,SAAKiiB,aAAL,GAAqBD,WAArB;AACH;;AAED9H,EAAAA,SAAS,CAACla,OAAD;AACL,WAAOA,OAAO,CAACkiB,UAAR,KAAuB,KAAKjI,QAAL,CAAciI,UAA5C;AACH;;AAEmB,QAAd9H,cAAc;AAChB,UAAM7V,IAAI,GAAyC,EAC/C,GAAG,KAAK0V,QADuC;AAE/CkI,MAAAA,KAAK,EAAE;AAFwC,KAAnD;AAKA,WAAO,KAAKF,aAAL,CACFG,gBADE,CACeC,gCADf,EACiD9d,IADjD,EAEF+d,IAFE,CAEI9N,KAAD,IAAW,CAAC,CAACA,KAFhB,CAAP;AAGH;;AAEe,QAAVgG,UAAU;AACZ,UAAMjW,IAAI,GAAyC,EAC/C,GAAG,KAAK0V,QADuC;AAE/CkI,MAAAA,KAAK,EAAE;AAFwC,KAAnD;AAKA,WAAO,KAAKF,aAAL,CACFG,gBADE,CACeC,gCADf,EACiD9d,IADjD,EAEF+d,IAFE,CAEI9N,KAAD,IAAW,CAAC,CAACA,KAFhB,CAAP;AAGH;;;;AAGL,MAAM+N,+BAAN,SAA8C7H,wBAA9C;AAMI/Y,EAAAA,YACI9D,SACA8c,SACA6H;AAEA,UAAM3kB,OAAN,EAAe8c,OAAf;AACA,SAAKsH,aAAL,GAAqBO,YAArB;AACH;;AAEDrI,EAAAA,OAAO,CAACna,OAAD;AACH,QAAIqb,IAAJ;;AAEA,SAAK,IAAI/S,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKuS,QAAL,CAAc7Z,MAAlC,EAA0CsH,CAAC,EAA3C,EAA+C;AAC3C,UAAI,KAAKuS,QAAL,CAAcvS,CAAd,EAAiB4R,SAAjB,CAA2Bla,OAA3B,CAAJ,EAAyC;AACrCqb,QAAAA,IAAI,GAAG,KAAKR,QAAL,CAAcvS,CAAd,CAAP;;AACA,aAAKuS,QAAL,CAAcS,MAAd,CAAqBhT,CAArB,EAAwB,CAAxB;;AACA;AACH;AACJ;;AAED,QAAI,CAAC+S,IAAL,EAAW;AACPA,MAAAA,IAAI,GAAG,IAAI0G,sBAAJ,CACH,KAAK/X,QADF,EAEHhK,OAFG,EAGH,KAAKiiB,aAHF,CAAP;AAKH;;AAED,SAAKpH,QAAL,CAAcV,OAAd,CAAsBkB,IAAtB;;AAEA,SAAKR,QAAL,CAAcS,MAAd,CAAqB,EAArB,EAAyB,KAAKT,QAAL,CAAc7Z,MAAd,GAAuB,EAAhD;AACH;;AAEmB,QAAdoZ,cAAc;AAChB,SAAK,MAAM9R,CAAX,IAAgB,KAAKuS,QAArB,EAA+B;AAC3B,UAAI,MAAMvS,CAAC,CAAC8R,cAAF,EAAV,EAA8B;AAC1B,eAAO,IAAP;AACH;AACJ;;AAED,WAAO,KAAP;AACH;;AAEe,QAAVI,UAAU;AACZ,SAAK,MAAMlS,CAAX,IAAgB,KAAKuS,QAArB,EAA+B;AAC3B,UAAI,MAAMvS,CAAC,CAACkS,UAAF,EAAV,EAA0B;AACtB,eAAO,IAAP;AACH;AACJ;;AAED,WAAO,KAAP;AACH;;;;AAGL,MAAeiI,sBAAf;AAqBI9gB,EAAAA,YACI9D,SACA6kB,UACAC,cACAnO,OACAoO,SACAC,QACAC,UACAC;AAbI,oBAAA,GAAyC,EAAzC;AACA,gBAAA,GAAU,KAAV;AACA,0BAAA,GAAoB,KAApB;AACA,mBAAA,GAAa,CAAb;AAYJ,SAAKllB,OAAL,GAAeA,OAAf;AACA,SAAKmlB,KAAL,GAAaN,QAAb;AACA,SAAKO,OAAL,GAAela,YAAY,CAAC2Z,QAAQ,EAAT,CAA3B;AACA,SAAKvY,EAAL,GAAUpC,MAAM,CAAC2a,QAAQ,EAAT,CAAhB;AACA,SAAKQ,SAAL,GAAiB1O,KAAjB;AACA,SAAK2O,aAAL,GAAqBR,YAArB;AACA,SAAKS,OAAL,GAAeP,MAAM,IAAI;AAAE,OAAC,KAAKI,OAAN,GAAgB;AAAlB,KAAzB;AACA,SAAKH,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKH,OAAL,GAAeA,OAAf;AACA,SAAKS,QAAL,GAAgB,KAAKzZ,UAAU,CAAC8Y,QAAD,CAAf,EAA8B,CAACjI,OAAD,EAAU6I,MAAV;AAC1C,WAAKC,QAAL,GAAgB9I,OAAhB;AACA,WAAK+I,OAAL,GAAeF,MAAf;AACH,KAHe,CAAhB;AAIH;;AAESG,EAAAA,UAAU,CAACd,YAAD;AAChB,WAAO,KAAKG,QAAL,KAAkBvB,WAAlB,GACD,KAAKwB,MAAL,GACI;AAAE,OAACxB,WAAD,GAAe;AAAEmC,QAAAA,IAAI,EAAE,KAAKX;AAAb;AAAjB,KADJ,GAEI,IAHH,GAID,KAAKD,QAAL,GACAH,YAAY,CAAC,KAAKG,QAAN,CAAZ,GACI;AACI,OAAC,KAAKA,QAAN,GAAiB;AACbY,QAAAA,IAAI,EAAEf,YAAY,CAAC,KAAKG,QAAN,CAAZ,CAA4BY;AADrB;AADrB,KADJ,GAMI,IAPJ,GAQAlkB,MAAM,CAACC,IAAP,CAAYkjB,YAAZ,EAA0B3hB,MAA1B,KAAqC,CAArC,IAA0C,KAAK+hB,MAA/C,GACA;AAAE,OAACxB,WAAD,GAAe;AAAEmC,QAAAA,IAAI,EAAE,KAAKX;AAAb;AAAjB,KADA,GAEAvjB,MAAM,CAACC,IAAP,CAAYkjB,YAAZ,EAA0B3hB,MAA1B,GAAmC,CAAnC,GACA2hB,YADA,GAEA,IAhBN;AAiBH;;AAEDgB,EAAAA,KAAK,CACDC,YADC;AAKD,UAAMC,OAAO,GAAG,KAAKJ,UAAL,CAAgB,KAAKN,aAArB,CAAhB;AACA,UAAMN,MAAM,GAA4B,EAAE,GAAG,KAAKO;AAAV,KAAxC;;AAEA,QAAIS,OAAJ,EAAa;AACT,WAAK,MAAM1Z,EAAX,IAAiB3K,MAAM,CAACC,IAAP,CAAYokB,OAAZ,CAAjB,EAAuC;AACnChB,QAAAA,MAAM,CAAC1Y,EAAD,CAAN,GAAa,IAAb;AACH;AACJ;;AAED,UAAM5F,IAAI,GAA2C;AACjDuf,MAAAA,WAAW,EAAE,KAAK3Z,EAD+B;AAEjD4Z,MAAAA,IAAI,EAAE,KAAKA,IAFsC;AAGjDC,MAAAA,UAAU,EAAE,KAHqC;AAIjDC,MAAAA,SAAS,EAAEvb,IAAI,CAACC,GAAL,EAJsC;AAKjDqa,MAAAA,KAAK,EAAE,KAAKC,OALqC;AAMjDiB,MAAAA,MAAM,EAAErB,MANyC;AAOjDD,MAAAA,OAAO,EAAE,KAAKA,OAPmC;AAQjDM,MAAAA,SAAS,EAAE,KAAKA;AARiC,KAArD;;AAWA,QAAI,KAAKJ,QAAT,EAAmB;AACfve,MAAAA,IAAI,CAACT,MAAL,GAAc,KAAKgf,QAAnB;AACH;;AAED,QAAIc,YAAJ,EAAkB;AACd,WAAKO,iBAAL,GAAyB,IAAzB;AAEAP,MAAAA,YAAY,CAACrf,IAAD,CAAZ,CAAmB+d,IAAnB,CAAyB9N,KAAD;AACpB,aAAK2P,iBAAL,GAAyB,KAAzB;;AAEA,YAAI3P,KAAK,KAAKpW,SAAd,EAAyB;AACrB,cAAI,CAAC,KAAKgmB,OAAV,EAAmB;AACf,iBAAKA,OAAL,GAAe5P,KAAf;AACH;AACJ;;AAED,YAAI,KAAK4P,OAAL,IAAgB,KAAKC,UAAL,KAAoB,CAAxC,EAA2C;AACvC,eAAKC,GAAL;AACH;AACJ,OAZD;AAaH;;AAED,QAAIT,OAAJ,EAAa;AACT,WAAK,MAAM1Z,EAAX,IAAiB3K,MAAM,CAACC,IAAP,CAAYokB,OAAZ,CAAjB,EAAuC;AACnC,YAAI,EAAE1Z,EAAE,IAAI,KAAKiZ,OAAb,CAAJ,EAA2B;AACvB,eAAKmB,KAAL,CAAWV,OAAO,CAAC1Z,EAAD,CAAP,CAAYuZ,IAAvB,EAA6BvZ,EAA7B,EAAiC5F,IAAjC;AACH;AACJ;AACJ;;AAED,QAAI,KAAK8f,UAAL,KAAoB,CAApB,IAAyB,CAAC,KAAKF,iBAAnC,EAAsD;AAClD,WAAKG,GAAL;AACH;;AAED,WAAO,KAAKjB,QAAZ;AACH;;AAEOkB,EAAAA,KAAK,CACTb,IADS,EAETZ,QAFS,EAGTve,IAHS;AAKT,QAAI,KAAKigB,WAAL,CAAiB1B,QAAjB,MAA+B1kB,SAAnC,EAA8C;AAC1C,WAAKomB,WAAL,CAAiB1B,QAAjB,IAA6B,IAA7B;AACA,WAAKuB,UAAL;AACAX,MAAAA,IAAI,CAACnf,IAAD,CAAJ;AACH;AACJ;;AAED+f,EAAAA,GAAG,CAACnlB,KAAD;AACC,QAAI,KAAKslB,OAAT,EAAkB;AACd;AACH;;AAED,SAAKA,OAAL,GAAe,IAAf;;AAEA,QAAI,KAAKL,OAAL,KAAiBhmB,SAAjB,IAA8Be,KAAlC,EAAyC;AACrC,UAAI,KAAKqkB,OAAT,EAAkB;AACd,aAAKA,OAAL,CAAarkB,KAAb;AACH;AACJ,KAJD,MAIO,IAAI,KAAKokB,QAAT,EAAmB;AACtB,WAAKA,QAAL,CAAc,KAAKa,OAAnB;AACH;AACJ;;AAEDM,EAAAA,UAAU,CAACngB,IAAD;AACN,UAAM6f,OAAO,GAAG7f,IAAI,CAAC6f,OAArB;;AAEA,QAAIA,OAAO,KAAKhmB,SAAZ,IAAyB,CAAC,KAAKgmB,OAAnC,EAA4C;AACxC,WAAKA,OAAL,GAAeA,OAAf;AACH;;AAED,UAAMO,YAAY,GACdpgB,IAAI,CAACT,MAAL,KAAgByd,WAAhB,GAA8BA,WAA9B,GAA4Chd,IAAI,CAACye,KADrD;;AAGA,QAAI,KAAKwB,WAAL,CAAiBG,YAAjB,CAAJ,EAAoC;AAChC,WAAKH,WAAL,CAAiBG,YAAjB,IAAiC,KAAjC;AACA,WAAKN,UAAL;;AAEA,UACI,KAAKD,OAAL,IACC,KAAKC,UAAL,KAAoB,CAApB,IAAyB,CAAC,KAAKF,iBAFpC,EAGE;AACE,aAAKG,GAAL;AACH;AACJ;AACJ;;;;AAyCL,MAAMM,oBAAN,SAAmCnC,sBAAnC;AAAA9gB,EAAAA;;AAII,aAAA,GAAO6f,2BAA2B,CAACC,SAAnC;AAcH;;AAZuB,SAAboD,aAAa;AAChB,WAAO,KAAP;AACH;;AAEwB,eAAZC,YAAY,CACrBjnB,OADqB;AAGrB,WAAO;AACH8gB,MAAAA,wBAAwB,EACpB9gB,OAAO,CAAC8X,kBAAR,CAA2BgJ,wBAA3B;AAFD,KAAP;AAIH;;;;AAoBL,MAAMoG,uBAAN,SAAsCtC,sBAAtC;AAAA9gB,EAAAA;;AAII,aAAA,GAAO6f,2BAA2B,CAACE,YAAnC;AAqCH;;AAnC2B,SAAjBsD,iBAAiB;AACpB,WAAO,IAAP;AACH;;AAEmB,SAAbH,aAAa,CAChBhnB,OADgB,EAEhB0G,IAFgB,EAGhBme,QAHgB;AAKhB,UAAMlb,EAAE,GAAGyd,qBAAqB,CAACC,WAAtB,CACPrnB,OADO,EAEP6kB,QAFO,EAGPne,IAAI,CAAC2e,SAHE,CAAX;AAKA,WAAO,CAAC1b,EAAD,IAAO,CAAC3J,OAAO,CAAC2C,SAAR,CAAkB4N,WAAlB,CAA8B5G,EAA9B,CAAf;AACH;;AAEwB,eAAZsd,YAAY,CACrBjnB,OADqB,EAErB0G,IAFqB,EAGrBme,QAHqB,EAIrBO,OAJqB,EAKrBT,YALqB,EAMrB2C,aANqB;AAQrB,UAAM3d,EAAE,GAAGyd,qBAAqB,CAACC,WAAtB,CACPrnB,OADO,EAEP6kB,QAFO,EAGPne,IAAI,CAAC2e,SAHE,CAAX;AAKA,WACK,CAAC,CAAC1b,EAAF,IAAQ3J,OAAO,CAACgY,cAAR,CAAuB0E,KAAvB,CAA6B/S,EAA7B,EAAiC,IAAjC,CAAT,IACA,CAAC,EAAE,MAAM2d,aAAR,CAFL;AAIH;;;;AAGL,MAAMC,iBAAiB,GAOnB;AACAC,EAAAA,OAAO,EAAE,CADT;AAEAC,EAAAA,OAAO,EAAE,CAFT;AAGAC,EAAAA,QAAQ,EAAE,CAHV;AAIAC,EAAAA,UAAU,EAAE,CAJZ;AAKAC,EAAAA,kBAAkB,EAAE,CALpB;AAMAC,EAAAA,OAAO,EAAE;AANT,CAPJ;;AAoCA,MAAMC,gBAAN,SAA+BlD,sBAA/B;AAAA9gB,EAAAA;;AAII,aAAA,GAAO6f,2BAA2B,CAACG,KAAnC;AAgPH;;AA9O2B,SAAjBqD,iBAAiB,CACpBnnB,OADoB,EAEpB0G,IAFoB;AAIpB,WACIA,IAAI,CAACqhB,KAAL,KAAeR,iBAAiB,CAACI,UAAjC,IACAjhB,IAAI,CAACqhB,KAAL,KAAeR,iBAAiB,CAACK,kBAFrC;AAIH;;AAEwB,eAAZX,YAAY,CACrBjnB,OADqB,EAErB0G,IAFqB,EAGrBme,QAHqB,EAIrBO,OAJqB,EAKrBT,YALqB,EAMrB2C,aANqB,EAOrBU,cAPqB;AASrB,UAAM5B,SAAS,GAAG1f,IAAI,CAAC0f,SAAvB;AACA,UAAMf,SAAS,GAAG3e,IAAI,CAAC2e,SAAvB;;AAEA,QAAIe,SAAS,IAAIf,SAAjB,EAA4B;AACxB,cAAQA,SAAS,CAAC0C,KAAlB;AACI,aAAKR,iBAAiB,CAACC,OAAvB;AACI,iBAAOM,gBAAgB,CAACG,oBAAjB,CACHjoB,OADG,EAEHomB,SAFG,EAGHf,SAHG,EAIHV,YAJG,EAKHqD,cALG,CAAP;;AAOJ,aAAKT,iBAAiB,CAACE,OAAvB;AACI,iBAAOK,gBAAgB,CAACI,oBAAjB,CACHloB,OADG,EAEHomB,SAFG,EAGHf,SAHG,EAIHV,YAAY,CAAC7f,GAJV,CAAP;;AAMJ,aAAKyiB,iBAAiB,CAACG,QAAvB;AACI,iBAAOI,gBAAgB,CAACK,qBAAjB,CACHnoB,OADG,EAEHqlB,SAFG,CAAP;;AAIJ,aAAKkC,iBAAiB,CAACI,UAAvB;AACI,iBAAOG,gBAAgB,CAACM,uBAAjB,CACHpoB,OADG,EAEHqlB,SAFG,EAGHV,YAHG,EAIH2C,aAJG,CAAP;;AAMJ,aAAKC,iBAAiB,CAACK,kBAAvB;AACI,iBAAOE,gBAAgB,CAACO,+BAAjB,CACHroB,OADG,EAEH2kB,YAAY,CAAC7f,GAFV,EAGHugB,SAAS,CAACvE,wBAHP,CAAP;;AAKJ,aAAKyG,iBAAiB,CAACM,OAAvB;AACI,iBAAOC,gBAAgB,CAACQ,oBAAjB,CACHtoB,OADG,EAEH2kB,YAAY,CAAC7f,GAFV,EAGHugB,SAAS,CAACniB,OAHP,CAAP;AAnCR;AAyCH;;AAED,WAAO,IAAP;AACH;;AAEmB,SAAbQ,aAAa,CAChB1D,OADgB,EAEhBqlB,SAFgB;AAIhB,WAAOA,SAAS,CAACra,GAAV,GACD,IAAIud,kBAAJ,CACIvoB,OADJ,EAEIqlB,SAAS,CAACra,GAFd,EAGIqa,SAAS,CAACmD,QAHd,EAIInD,SAAS,CAAC/Y,EAJd,EAKI+Y,SAAS,CAACvI,OALd,EAMIuI,SAAS,CAACoD,YANd,EAOIpD,SAAS,CAACqD,eAPd,CADC,GAUD,IAVN;AAWH;;AAEwC,eAApBT,oBAAoB,CACrCjoB,OADqC,EAErComB,SAFqC,EAGrCf,SAHqC,EAIrCV,YAJqC,EAKrCqD,cALqC;AAOrC,UAAM/nB,OAAO,GAAG6nB,gBAAgB,CAACpkB,aAAjB,CAA+B1D,OAA/B,EAAwCqlB,SAAxC,CAAhB;;AAEA,QAAIA,SAAS,IAAIA,SAAS,CAACmD,QAAvB,IAAmCvoB,OAAvC,EAAgD;AAC5C0kB,MAAAA,YAAY,CAAC7f,GAAb,CAAiB6jB,UAAjB,GAA8BtD,SAAS,CAACmD,QAAxC;AACA7D,MAAAA,YAAY,CAAC7f,GAAb,CAAiB8jB,mBAAjB,GAAuCxC,SAAvC;;AAEA,UAAI,CAAC4B,cAAD,IAAmB3C,SAAS,CAACvI,OAA7B,IAAwCuI,SAAS,CAAChB,UAAtD,EAAkE;AAC9D,cAAM5B,UAAU,GAAGziB,OAAO,CAACmC,OAA3B;;AAEA,YAAIsgB,UAAJ,EAAgB;AACZ,gBAAMoG,OAAO,GAAG/K,UAAU,CAAC6E,UAAX,CAAsBF,UAAtB,CAAhB;AAEA,gBAAMtgB,OAAO,GAAuB;AAChCqmB,YAAAA,QAAQ,EAAEnD,SAAS,CAACmD,QADY;AAEhCnE,YAAAA,UAAU,EAAEgB,SAAS,CAAChB,UAFU;AAGhCvH,YAAAA,OAAO,EAAEuI,SAAS,CAACvI;AAHa,WAApC;AAMA,gBAAMgM,WAAW,GAAGD,OAAO,CAAC5K,IAAR,CAChBoH,SAAS,CAACvI,OADM,EAEhB,MACI,IAAI4H,+BAAJ,CACI1kB,OADJ,EAEImC,OAAO,CAAC2a,OAFZ,EAGI6H,YAHJ,CAHY,CAApB;AAUAmE,UAAAA,WAAW,CAACxM,OAAZ,CAAoBna,OAApB;AACH;AACJ;;AAED4mB,MAAAA,8BAA8B,CAAC5F,MAA/B;AAEInjB,MAAAA,OAAO,CAACgpB,WAAR,CAAqBhR,cAFzB,EAGI/X,OAHJ,EAII;AACIgpB,QAAAA,yBAAyB,EACrB5D,SAAS,CAAC4D;AAFlB,OAJJ;AASH;;AAED,WAAO,IAAP;AACH;;AAEwC,eAApBf,oBAAoB,CACrCloB,OADqC,EAErComB,SAFqC,EAGrCf,SAHqC,EAIrC1e,OAJqC;AAMrC,QACI0e,SAAS,KACRA,SAAS,CAACmD,QAAV,KAAuB7hB,OAAO,CAACgiB,UAA/B,IAA6CtD,SAAS,CAACnQ,KAD/C,CAAT,KAEC,CAACvO,OAAO,CAACiiB,mBAAT,IACGjiB,OAAO,CAACiiB,mBAAR,GAA8BxC,SAHlC,CADJ,EAKE;AACE2C,MAAAA,8BAA8B,CAAC5F,MAA/B;AAEInjB,MAAAA,OAAO,CAACgpB,WAAR,CAAqBhR,cAFzB,EAGIzX,SAHJ,EAII,EAJJ;AAMH;;AAED,WAAO,IAAP;AACH;;AAEyC,eAArB4nB,qBAAqB,CACtCnoB,OADsC,EAEtCqlB,SAFsC;AAItC,UAAMlP,IAAI,GAAGkP,SAAS,CAACoD,YAAvB;AACA,UAAMxoB,OAAO,GAAG6nB,gBAAgB,CAACpkB,aAAjB,CAA+B1D,OAA/B,EAAwCqlB,SAAxC,CAAhB;;AAEA,QAAIlP,IAAI,IAAIlW,OAAZ,EAAqB;AACjBipB,MAAAA,+BAA+B,CAAC3F,OAAhC;AAEIvjB,MAAAA,OAAO,CAACgpB,WAAR,CAAqBhnB,eAFzB,EAGI/B,OAHJ,EAII;AAAEkpB,QAAAA,KAAK,EAAE,CAAChT,IAAD,CAAT;AAAiBC,QAAAA,OAAO,EAAEiP,SAAS,CAACqD;AAApC,OAJJ;AAMH;;AAED,WAAO,IAAP;AACH;;AAE2C,eAAvBN,uBAAuB,CACxCpoB,OADwC,EAExCqlB,SAFwC,EAGxCV,YAHwC,EAIxC2C,aAJwC;AAMxC,UAAM8B,OAAO,GAAG/D,SAAS,IAAIA,SAAS,CAACmD,QAAvC;;AAEA,QAAIY,OAAJ,EAAa;AACTzE,MAAAA,YAAY,CAAC0E,YAAb,CAA0BD,OAA1B;AACH;;AAED,WAAO9B,aAAa,CAAC7C,IAAd,CAAmB;AACtB,UAAI2E,OAAO,KAAKzE,YAAY,CAAC7f,GAAb,CAAiB6jB,UAAjC,EAA6C;AACzC,cAAMlG,UAAU,GAAGziB,OAAO,CAACmC,OAA3B;;AAEA,YAAIsgB,UAAJ,EAAgB;AACZ3E,UAAAA,UAAU,CAAC8E,iBAAX,CAA6BH,UAA7B;AACH;AACJ;;AACD,aAAO,IAAP;AACH,KATM,CAAP;AAUH;;AAEmD,eAA/B4F,+BAA+B,CAChDroB,OADgD,EAEhD2G,OAFgD,EAGhDma,wBAHgD;AAKhD,QACIA,wBAAwB,KAAKvgB,SAA7B,IACAP,OAAO,CAAC8X,kBAAR,CAA2BgJ,wBAA3B,OACIA,wBAHR,EAIE;AACEna,MAAAA,OAAO,CAAC2iB,mCAAR,GAA8C,IAA9C;AACAtpB,MAAAA,OAAO,CAAC8X,kBAAR,CAA2BC,yBAA3B,CACI+I,wBADJ;AAGAna,MAAAA,OAAO,CAAC2iB,mCAAR,GAA8C,KAA9C;AACH;;AACD,WAAO,IAAP;AACH;;AAEwC,eAApBhB,oBAAoB,CACrCtoB,OADqC,EAErC2G,OAFqC,EAGrCuF,KAHqC;AAKrC,QAAIvF,OAAO,CAAC4iB,gBAAZ,EAA8B;AAC1B5iB,MAAAA,OAAO,CAAC4iB,gBAAR,CAAyBzd,IAAzB;AAEI9L,MAAAA,OAAO,CAACkD,OAFZ,EAGIgJ,KAHJ;AAKH;;AACD,WAAO,IAAP;AACH;;;;AAGL,MAAMkb,qBAAN,SAAoCxC,sBAApC;AAAA9gB,EAAAA;;AAII,aAAA,GAAO6f,2BAA2B,CAACI,UAAnC;AAuJH;;AArJ2B,SAAjBoD,iBAAiB;AACpB,WAAO,IAAP;AACH;;AAEiB,SAAXE,WAAW,CACdrnB,OADc,EAEd6kB,QAFc,EAGdne,IAHc;AAKd,QAAIzG,OAAJ;;AAEA,QACIyG,IAAI,KACH,CAACA,IAAI,CAAC0e,OAAN,IAAiB1e,IAAI,CAAC0e,OAAL,KAAiBla,YAAY,CAAC2Z,QAAQ,EAAT,CAD3C,CADR,EAGE;AACE,UAAIne,IAAI,CAAC4F,EAAT,EAAa;AACTrM,QAAAA,OAAO,GAAG4kB,QAAQ,GAAGphB,QAAX,CAAoB+lB,cAApB,CAAmC9iB,IAAI,CAAC4F,EAAxC,CAAV;;AAEA,YAAIrM,OAAO,IAAIyG,IAAI,CAACqT,MAApB,EAA4B;AACxB,gBAAMjV,GAAG,GAAGwU,OAAO,CAACiB,iBAAR,CAA0Bva,OAA1B,EAAmCC,OAAnC,CAAZ;;AAEA,cAAI,CAAC6E,GAAD,IAAQA,GAAG,CAACjD,IAAJ,CAASmJ,GAAT,KAAiBtE,IAAI,CAACqT,MAAlC,EAA0C;AACtC,mBAAO,IAAP;AACH;AACJ;AACJ,OAVD,MAUO,IAAIrT,IAAI,CAACsE,GAAT,EAAc;AACjB,cAAMpE,GAAG,GAAGhC,kBAAkB,CAACigB,QAAD,CAAlB,CAA6B7f,YAA7B,CAA0C0B,IAAI,CAACsE,GAA/C,CAAZ;AACA/K,QAAAA,OAAO,GAAG2G,GAAG,IAAIA,GAAG,CAACI,GAAJ,EAAjB;AACH,OAHM,MAGA,IAAIN,IAAI,CAAC+hB,YAAT,EAAuB;AAC1B;AACAxoB,QAAAA,OAAO,GAAGD,OAAO,CAACgC,eAAR,CAAyBuK,UAAzB,CACN7F,IAAI,CAAC+hB,YADC,EAEN/hB,IAAI,CAAC+iB,aAFC,CAAV;AAIH;AACJ;;AAED,WAAOxpB,OAAO,IAAI,IAAlB;AACH;;AAEoB,SAAdypB,cAAc,CACjB1pB,OADiB,EAEjBC,OAFiB,EAGjB4kB,QAHiB,EAIjBle,OAJiB,EAKjB6hB,QALiB;AAOjB,UAAMrmB,OAAO,GAAG2b,UAAU,CAACC,UAAX,CAAsB/d,OAAtB,EAA+BC,OAA/B,CAAhB;AACA,UAAM6E,GAAG,GAAGwU,OAAO,CAACiB,iBAAR,CAA0Bva,OAA1B,EAAmCC,OAAnC,CAAZ;AACA,UAAMsB,gBAAgB,GAAGxB,mBAAmB,CAACC,OAAD,EAAUC,OAAV,CAA5C;AACA,UAAM+C,QAAQ,GAAGzB,gBAAgB,IAAIA,gBAAgB,CAACyB,QAAtD;AAEA,WAAO;AACHgI,MAAAA,GAAG,EAAED,aAAa,CAAC8Z,QAAD,EAAW5kB,OAAX,CADf;AAEHuoB,MAAAA,QAFG;AAGHlc,MAAAA,EAAE,EAAErM,OAAO,CAACqM,EAAR,IAAc/L,SAHf;AAIHuc,MAAAA,OAAO,EAAEhY,GAAG,GAAGA,GAAG,CAACjD,IAAJ,CAASmJ,GAAZ,GAAkBzK,SAJ3B;AAKH8jB,MAAAA,UAAU,EAAEliB,OAAO,GACbwnB,aAAa,CAAC9E,QAAD,EAAWle,OAAX,EAAoBxE,OAApB,CADA,GAEb5B,SAPH;AAQHkoB,MAAAA,YAAY,EAAEzlB,QAAQ,IAAIA,QAAQ,CAACmmB,KAArB,IAA8BnmB,QAAQ,CAACmmB,KAAT,CAAe,CAAf,CARzC;AASHT,MAAAA,eAAe,EAAE1lB,QAAQ,IAAIA,QAAQ,CAACoT;AATnC,KAAP;AAWH;;AAEwB,eAAZ6Q,YAAY,CACrBjnB,OADqB,EAErB0G,IAFqB,EAMrBme,QANqB,EAOrB2D,QAPqB,EAQrB7D,YARqB,EASrB2C,aATqB;AAWrB,UAAMjC,SAAS,GAAG3e,IAAI,CAAC2e,SAAvB;AACA,QAAIplB,OAAJ;AACA,QAAI2pB,OAAJ;;AAEA,QAAIvE,SAAS,KAAK9kB,SAAlB,EAA6B;AACzBN,MAAAA,OAAO,GAAGD,OAAO,CAACgY,cAAR,CAAuB6J,iBAAvB,EAAV;AACH,KAFD,MAEO,IAAIwD,SAAJ,EAAe;AAClBplB,MAAAA,OAAO,GACHmnB,qBAAqB,CAACC,WAAtB,CACIrnB,OADJ,EAEI6kB,QAFJ,EAGIQ,SAHJ,KAIK9kB,SALT;AAMH;;AAED,QAAI,CAACN,OAAD,IAAYolB,SAAhB,EAA2B;AACvB,YAAMlP,IAAI,GAAGkP,SAAS,CAACoD,YAAvB;AACA,YAAM1D,OAAO,GAAGre,IAAI,CAACqe,OAArB;AACA,YAAM0E,aAAa,GAAGpE,SAAS,CAACoE,aAAhC;;AAEA,UAAItT,IAAI,IAAI4O,OAAZ,EAAqB;AACjB,cAAM5jB,CAAC,GAGH,MAAM,KAAK4K,UAAU,CAAC8Y,QAAD,CAAf,EAA4BjI,OAAD;AACjC,cAAIiN,qBAAqB,GAAG,KAA5B;AACA,cAAIC,iBAAiB,GAAG,KAAxB;AACA,cAAIC,UAAU,GAAG,KAAjB;;AAGA/pB,UAAAA,OAAO,CACFgC,eADL,CACsBgoB,WADtB,CAEQ7T,IAFR,EAGQ4O,OAHR,EAIQ0E,aAJR,EAMKQ,MANL,CAMYxF,IANZ,CAMkB9N,KAAD;AACTkT,YAAAA,qBAAqB,GAAG,IAAxB;;AAEA,gBAAI,CAACE,UAAD,KAAgBpT,KAAK,IAAImT,iBAAzB,CAAJ,EAAiD;AAC7CC,cAAAA,UAAU,GAAG,IAAb;AACAnN,cAAAA,OAAO,CAAC;AAAE3c,gBAAAA,OAAO,EAAE0W;AAAX,eAAD,CAAP;AACH;AACJ,WAbL;AAeA2Q,UAAAA,aAAa,CAAC7C,IAAd,CAAoB9N,KAAD;AACfmT,YAAAA,iBAAiB,GAAG,IAApB;;AAEA,gBAAI,CAACC,UAAD,KAAgBpT,KAAK,IAAIkT,qBAAzB,CAAJ,EAAqD;AACjDE,cAAAA,UAAU,GAAG,IAAb;AACAnN,cAAAA,OAAO,CAAC;AAAEoM,gBAAAA,WAAW,EAAErS;AAAf,eAAD,CAAP;AACH;AACJ,WAPD;AAQH,SA7BS,CAHV;;AAkCA,YAAIxV,CAAC,CAAClB,OAAN,EAAe;AACXA,UAAAA,OAAO,GAAGkB,CAAC,CAAClB,OAAZ;AACH,SAFD,MAEO,IAAIkB,CAAC,CAAC6nB,WAAN,EAAmB;AACtBY,UAAAA,OAAO,GAAGzoB,CAAC,CAAC6nB,WAAZ;AACH;AACJ;AACJ;;AAED,WAAO/oB,OAAO,GACRmnB,qBAAqB,CAACsC,cAAtB,CACI1pB,OADJ,EAEIC,OAFJ,EAGI4kB,QAHJ,EAIIF,YAAY,CAAC7f,GAJjB,EAKI0jB,QALJ,CADQ,GAQRoB,OARN;AASH;;;;AAaL,MAAMpF,gCAAN,SAA+CI,sBAA/C;AAAA9gB,EAAAA;;AAII,aAAA,GAAO6f,2BAA2B,CAACK,qBAAnC;AA4BH;;AA1B4B,eAAZiD,YAAY,CACrBjnB,OADqB,EAErB0G,IAFqB,EAMrBme,QANqB,EAOrBO,OAPqB,EAQrBT,YARqB,EASrB2C,aATqB;AAWrB,UAAM4C,UAAU,GAAG,MAAM5C,aAAzB;AACA,UAAMxB,KAAK,GAAG,CAACoE,UAAD,IAAexjB,IAAI,CAAC2e,SAAlC;AACA,UAAMra,GAAG,GAAG8a,KAAK,IAAIA,KAAK,CAACzB,UAA3B;AACA,UAAMliB,OAAO,GAAG6I,GAAG,IAAI2Z,YAAY,CAAC7f,GAAb,CAAiBqlB,YAAjB,CAA8Bnf,GAA9B,CAAvB;AACA,UAAMyX,UAAU,GAAGziB,OAAO,CAACmC,OAA3B;;AAEA,QAAI2jB,KAAK,IAAI3jB,OAAT,IAAoBsgB,UAAxB,EAAoC;AAChC,YAAMoG,OAAO,GAAG/K,UAAU,CAAC6E,UAAX,CAAsBF,UAAtB,CAAhB;AACA,aAAOqD,KAAK,CAACxB,KAAN,GACDuE,OAAO,CAAClM,UAAR,CAAmBxa,OAAnB,CADC,GAED0mB,OAAO,CAACtM,cAAR,CAAuBpa,OAAvB,CAFN;AAGH;;AAED,WAAO,CAAC,CAAC+nB,UAAT;AACH;;;;AAGL,MAAME,eAAN,SAA8BxF,sBAA9B;AAAA9gB,EAAAA;;AACI,aAAA,GAAO6f,2BAA2B,CAACM,IAAnC;AASH;;AAPuB,SAAb+C,aAAa;AAChB,WAAO,KAAP;AACH;;AAEwB,eAAZC,YAAY;AACrB,WAAO,IAAP;AACH;;;;AAQL,MAAMoD,uBAAN;AAgBIvmB,EAAAA,YACI9D,SACA6kB,UACAle;AAhBI,sBAAA,GAA8B,EAA9B;AACA,sBAAA,GAGJ,EAHI;AAMA,yBAAA,GAAmB,KAAnB;AAER,gBAAA,GAAU,KAAV;;AA2RQ,mBAAA,GAAcxF,CAAD;AACjB,UAAIA,CAAC,CAACuF,IAAF,CAAOye,KAAP,KAAiB,KAAKmF,SAAtB,IAAmC,CAAC,KAAKne,QAA7C,EAAuD;AACnD;AACH;;;AAGD,YAAMzF,IAAI,GAA+CvF,CAAC,CAACuF,IAA3D;AACA,UAAI6jB,aAAJ;;AAEA,UACI,CAAC7jB,IAAD,IACA,EAAE6jB,aAAa,GAAG7jB,IAAI,CAACuf,WAAvB,CADA,IAEA,CAACvf,IAAI,CAACwf,IAFN,IAGA,CAACxf,IAAI,CAAC0f,SAHN,IAIA,CAAC1f,IAAI,CAACye,KAJN,IAKA,CAACze,IAAI,CAAC2f,MANV,EAOE;AACE;AACH;;AAED,UAAImE,WAAW,GAAG,KAAKlF,aAAL,CAAmB5e,IAAI,CAACye,KAAxB,CAAlB;;AAEA,UAAI,CAACqF,WAAD,IAAgBrpB,CAAC,CAAC0kB,IAAlB,IAA0Bnf,IAAI,CAACye,KAAL,KAAe,KAAKmF,SAAlD,EAA6D;AACzDE,QAAAA,WAAW,GAAG,KAAKlF,aAAL,CAAmB5e,IAAI,CAACye,KAAxB,IAAiC;AAAEU,UAAAA,IAAI,EAAE1kB,CAAC,CAAC0kB;AAAV,SAA/C;AACH;;AAED,UAAI2E,WAAJ,EAAiB;AACbA,QAAAA,WAAW,CAACnX,IAAZ,GAAmBxI,IAAI,CAACC,GAAL,EAAnB;AACH;;AAED,UAAIpE,IAAI,CAACyf,UAAT,EAAqB;AACjB,cAAMsE,CAAC,GAAG,KAAKrG,aAAL,CAAmBmG,aAAnB,CAAV;;AAEA,YAAIE,CAAC,IAAIA,CAAC,CAACxE,WAAP,IAAsBwE,CAAC,CAACxE,WAAF,CAAcC,IAAd,KAAuBxf,IAAI,CAACwf,IAAtD,EAA4D;AACxDuE,UAAAA,CAAC,CAACxE,WAAF,CAAcY,UAAd,CAAyBngB,IAAzB;AACH;AACJ,OAND,MAMO;AACH,cAAMgkB,WAAW,GAAG,KAAKC,oBAAL,CAA0BjkB,IAAI,CAACwf,IAA/B,CAApB;;AAEA,cAAMoB,aAAa,GAAG,KAAKsD,kBAAL,CAAwBlkB,IAAxB,CAAtB;;AAEA,YAAIgkB,WAAW,IAAIvpB,CAAC,CAAC0kB,IAArB,EAA2B;AACvB6E,UAAAA,WAAW,CAACzD,YAAZ,CACI,KAAK9a,QADT,EAEIzF,IAFJ,EAGI,KAAKmkB,MAHT,EAII,KAAKP,SAJT,EAKI,IALJ,EAMIhD,aANJ,EAOI,KAPJ,EAQE7C,IARF,CAQQlc,CAAD;AACH;AACA,kBAAMuiB,QAAQ,GACV;AACI7E,cAAAA,WAAW,EAAEvf,IAAI,CAACuf,WADtB;AAEIC,cAAAA,IAAI,EAAExf,IAAI,CAACwf,IAFf;AAGIC,cAAAA,UAAU,EAAE,IAHhB;AAIIC,cAAAA,SAAS,EAAEvb,IAAI,CAACC,GAAL,EAJf;AAKIqa,cAAAA,KAAK,EAAE,KAAKmF,SALhB;AAMIvF,cAAAA,OAAO,EAAEre,IAAI,CAACqe,OANlB;AAOIsB,cAAAA,MAAM,EAAE,EAPZ;AAQIpgB,cAAAA,MAAM,EACFS,IAAI,CAACT,MAAL,KAAgByd,WAAhB,GACMA,WADN,GAEMhd,IAAI,CAACye,KAXnB;AAYIoB,cAAAA,OAAO,EAAEhe;AAZb,aADJ;AAgBApH,YAAAA,CAAC,CAAC0kB,IAAF,CAAOiF,QAAP;AACH,WA3BD;AA4BH;AACJ;AACJ,KAxEO;;AA0EA,oBAAA,GAAc;AAClB,WAAKC,KAAL;AACH,KAFO;;AA0FA,0BAAA,GAAqB5pB,CAAD;AACxB,UAAIA,CAAC,CAAC6pB,MAAF,KAAa,KAAKH,MAAL,EAAjB,EAAgC;AAC5B;AACH;;;AAGD,YAAMhF,IAAI,GAAInf,IAAD;AACT,YAAIvF,CAAC,CAAC6pB,MAAF,IAAY7pB,CAAC,CAAC6pB,MAAF,CAASC,WAAzB,EAAsC;AAClC;AACC9pB,UAAAA,CAAC,CAAC6pB,MAAF,CAASC,WAAT,CAAkClqB,IAAI,CAACoW,SAAL,CAAezQ,IAAf,CAAlC,EAAwD,GAAxD;AACJ;AACJ,OALD;;AAOA,UAAI;AACA,aAAKwkB,UAAL,CAAgB;AACZxkB,UAAAA,IAAI,EAAE3F,IAAI,CAACC,KAAL,CAAWG,CAAC,CAACuF,IAAb,CADM;AAEZmf,UAAAA;AAFY,SAAhB;AAIH,OALD,CAKE,OAAO1kB,CAAP,EAAU;AACR;AACH;AACJ,KArBO;;AAtbJ,SAAKgL,QAAL,GAAgBnM,OAAhB;AACA,SAAK6qB,MAAL,GAAchG,QAAd;AACA,SAAKyF,SAAL,GAAiBpf,YAAY,CAAC2Z,QAAQ,EAAT,CAA7B;AACA,SAAK/f,GAAL,GAAW6B,OAAX;AACH;;AAEDwkB,EAAAA,KAAK,CACDjG,MADC;AAGD,QAAI,KAAKkG,OAAT,EAAkB;AACd,UAAIhqB,sCAAJ,EAAa;AACTC,QAAAA,OAAO,CAACC,KAAR,CAAc,gCAAd;AACH;AACJ,KAJD,MAIO;AACH,WAAK8pB,OAAL,GAAe,IAAf;AAEA,WAAKC,SAAL,CAAenG,MAAf;;AAEA,WAAK2F,MAAL,GAAc/c,gBAAd,CAA+B,UAA/B,EAA2C,KAAKwd,WAAhD;;AAEA,WAAKC,KAAL;AACH;;AAED,WAAO,KAAKL,UAAZ;AACH;;AAEDG,EAAAA,SAAS,CACLnG,MADK;AAGL,QAAI,CAAC,KAAKkG,OAAV,EAAmB;AACf,YAAM,IAAInqB,KAAJ,CAAU,4BAAV,CAAN;AACH;;AAED,SAAKikB,MAAL,GAAcA,MAAM,IAAI3kB,SAAxB;;AAEA,UAAM4kB,KAAK,GAAG,KAAK0F,MAAL,EAAd;;AAEA,QAAI3F,MAAM,KAAK3kB,SAAf,EAA0B;AACtB,UAAI,CAAC,KAAKirB,gBAAV,EAA4B;AACxB,YAAIrG,KAAK,CAAC1hB,QAAV,EAAoB;AAChB,eAAK+nB,gBAAL,GAAwB,IAAxB;;AAEA,cACIrG,KAAK,CAAC9Z,MAAN,IACA8Z,KAAK,CAAC9Z,MAAN,KAAiB8Z,KADjB,IAEAA,KAAK,CAAC9Z,MAAN,CAAa4f,WAHjB,EAIE;AACE,iBAAK/F,MAAL,GAAc;AAEVxe,YAAAA,IAFU;AAIVye,cAAAA,KAAK,CAAC9Z,MAAN,CAAa4f,WAAb,CAAyBlqB,IAAI,CAACoW,SAAL,CAAezQ,IAAf,CAAzB,EAA+C,GAA/C;AACH,aALD;AAMH;;AAEDye,UAAAA,KAAK,CAACrX,gBAAN,CAAuB,SAAvB,EAAkC,KAAK2d,iBAAvC;AACH;AACJ;AACJ,KArBD,MAqBO,IAAI,KAAKD,gBAAT,EAA2B;AAC9BrG,MAAAA,KAAK,CAAC/W,mBAAN,CAA0B,SAA1B,EAAqC,KAAKqd,iBAA1C;AACA,WAAKD,gBAAL,GAAwB,KAAxB;AACH;;AAED,WAAO,KAAKN,UAAZ;AACH;;AAEY,QAAP9qB,OAAO;AACT,UAAM+kB,KAAK,GAAG,KAAK0F,MAAL,EAAd;;AAEA,QAAI,KAAKa,UAAT,EAAqB;AACjBvG,MAAAA,KAAK,CAACzf,YAAN,CAAmB,KAAKgmB,UAAxB;AACA,WAAKA,UAAL,GAAkBnrB,SAAlB;AACH;;AAED4kB,IAAAA,KAAK,CAAC/W,mBAAN,CAA0B,SAA1B,EAAqC,KAAKqd,iBAA1C;AACAtG,IAAAA,KAAK,CAAC/W,mBAAN,CAA0B,UAA1B,EAAsC,KAAKkd,WAA3C;AAEA,UAAM,KAAKP,KAAL,EAAN;AAEA,WAAO,KAAKY,YAAZ;;AAEA,SAAK,MAAMrf,EAAX,IAAiB3K,MAAM,CAACC,IAAP,CAAY,KAAKwiB,aAAjB,CAAjB,EAAkD;AAC9C,YAAMqG,CAAC,GAAG,KAAKrG,aAAL,CAAmB9X,EAAnB,CAAV;;AAEA,UAAIme,CAAC,CAACmB,KAAN,EAAa;AACTzG,QAAAA,KAAK,CAACzf,YAAN,CAAmB+kB,CAAC,CAACmB,KAArB;AACA,eAAOnB,CAAC,CAACmB,KAAT;AACH;;AAEDnB,MAAAA,CAAC,CAACxE,WAAF,CAAcQ,GAAd;AACH;;AAED,SAAKnB,aAAL,GAAqB,EAArB;AAEA,WAAO,KAAKJ,MAAZ;AACH;;AAEDX,EAAAA,gBAAgB,CACZmG,WADY,EAEZ/T,KAFY,EAGZoO,OAHY,EAIZC,MAJY,EAKZC,QALY,EAMZ4G,UANY;AAQZ,QAAI,CAAC,KAAKhB,MAAV,EAAkB;AACd,aAAO9e,UAAU,CAAC,KAAK8e,MAAN,CAAV,CAAwBpF,MAAxB,EAAP;AACH;;AAED,UAAMQ,WAAW,GAAG,IAAIyE,WAAJ,CAChB,KAAKve,QADW,EAEhB,KAAK0e,MAFW,EAGhB,KAAKvF,aAHW,EAIhB3O,KAJgB,EAKhBoO,OALgB,EAMhBC,MANgB,EAOhBC,QAPgB,EAQhB,KAAKC,MARW,CAApB;AAUA,QAAIa,YAAJ;;AAMA,QACI2E,WAAW,CAACvD,iBAAZ,IACAuD,WAAW,CAACvD,iBAAZ,CACI,KAAKhb,QADT,EAEIwK,KAFJ,EAGI,KAAKkU,MAHT,EAII,KAAKP,SAJT,CAFJ,EAQE;AACEvE,MAAAA,YAAY,GAAIrf,IAAD;AACX,eAAOgkB,WAAW,CAACzD,YAAZ,CACH,KAAK9a,QADF,EAEHzF,IAFG,EAGH,KAAKmkB,MAHF,EAIH,KAAKP,SAJF,EAKH,IALG,EAMHve,UAAU,CAAC,KAAK8e,MAAN,CAAV,CAAwBjO,OAAxB,CAAgCrc,SAAhC,CANG,EAOH,IAPG,CAAP;AASH,OAVD;AAWH;;AAED,WAAO,KAAKurB,iBAAL,CACH7F,WADG,EAEHlB,OAFG,EAGHgB,YAHG,EAIH8F,UAJG,CAAP;AAMH;;AAEDxC,EAAAA,YAAY,CAACre,GAAD;AACR,WAAO,KAAKsa,aAAL,CAAmBta,GAAnB,CAAP;AACH;;AAEO8gB,EAAAA,iBAAiB,CACrB7F,WADqB,EAErBlB,OAFqB,EAGrBgB,YAHqB,EAMrB8F,UANqB;AAQrB,UAAM1G,KAAK,GAAG,KAAK0F,MAAL,EAAd;;AAEA,UAAMjX,OAAO,GAAwC;AACjDqS,MAAAA,WADiD;AAEjD2F,MAAAA,KAAK,EAAEzG,KAAK,CAAC7d,UAAN,CAAiB;AACpB,eAAOsM,OAAO,CAACgY,KAAf;AACA3F,QAAAA,WAAW,CAACQ,GAAZ,CAAgB,qCAAhB;AACH,OAHM,EAGJjD,mBAAmB,IAAIuB,OAAO,IAAI,CAAf,CAHf;AAF0C,KAArD;AAQA,SAAKX,aAAL,CAAmB6B,WAAW,CAAC3Z,EAA/B,IAAqCsH,OAArC;AAEA,UAAMgD,GAAG,GAAGqP,WAAW,CAACH,KAAZ,CAAkBC,YAAlB,CAAZ;AAEAnP,IAAAA,GAAG,CAACmV,KAAJ,CAAU;AACN;AACH,KAFD,EAEGC,OAFH,CAEW;AACP,UAAIpY,OAAO,CAACgY,KAAZ,EAAmB;AACfzG,QAAAA,KAAK,CAACzf,YAAN,CAAmBkO,OAAO,CAACgY,KAA3B;AACH;;AACD,aAAO,KAAKxH,aAAL,CAAmB6B,WAAW,CAAC3Z,EAA/B,CAAP;AACH,KAPD;AASA,WAAOsK,GAAG,CAAC6N,IAAJ,CACF9N,KAAD,IAAWA,KADR,EAEHkV,UAAU,GAAGtrB,SAAH,GAAe,MAAMA,SAF5B,CAAP;AAIH;;AAEDqqB,EAAAA,kBAAkB;AAEdlkB,EAAAA,IAFc;AAAA;AAKd,UAAMye,KAAK,GAAG,KAAK0F,MAAnB;AACA,QAAI5F,QAAQ,GAAGve,IAAI,CAACT,MAApB;;AAEA,QAAIgf,QAAQ,KAAK,KAAKqF,SAAtB,EAAiC;AAC7B,aAAOve,UAAU,CAACoZ,KAAD,CAAV,CAAkBvI,OAAlB,EAAP;AACH;;AAED,UAAM8N,WAAW,GAAG,KAAKC,oBAAL,CAA0BjkB,IAAI,CAACwf,IAA/B,CAApB;;AAEA,QAAIwE,WAAJ,EAAiB;AACb,UACIA,WAAW,CAAC1D,aAAZ,KAA8BzmB,SAA9B,IACAmqB,WAAW,CAAC1D,aAAZ,CACI,KAAK7a,QADT,EAEIzF,IAFJ,EAGIye,KAHJ,EAII,KAAKmF,SAJT,CAFJ,EAQE;AACE,cAAMtF,MAAM,GAAGte,IAAI,CAAC2f,MAApB;;AAEA,YAAIpB,QAAQ,KAAKvB,WAAjB,EAA8B;AAC1BuB,UAAAA,QAAQ,GAAG1kB,SAAX;AACAykB,UAAAA,MAAM,CAAC,KAAKsF,SAAN,CAAN,GAAyB,IAAzB;AACH;;AAED,eAAOtF,MAAM,CAACtB,WAAD,CAAb;AAEA,eAAO,KAAKoI,iBAAL,CACH,IAAIpB,WAAJ,CACI,KAAKve,QADT,EAEIgZ,KAFJ,EAGI,KAAKG,aAHT,EAII5e,IAAI,CAAC2e,SAJT,EAKI3e,IAAI,CAACqe,OALT,EAMIC,MANJ,EAOIC,QAPJ,EAQI,KAAKC,MART,CADG,EAWHxe,IAAI,CAACqe,OAXF,CAAP;AAaH,OA/BD,MA+BO;AACH,eAAOhZ,UAAU,CAACoZ,KAAD,CAAV,CAAkBvI,OAAlB,EAAP;AACH;AACJ;;AAED,WAAO7Q,UAAU,CAACoZ,KAAD,CAAV,CAAkBM,MAAlB,6BACyB/e,IAAI,CAACwf,MAD9B,CAAP;AAGH;;AAEOyE,EAAAA,oBAAoB,CACxBzE,IADwB;AAAA;AAIxB,YAAQA,IAAR;AACI,WAAKvC,2BAA2B,CAACC,SAAjC;AACI,eAAOmD,oBAAP;;AACJ,WAAKpD,2BAA2B,CAACE,YAAjC;AACI,eAAOqD,uBAAP;;AACJ,WAAKvD,2BAA2B,CAACG,KAAjC;AACI,eAAOgE,gBAAP;;AACJ,WAAKnE,2BAA2B,CAACI,UAAjC;AACI,eAAOqD,qBAAP;;AACJ,WAAKzD,2BAA2B,CAACK,qBAAjC;AACI,eAAOQ,gCAAP;;AACJ,WAAKb,2BAA2B,CAACM,IAAjC;AACI,eAAOmG,eAAP;;AACJ;AACI,eAAO,IAAP;AAdR;AAgBH;;AAgFkB,QAALW,KAAK;AACf,QAAI,CAAC,KAAKY,YAAN,IAAsB,KAAK7mB,GAAL,CAAS6jB,UAAT,KAAwB,KAAK2B,SAAvD,EAAkE;AAC9D,WAAKqB,YAAL,GAAoB,KAAKpH,gBAAL,CAAsBuD,gBAAtB,EAAwC;AACxDU,QAAAA,QAAQ,EAAE,KAAK8B,SADyC;AAExDvC,QAAAA,KAAK,EAAER,iBAAiB,CAACI;AAF+B,OAAxC,CAApB;AAIH;;AAED,QAAI,KAAKgE,YAAT,EAAuB;AACnB,YAAM,KAAKA,YAAX;AACH;AACJ;;AAEkB,QAALJ,KAAK;AACf,QAAI,KAAKG,UAAT,EAAqB;AACjB;AACH;;AAED,QAAIO,WAAJ;AACA,UAAMnhB,GAAG,GAAGD,IAAI,CAACC,GAAL,EAAZ;AACA,UAAMkb,OAAO,GAAGrkB,MAAM,CAACC,IAAP,CAAY,KAAK0jB,aAAjB,EAAgCne,MAAhC,CACX6D,GAAD,IAASF,GAAG,IAAI,KAAKwa,aAAL,CAAmBta,GAAnB,EAAwBqI,IAAxB,IAAgC,CAApC,CAAH,GAA4CoQ,YADzC,CAAhB;;AAIA,QAAI,KAAKyB,MAAT,EAAiB;AACbc,MAAAA,OAAO,CAACnf,IAAR,CAAa6c,WAAb;AACH;;AAED,QAAIsC,OAAO,CAAC7iB,MAAZ,EAAoB;AAChB,YAAM4I,UAAU,CAAC,KAAK8e,MAAN,CAAV,CAAwBqB,GAAxB,CACFlG,OAAO,CAAC7U,GAAR,CAAanG,GAAD,IACR,KAAKuZ,gBAAL,CACI6F,eADJ,EAEI7pB,SAFJ,EAGIA,SAHJ,EAIIA,SAJJ,EAKIyK,GALJ,EAMI,IANJ,EAOEyZ,IAPF,CAQI,MAAM,IARV,EASI;AACI,YAAIzZ,GAAG,KAAK0Y,WAAZ,EAAyB;AACrB,cAAI,CAACuI,WAAL,EAAkB;AACdA,YAAAA,WAAW,GAAG,EAAd;AACH;;AACDA,UAAAA,WAAW,CAACjhB,GAAD,CAAX,GAAmB,IAAnB;AACA,iBAAO,KAAKsa,aAAL,CAAmBta,GAAnB,CAAP;AACH;;AACD,eAAO,KAAP;AACH,OAlBL,CADJ,CADE,CAAN;AAwBH;;AAED,QAAIihB,WAAJ,EAAiB;AACb,YAAME,OAAO,GAAG,MAAM,KAAK5H,gBAAL,CAClB6C,qBADkB,EAElB7mB,SAFkB,CAAtB;;AAKA,UACI,CAAC4rB,OAAD,IACA,KAAKrnB,GAAL,CAAS6jB,UADT,IAEA,KAAK7jB,GAAL,CAAS6jB,UAAT,IAAuBsD,WAH3B,EAIE;AACE,cAAM,KAAK1H,gBAAL,CAAsBuD,gBAAtB,EAAwC;AAC1CU,UAAAA,QAAQ,EAAE,KAAK8B,SAD2B;AAE1CvC,UAAAA,KAAK,EAAER,iBAAiB,CAACE,OAFiB;AAG1CvS,UAAAA,KAAK,EAAE;AAHmC,SAAxC,CAAN;AAMA,cAAMuN,UAAU,GAAG,KAAKtW,QAAL,CAAchK,OAAjC;;AAEA,YAAIsgB,UAAJ,EAAgB;AACZ3E,UAAAA,UAAU,CAAC8E,iBAAX,CAA6BH,UAA7B;AACH;AACJ;AACJ;;AAED,SAAKiJ,UAAL,GAAkB,KAAKb,MAAL,GAAcvjB,UAAd,CAAyB;AACvC,WAAKokB,UAAL,GAAkBnrB,SAAlB;;AACA,WAAKgrB,KAAL;AACH,KAHiB,EAGf9H,YAHe,CAAlB;AAIH;;;;MA0BQ8E;AASTzkB,EAAAA,YACI9D,SACAgL,KACAoa,SACA9Y,IACAyN,QACA0O,cACAC;AAEA,SAAKvc,QAAL,GAAgBnM,OAAhB;AACA,SAAKgL,GAAL,GAAWA,GAAX;AACA,SAAKoa,OAAL,GAAeA,OAAf;AACA,SAAK9Y,EAAL,GAAUA,EAAV;AACA,SAAKyN,MAAL,GAAcA,MAAd;AACA,SAAK0O,YAAL,GAAoBA,YAApB;AACA,SAAKC,eAAL,GAAuBA,eAAvB;AACH;;AAEDhM,EAAAA,KAAK,CACD0P,6BADC,EAEDC,iBAFC;AAID;AACA,WAAO,KAAKlgB,QAAL,CAAc6c,WAAd,CAA2BhR,cAA3B,CAA0C0E,KAA1C,CACH,IADG,EAEH0P,6BAFG,EAGHC,iBAHG,CAAP;AAKH;;;MAGQtD,uCACDlG;AAQR/e,EAAAA,YAAY6gB;AACR;AACA,SAAKP,aAAL,GAAqBO,YAArB;AACH;;AAEU,QAALjI,KAAK,CACPzc,OADO,EAEPmsB,6BAFO,EAGPC,iBAHO;AAKP,WAAO,KAAKC,MAAL,CACH;AACIthB,MAAAA,GAAG,EAAE/K,OAAO,CAAC+K,GADjB;AAEIsB,MAAAA,EAAE,EAAErM,OAAO,CAACqM,EAFhB;AAGIyN,MAAAA,MAAM,EAAE9Z,OAAO,CAAC8Z,MAHpB;AAIIqL,MAAAA,OAAO,EAAEnlB,OAAO,CAACmlB,OAJrB;AAKIqD,MAAAA,YAAY,EAAExoB,OAAO,CAACwoB;AAL1B,KADG,EAQH2D,6BARG,EASHC,iBATG,CAAP;AAWH;;AAEc,QAATE,SAAS,CACX5N,SADW,EAEX5E,MAFW,EAGXqS,6BAHW,EAIXC,iBAJW;AAMX,WAAO,KAAKC,MAAL,CACH;AAAEhgB,MAAAA,EAAE,EAAEqS,SAAN;AAAiB5E,MAAAA;AAAjB,KADG,EAEHqS,6BAFG,EAGHC,iBAHG,CAAP;AAKH;;AAEwB,QAAnBG,mBAAmB,CACrB/D,YADqB,EAErB1D,OAFqB,EAGrBhL,MAHqB,EAIrBqS,6BAJqB,EAKrBC,iBALqB;AAOrB,WAAO,KAAKC,MAAL,CACH;AAAE7D,MAAAA,YAAF;AAAgB1O,MAAAA;AAAhB,KADG,EAEHqS,6BAFG,EAGHC,iBAHG,EAIHtH,OAJG,CAAP;AAMH;;AAEmB,QAANuH,MAAM,CAChBG,WADgB,EAEhBL,6BAFgB,EAGhBC,iBAHgB,EAIhBtH,OAJgB;AAMhB,WAAO,KAAKX,aAAL,CACFG,gBADE,CAEC2C,uBAFD,EAGC,EACI,GAAGuF,WADP;AAEIL,MAAAA,6BAFJ;AAGIC,MAAAA;AAHJ,KAHD,EAQCtH,OARD,EAUFN,IAVE,CAUI9N,KAAD,IAAW,CAAC,CAACA,KAVhB,CAAP;AAWH;;AAEY,SAANwM,MAAM,CACTvO,QADS,EAETwO,GAFS,EAGThN,OAHS;AAKRxB,IAAAA,QAA2C,CAACuO,MAA5C,CAAmDC,GAAnD,EAAwDhN,OAAxD;AACJ;;;MAGQ8S,wCACDrG;AAOR/e,EAAAA,YACI9D,SACA2kB;AAEA;AANI,4BAAA,GAAsB,CAAtB;AAOJ,SAAKxY,QAAL,GAAgBnM,OAAhB;AACA,SAAKokB,aAAL,GAAqBO,YAArB;AACH;;AAEe,QAAVpY,UAAU,CACZkc,YADY,EAEZgB,aAFY;AAIZ,WAAO,KAAKO,WAAL,CAAiBvB,YAAjB,EAA+B,CAA/B,EAAkCgB,aAAlC,CAAP;AACH;;AAEgB,QAAXO,WAAW,CACbvB,YADa,EAEb1D,OAFa,EAGb0E,aAHa;AAKb,WAAO,KAAKrF,aAAL,CACFG,gBADE,CAEC6C,qBAFD,EAGC;AACIqB,MAAAA,YADJ;AAEIgB,MAAAA;AAFJ,KAHD,EAOC1E,OAPD,EASFN,IATE,CASI9N,KAAD,IACFA,KAAK,GACCmR,gBAAgB,CAACpkB,aAAjB,CAA+B,KAAKyI,QAApC,EAA8CwK,KAA9C,CADD,GAEC,IAZP,CAAP;AAcH;;AAEiB,QAAZ+V,YAAY,CACdjE,YADc,EAEd1D,OAFc;AAId,UAAM4H,SAAS,GAAG,EAAE,KAAKC,mBAAzB;AACA,WAAO,KAAK5C,WAAL,CACHvB,YADG,EAEH1D,OAFG,EAGHtkB,6BAAA,CAAoCtC,SAHjC,EAILsmB,IAJK,CAICxkB,OAAD,IACH,KAAK2sB,mBAAL,KAA6BD,SAA7B,IAA0C1sB,OAA1C;AAEM,SAAKkM,QAAL,CAAc6c,WAAd,CAA2BhR,cAA3B,CAA0C0E,KAA1C,CAAgDzc,OAAhD,EAAyD,IAAzD,CAFN,GAGM,KARH,CAAP;AAUH;;AAEa,SAAPsjB,OAAO,CACV3O,QADU,EAEV3U,OAFU,EAGVmW,OAHU;AAKTxB,IAAAA,QAA4C,CAAC2O,OAA7C,CAAqDtjB,OAArD,EAA8DmW,OAA9D;AACJ;;;MAGQyW;AAUT/oB,EAAAA,YAAY9D;AAqCJ,cAAA,GAAQ;AACZ,YAAMA,OAAO,GAAG,KAAKmM,QAArB;AAEAnM,MAAAA,OAAO,CAAC8X,kBAAR,CAA2BuJ,SAA3B,CACI,KAAKyL,iCADT;AAGA9sB,MAAAA,OAAO,CAACgY,cAAR,CAAuBqJ,SAAvB,CAAiC,KAAKnO,QAAtC;;AAEAlT,MAAAA,OAAO,CAACgC,eAAR,CAAyBqf,SAAzB,CAAmC,KAAK0L,WAAxC;;AAEA,UAAI,CAAC,KAAKC,IAAL,CAAUzD,gBAAf,EAAiC;AAC7B;AACA,aAAKyD,IAAL,CAAUzD,gBAAV,GAA6BvpB,OAAO,CAACkD,OAAR,CAAiBioB,KAA9C,CAF6B;;AAI7BnrB,QAAAA,OAAO,CAACkD,OAAR,CAAiBioB,KAAjB,GAAyB,KAAK8B,aAA9B;AACH;;AAED,WAAK7I,aAAL,CACKG,gBADL,CAEQwC,oBAFR,EAGQxmB,SAHR,EAIQA,SAJR,EAKQA,SALR,EAMQmjB,WANR,EAQKe,IARL,CAQW/d,IAAD;AACF,YACIA,IAAI,IACJ,KAAKyF,QAAL,CAAc2L,kBAAd,CAAiCgJ,wBAAjC,OACIpa,IAAI,CAACoa,wBAHb,EAIE;AACE,eAAKkM,IAAL,CAAU1D,mCAAV,GAAgD,IAAhD;;AACA,eAAKnd,QAAL,CAAc2L,kBAAd,CAAiCC,yBAAjC,CACIrR,IAAI,CAACoa,wBADT;;AAGA,eAAKkM,IAAL,CAAU1D,mCAAV,GAAgD,KAAhD;AACH;AACJ,OApBL;AAqBH,KAtCO;;AAwDA,0CAAA,GAAqC3S,KAAD;AACxC,UAAI,CAAC,KAAKqW,IAAL,CAAU1D,mCAAf,EAAoD;AAChD,aAAKlF,aAAL,CAAmBG,gBAAnB,CAAoCuD,gBAApC,EAAsD;AAClDC,UAAAA,KAAK,EAAER,iBAAiB,CAACK,kBADyB;AAElDY,UAAAA,QAAQ,EAAEtd,YAAY,CAAC,KAAK0G,IAAL,EAAD,CAF4B;AAGlDkP,UAAAA,wBAAwB,EAAEnK;AAHwB,SAAtD;AAKH;AACJ,KARO;;AAUA,iBAAA,GAAY1W,OAAD;AACf,YAAM4E,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AAEA,YAAM4W,QAAQ,GAAGtd,YAAY,CAACrG,GAAD,CAA7B;;AAEA,UAAI,KAAKqoB,UAAT,EAAqB;AACjBroB,QAAAA,GAAG,CAACa,YAAJ,CAAiB,KAAKwnB,UAAtB;AACA,aAAKA,UAAL,GAAkB3sB,SAAlB;AACH;;AAED,UAAIN,OAAJ,EAAa;AACT,aAAKmkB,aAAL,CAAmBG,gBAAnB,CAAoCuD,gBAApC,EAAsD,EAClD,GAAGV,qBAAqB,CAACsC,cAAtB,CACC,KAAKvd,QADN,EAEClM,OAFD,EAGC,KAAK2R,IAHN,EAIC,KAAKob,IAJN,EAKCxE,QALD,CAD+C;AAQlDT,UAAAA,KAAK,EAAER,iBAAiB,CAACC;AARyB,SAAtD;AAUH,OAXD,MAWO;AACH,aAAK0F,UAAL,GAAkBroB,GAAG,CAACyC,UAAJ,CAAe;AAC7B,eAAK4lB,UAAL,GAAkB3sB,SAAlB;;AAEA,cAAI,KAAKysB,IAAL,CAAUrE,UAAV,IAAwB,KAAKqE,IAAL,CAAUrE,UAAV,KAAyBH,QAArD,EAA+D;AAC3D,iBAAKpE,aAAL,CACKG,gBADL,CACsB6C,qBADtB,EAC6C7mB,SAD7C,EAEKkkB,IAFL,CAEW9N,KAAD;AACF,kBAAI,CAACA,KAAD,IAAU,KAAKqW,IAAL,CAAUrE,UAAV,KAAyBH,QAAvC,EAAiD;AAC7C,qBAAKpE,aAAL,CAAmBG,gBAAnB,CACIuD,gBADJ,EAEI;AACIU,kBAAAA,QADJ;AAEIT,kBAAAA,KAAK,EAAER,iBAAiB,CAACE,OAF7B;AAGIvS,kBAAAA,KAAK,EAAE;AAHX,iBAFJ;AAQH;AACJ,aAbL;AAcH;AACJ,SAnBiB,EAmBf,CAnBe,CAAlB;AAoBH;AACJ,KA3CO;;AA6CA,oBAAA,GAAc,CAClBjV,OADkB,EAElBmW,OAFkB;;;AAIlB,YAAMiH,CAAC,GAAG+J,qBAAqB,CAACsC,cAAtB,CACN,KAAKvd,QADC,EAENlM,OAFM,EAGN,KAAK2R,IAHC,EAIN,KAAKob,IAJC,EAKN9hB,YAAY,CAAC,KAAK0G,IAAL,EAAD,CALN,CAAV;AAQAyL,MAAAA,CAAC,CAAC0K,KAAF,GAAUR,iBAAiB,CAACG,QAA5B;AACArK,MAAAA,CAAC,CAACoL,YAAF,GAAiB,MAAArS,OAAO,CAAC+S,KAAR,UAAA,iBAAA,SAAA,MAAgB,EAAjC;AACA9L,MAAAA,CAAC,CAACqL,eAAF,GAAoBtS,OAAO,CAACA,OAA5B;;AAEA,WAAKgO,aAAL,CAAmBG,gBAAnB,CAAoCuD,gBAApC,EAAsDzK,CAAtD;AACH,KAjBO;;AAmBA,sBAAA,GAAiBnR,KAAD;AACpB,WAAKkY,aAAL,CAAmBG,gBAAnB,CAAoCuD,gBAApC,EAAsD;AAClDC,QAAAA,KAAK,EAAER,iBAAiB,CAACM,OADyB;AAElDW,QAAAA,QAAQ,EAAEtd,YAAY,CAAC,KAAK0G,IAAL,EAAD,CAF4B;AAGlD1O,QAAAA,OAAO,EAAEgJ;AAHyC,OAAtD;AAKH,KANO;;AAtKJ,SAAKC,QAAL,GAAgBnM,OAAhB;AACA,SAAK4R,IAAL,GAAY5R,OAAO,CAACqD,SAApB;AACA,SAAK2pB,IAAL,GAAY;AACR1D,MAAAA,mCAAmC,EAAE,KAD7B;AAERa,MAAAA,YAAY,EAAE;AAFN,KAAZ;AAKA,SAAK/F,aAAL,GAAqB,IAAIiG,uBAAJ,CACjBrqB,OADiB,EAEjB,KAAK4R,IAFY,EAGjB,KAAKob,IAHY,CAArB;AAKA,SAAKhV,cAAL,GAAsB,IAAI+Q,8BAAJ,CAClB,KAAK3E,aADa,CAAtB;AAGA,SAAKpiB,eAAL,GAAuB,IAAIknB,+BAAJ,CACnBlpB,OADmB,EAEnB,KAAKokB,aAFc,CAAvB;AAIH;;AAED+G,EAAAA,KAAK,CACDjG,MADC;AAGD,QAAI,KAAKkG,OAAL,EAAJ,EAAoB;AAChB,aAAO,KAAKhH,aAAL,CAAmBiH,SAAnB,CAA6BnG,MAA7B,CAAP;AACH,KAFD,MAEO;AACH,WAAK/Y,QAAL,CAAc0N,SAAd,CAAwB,KAAKsT,KAA7B;;AACA,aAAO,KAAK/I,aAAL,CAAmB+G,KAAnB,CAAyBjG,MAAzB,CAAP;AACH;AACJ;;AAEDkG,EAAAA,OAAO;AACH,WAAO,KAAKhH,aAAL,CAAmBgH,OAA1B;AACH;;AA0CDhrB,EAAAA,OAAO;;;AACH,UAAMJ,OAAO,GAAG,KAAKmM,QAArB;AAEAnM,IAAAA,OAAO,CAAC8X,kBAAR,CAA2B4J,WAA3B,CACI,KAAKoL,iCADT;AAGA9sB,IAAAA,OAAO,CAACgY,cAAR,CAAuB0J,WAAvB,CAAmC,KAAKxO,QAAxC;AACA,UAAAlT,OAAO,CAACgC,eAAR,UAAA,iBAAA,SAAA,MAAyB0f,YAAY,KAAKqL,YAA1C;;AAEA,SAAK3I,aAAL,CAAmBhkB,OAAnB;;AACA,SAAK4X,cAAL,CAAoB5X,OAApB;AACA,SAAK4B,eAAL,CAAqB5B,OAArB;AAEA,SAAK4sB,IAAL,CAAU7C,YAAV,GAAyB,EAAzB;AACH;;;;AAqFL,SAASR,aAAT,CACItmB,SADJ,EAEIsD,OAFJ,EAGIxE,OAHJ;AAKI,QAAMirB,cAAc,GAAGjrB,OAAO,CAACoK,UAAR,EAAvB;;AAEA,MAAI6gB,cAAJ,EAAoB;AAChB,UAAMpiB,GAAG,GAAGD,aAAa,CAAC1H,SAAD,EAAY+pB,cAAZ,CAAzB;;AAEA,QAAI,CAACzmB,OAAO,CAACwjB,YAAR,CAAqBnf,GAArB,CAAL,EAAgC;AAC5BrE,MAAAA,OAAO,CAACwjB,YAAR,CAAqBnf,GAArB,IAA4B7I,OAA5B;AACH;;AAED,WAAO6I,GAAP;AACH;;AAED,SAAOzK,SAAP;AACH;;AC/yDD;;;;MAgBa8sB;AAGTvpB,EAAAA,YAAY9D;AACR,SAAKmM,QAAL,GAAgBnM,OAAhB;AACH;;AAEDI,EAAAA,OAAO;AACH;AACH;;AAEDoM,EAAAA,QAAQ,CAACvM,OAAD;AACJ,UAAMsB,gBAAgB,GAAGxB,mBAAmB,CAAC,KAAKoM,QAAN,EAAgBlM,OAAhB,CAA5C;AACA,WAAQsB,gBAAgB,IAAIA,gBAAgB,CAACoB,SAAtC,IAAoD,EAA3D;AACH;;AAED4N,EAAAA,WAAW,CACP5G,EADO,EAEP2jB,gCAFO,EAGPC,cAHO,EAIPlB,iBAJO;AAMP,QACI5gB,eAAe,CAAC9B,EAAD,EAAKlJ,iBAAL,CAAf,KACC6sB,gCAAgC,IAAI3jB,EAAE,CAACyD,QAAH,KAAgB,CAAC,CADtD,CADJ,EAGE;AACE,aACI,CAACmgB,cAAc,IAAI,KAAKtN,SAAL,CAAetW,EAAf,CAAnB,MACC0iB,iBAAiB,IAAI,KAAKmB,YAAL,CAAkB7jB,EAAlB,CADtB,CADJ;AAIH;;AAED,WAAO,KAAP;AACH;;AAEDsW,EAAAA,SAAS,CAACtW,EAAD;AACL,QAAI,CAACA,EAAE,CAACnD,aAAJ,IAAqBmD,EAAE,CAAChC,QAAH,KAAgBC,IAAI,CAACC,YAA9C,EAA4D;AACxD,aAAO,KAAP;AACH;;AAED,QAAI8B,EAAE,CAAC6Y,YAAH,KAAoB,IAApB,IAA4B7Y,EAAE,CAACnD,aAAH,CAAiBgF,IAAjB,KAA0B7B,EAA1D,EAA8D;AAC1D,aAAO,KAAP;AACH;;AAED,UAAM9E,GAAG,GAAG8E,EAAE,CAACnD,aAAH,CAAiBinB,WAA7B;;AAEA,QAAI,CAAC5oB,GAAL,EAAU;AACN,aAAO,KAAP;AACH;;AAED,UAAMqD,IAAI,GAAGyB,EAAE,CAACnD,aAAH,CAAiBgF,IAAjB,CAAsBhD,qBAAtB,EAAb;;AAEA,QAAIN,IAAI,CAACjE,KAAL,KAAe,CAAf,IAAoBiE,IAAI,CAAChE,MAAL,KAAgB,CAAxC,EAA2C;AACvC;AACA,aAAO,KAAP;AACH;;AAED,UAAMwpB,aAAa,GAAG7oB,GAAG,CAAC6P,gBAAJ,CAAqB/K,EAArB,CAAtB;;AAEA,QAAI+jB,aAAa,CAACC,UAAd,KAA6B,QAAjC,EAA2C;AACvC,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH;;AAEDH,EAAAA,YAAY,CAAC7jB,EAAD;;;AACR,SAAK,IAAIxI,CAAC,GAAuBwI,EAAjC,EAAqCxI,CAArC,EAAwCA,CAAC,GAAGA,CAAC,CAACyI,aAA9C,EAA6D;AACzD,YAAMrI,gBAAgB,GAAGxB,mBAAmB,CAAC,KAAKoM,QAAN,EAAgBhL,CAAhB,CAA5C;;AAEA,UAAI,KAAKysB,SAAL,CAAezsB,CAAf,CAAJ,EAAuB;AACnB,eAAO,KAAP;AACH;;AAED,YAAM0sB,cAAc,GAChB,MAAAtsB,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,SAAA,GAAAA,gBAAgB,CAAEoB,SAAlB,UAAA,iBAAA,SAAA,MAA6BmrB,kBADjC;;AAGA,UAAI,CAACD,cAAD,IAAmB,KAAKE,WAAL,CAAiB5sB,CAAjB,CAAvB,EAA4C;AACxC,eAAO,KAAP;AACH;AACJ;;AAED,WAAO,IAAP;AACH;;AAEO4sB,EAAAA,WAAW,CAACpkB,EAAD;AACf,WAAOA,EAAE,CAACqkB,YAAH,CAAgB,UAAhB,CAAP;AACH;;AAEOJ,EAAAA,SAAS,CAACjkB,EAAD;;;AACb,UAAMskB,OAAO,GAAGtkB,EAAE,CAACnJ,YAAH,CAAgB,aAAhB,CAAhB;;AAEA,QAAIytB,OAAO,IAAIA,OAAO,CAAC/S,WAAR,OAA0B,MAAzC,EAAiD;AAC7C,UAAI,EAAC,MAAA,KAAK/O,QAAL,CAAc5J,SAAd,UAAA,iBAAA,SAAA,MAAyB2rB,YAAYvkB,GAAtC,CAAJ,EAA+C;AAC3C,eAAO,IAAP;AACH;AACJ;;AAED,WAAO,KAAP;AACH;;AAEDoX,EAAAA,SAAS,CACLvG,OADK,EAEL2T,GAFK;AAIL,WAAO,KAAK9G,WAAL,CACH,EACI,GAAG7M;AADP,KADG,EAIH2T,GAJG,CAAP;AAMH;;AAEDC,EAAAA,QAAQ,CACJ5T,OADI,EAEJ2T,GAFI;AAIJ,WAAO,KAAK9G,WAAL,CACH;AACInX,MAAAA,UAAU,EAAE,IADhB;AAEI,SAAGsK;AAFP,KADG,EAKH2T,GALG,CAAP;AAOH;;AAEDE,EAAAA,QAAQ,CACJ7T,OADI,EAEJ2T,GAFI;AAIJ,WAAO,KAAK9G,WAAL,CAAiB,EAAE,GAAG7M;AAAL,KAAjB,EAAiC2T,GAAjC,CAAP;AACH;;AAEDG,EAAAA,QAAQ,CACJ9T,OADI,EAEJ2T,GAFI;AAIJ,WAAO,KAAK9G,WAAL,CAAiB,EAAE,GAAG7M,OAAL;AAActK,MAAAA,UAAU,EAAE;AAA1B,KAAjB,EAAmDie,GAAnD,CAAP;AACH;;AAEDhO,EAAAA,WAAW,CACP3F,OADO,EAEP2T,GAFO;AAIP,WACI,KAAK9G,WAAL,CACI,EACI,GAAG7M,OADP;AAEI+T,MAAAA,eAAe,EAAG5kB,EAAD,IACb,KAAK4G,WAAL,CACI5G,EADJ,EAEI6Q,OAAO,CAAC8S,gCAFZ,KAGK,CAAC,CAAC,KAAK9gB,QAAL,CAAc7C,EAAd,EAAkB6kB;AANjC,KADJ,EASIL,GATJ,KAUK,IAXT;AAaH;;AAEDM,EAAAA,OAAO,CAACjU,OAAD;AACH,WAAO,KAAKkU,aAAL,CAAmB,IAAnB,EAAyBlU,OAAzB,KAAqC,EAA5C;AACH;;AAED6M,EAAAA,WAAW,CACP7M,OADO,EAEP2T,GAFO;AAIP,UAAMQ,KAAK,GAAG,KAAKD,aAAL,CAAmB,KAAnB,EAA0BlU,OAA1B,EAAmC2T,GAAnC,CAAd;;AACA,WAAOQ,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAR,GAAcA,KAA1B;AACH;;AAEOD,EAAAA,aAAa,CACjBD,OADiB,EAEjBjU,OAFiB,EAGjB2T,GAHiB;;;AAKjB,UAAM;AACFnlB,MAAAA,SADE;AAEF4lB,MAAAA,cAAc,GAAG,IAFf;AAGFtB,MAAAA,gCAHE;AAIFtM,MAAAA,kBAJE;AAKF9I,MAAAA,mBALE;AAMF2W,MAAAA,WANE;AAOF3e,MAAAA,UAPE;AAQF4e,MAAAA;AARE,QASFtU,OATJ;;AAWA,QAAI,CAAC2T,GAAL,EAAU;AACNA,MAAAA,GAAG,GAAG,EAAN;AACH;;AAED,UAAMY,QAAQ,GAAkB,EAAhC;AAEA,QAAI;AAAER,MAAAA;AAAF,QAAsB/T,OAA1B;AACA,UAAMwU,kBAAkB,GAAG,CAAC,CAACT,eAA7B;;AAEA,QAAI,CAACvlB,SAAL,EAAgB;AACZ,aAAO,IAAP;AACH;;AAED,QAAI,CAACulB,eAAL,EAAsB;AAClBA,MAAAA,eAAe,GAAI5kB,EAAD,IACd,KAAK4G,WAAL,CACI5G,EADJ,EAEI2jB,gCAFJ,EAGI,KAHJ,EAIIpV,mBAJJ,CADJ;AAOH;;AAED,UAAM+W,kBAAkB,GAAsC;AAC1DjmB,MAAAA,SAD0D;AAE1DkmB,MAAAA,eAAe,EACXL,WAAW,KAAKtuB,SAAhB,IAA6BygB,kBAA7B,GACM,MAAA,KAAK7U,QAAL,CAAc5J,SAAd,UAAA,iBAAA,SAAA,MAAyBmZ,QAD/B,GAEMmT,WAAW,KACX,MAAA,MAAAvV,OAAO,CAACiB,iBAAR,CAA0B,KAAKpO,QAA/B,EAAyCnD,SAAzC,CAAA,UAAA,iBAAA,SAAA,MACMzG,SADN,UAAA,iBAAA,SAAA,MACiBkZ,MAFN,CALqC;AAQ1DtH,MAAAA,IAAI,EAAEya,cAAc,IAAI5lB,SARkC;AAS1DkH,MAAAA,UAT0D;AAU1Dqe,MAAAA,eAV0D;AAW1DS,MAAAA,kBAX0D;AAY1D1B,MAAAA,gCAZ0D;AAa1DpV,MAAAA,mBAb0D;AAc1DiX,MAAAA,eAAe,EAAE;AAdyC,KAA9D;AAiBA,UAAMC,MAAM,GAAG5nB,uBAAuB,CAClCwB,SAAS,CAACxC,aADwB,EAElCwC,SAFkC,EAGjCqmB,IAAD,IACI,KAAKC,cAAL,CAAoBD,IAApB,EAAyCJ,kBAAzC,CAJ8B,CAAtC;;AAOA,QAAI,CAACG,MAAL,EAAa;AACT,aAAO,IAAP;AACH;;AAED,UAAMG,qBAAqB,GACvBC,wBAD0B;;;AAG1B,YAAMC,YAAY,GACd,MAAAR,kBAAkB,CAACQ,YAAnB,UAAA,iBAAA,KAAA,GACAR,kBAAkB,CAACS,aAFvB;;AAIA,UAAID,YAAJ,EAAkB;AACdV,QAAAA,QAAQ,CAACloB,IAAT,CAAc4oB,YAAd;AACH;;AAED,UAAIhB,OAAJ,EAAa;AACT,YAAIgB,YAAJ,EAAkB;AACdR,UAAAA,kBAAkB,CAACN,KAAnB,GAA2B,KAA3B;AACA,iBAAOM,kBAAkB,CAACQ,YAA1B;AACA,iBAAOR,kBAAkB,CAACS,aAA1B;AACA,iBAAOT,kBAAkB,CAACU,OAA1B;AACAV,UAAAA,kBAAkB,CAAC9a,IAAnB,GAA0Bsb,YAA1B;;AAEA,cAAIX,SAAS,IAAI,CAACA,SAAS,CAACW,YAAD,CAA3B,EAA2C;AACvC,mBAAO,KAAP;AACH;AACJ;;AAED,eAAO,CAAC,EAAEA,YAAY,IAAID,wBAAlB,CAAR;AACH,OAdD,MAcO;AACH,YAAIC,YAAY,IAAItB,GAApB,EAAyB;AACrBA,UAAAA,GAAG,CAAClrB,YAAJ,GAAmB,MAAAqW,OAAO,CAACiB,iBAAR,CACf,KAAKpO,QADU,EAEfsjB,YAFe,CAAA,UAAA,iBAAA,SAAA,MAGhBxsB,YAHH;AAIH;;AAED,eAAO,CAAC,EAAEusB,wBAAwB,IAAI,CAACC,YAA/B,CAAR;AACH;AACJ,KAnCD;;AAqCA,QAAI,CAACb,cAAL,EAAqB;AACjBT,MAAAA,GAAG,CAACyB,aAAJ,GAAoB,IAApB;AACH;;AAED,QAAIhB,cAAJ,EAAoB;AAChBQ,MAAAA,MAAM,CAACS,WAAP,GAAqBjB,cAArB;AACH,KAFD,MAEO,IAAI1e,UAAJ,EAAgB;AACnB,YAAM2F,SAAS,GAAGD,YAAY,CAAC5M,SAAD,CAA9B;;AAEA,UAAI,CAAC6M,SAAL,EAAgB;AACZ,eAAO,IAAP;AACH;;AAED,UACI,KAAKyZ,cAAL,CAAoBzZ,SAApB,EAA+BoZ,kBAA/B,MACIxqB,UAAU,CAACqrB,aADf,IAEA,CAACP,qBAAqB,CAAC,IAAD,CAH1B,EAIE;AACE,YAAIN,kBAAkB,CAACc,gBAAvB,EAAyC;AACrC5B,UAAAA,GAAG,CAACyB,aAAJ,GAAoB,IAApB;AACH;;AAED,eAAOb,QAAP;AACH;;AAEDK,MAAAA,MAAM,CAACS,WAAP,GAAqBha,SAArB;AACH;;AAED,OAAG;AACC,UAAI3F,UAAJ,EAAgB;AACZkf,QAAAA,MAAM,CAACY,YAAP;AACH,OAFD,MAEO;AACHZ,QAAAA,MAAM,CAACa,QAAP;AACH;AACJ,KAND,QAMSV,qBAAqB,EAN9B;;AAQA,QAAIN,kBAAkB,CAACc,gBAAvB,EAAyC;AACrC5B,MAAAA,GAAG,CAACyB,aAAJ,GAAoB,IAApB;AACH;;AAED,WAAOb,QAAQ,CAAC5rB,MAAT,GAAkB4rB,QAAlB,GAA6B,IAApC;AACH;;AAEOO,EAAAA,cAAc,CAClBrvB,OADkB,EAElB8nB,KAFkB;;;AAIlB,QAAIA,KAAK,CAAC4G,KAAV,EAAiB;AACb,aAAOlqB,UAAU,CAACqrB,aAAlB;AACH;;AAED,UAAMJ,aAAa,GAAG3H,KAAK,CAAC2H,aAA5B;;AAEA,QACIA,aAAa,KACZzvB,OAAO,KAAKyvB,aAAZ,IAA6B,CAACA,aAAa,CAACnkB,QAAd,CAAuBtL,OAAvB,CADlB,CADjB,EAGE;AACE8nB,MAAAA,KAAK,CAAC4G,KAAN,GAAc,IAAd;AACA5G,MAAAA,KAAK,CAAC0H,YAAN,GAAqBC,aAArB;AACA,aAAOjrB,UAAU,CAACqrB,aAAlB;AACH;;AAED,UAAM9mB,SAAS,GAAG+e,KAAK,CAAC/e,SAAxB;;AAEA,QAAI/I,OAAO,KAAK+I,SAAhB,EAA2B;AACvB,aAAOvE,UAAU,CAACyrB,WAAlB;AACH;;AAED,QAAI,CAAClnB,SAAS,CAACuC,QAAV,CAAmBtL,OAAnB,CAAL,EAAkC;AAC9B,aAAOwE,UAAU,CAAC0rB,aAAlB;AACH;;AAED,QACKlwB,OAAyC,CAACgO,uBAD/C,EAEE;AACE,aAAOxJ,UAAU,CAAC0rB,aAAlB;AACH;;AAED,QAAI,MAAApI,KAAK,CAACqI,kBAAN,UAAA,iBAAA,SAAA,MAA0B7kB,SAAStL,QAAvC,EAAiD;AAC7C,aAAOwE,UAAU,CAAC0rB,aAAlB;AACH;;AAED,UAAMrrB,GAAG,GAAIijB,KAAK,CAACsI,UAAN,GAAmB/W,OAAO,CAACiB,iBAAR,CAC5B,KAAKpO,QADuB,EAE5BlM,OAF4B,CAAhC;;AAMA,QAAI,CAAC6E,GAAL,EAAU;AACN,aAAOL,UAAU,CAACyrB,WAAlB;AACH;;AAED,QAAIjmB,iBAAiB,CAAChK,OAAD,CAArB,EAAgC;AAC5B,UAAI,KAAKsQ,WAAL,CAAiBtQ,OAAjB,EAA0BM,SAA1B,EAAqC,IAArC,EAA2C,IAA3C,CAAJ,EAAsD;AAClDwnB,QAAAA,KAAK,CAACgI,gBAAN,GAAyB,IAAzB;AACH;;AAED,aAAOtrB,UAAU,CAACyrB,WAAlB;AACH;AAGD;AACA;;;AACA,QACI,CAACnI,KAAK,CAACiH,kBAAP,KACC/uB,OAAO,CAACoQ,OAAR,KAAoB,QAApB,IAAgCpQ,OAAO,CAACoQ,OAAR,KAAoB,SADrD,CADJ,EAGE;AACE,UAAI,CAAA,MAAAvL,GAAG,CAACvC,SAAJ,UAAA,iBAAA,SAAA,MAAekZ,MAAf,OAA0B,MAAA,KAAKtP,QAAL,CAAc5J,SAAd,UAAA,iBAAA,SAAA,MAAyBmZ,QAAnD,CAAJ,EAAiE;AAC7DqM,QAAAA,KAAK,CAAC4G,KAAN,GAAc,IAAd;AACA5G,QAAAA,KAAK,CAACqI,kBAAN,GAA2BrI,KAAK,CAAC0H,YAAN,GAAqBxvB,OAAhD;AAEA,eAAOwE,UAAU,CAACqrB,aAAlB;AACH,OALD,MAKO;AACH,eAAOrrB,UAAU,CAAC0rB,aAAlB;AACH;AACJ;;AAED,QAAI,CAACpI,KAAK,CAAC7P,mBAAP,IAA8B,CAAC,KAAKsV,YAAL,CAAkBvtB,OAAlB,CAAnC,EAA+D;AAC3D,UAAI,KAAKsQ,WAAL,CAAiBtQ,OAAjB,EAA0B,KAA1B,EAAiC,IAAjC,EAAuC,IAAvC,CAAJ,EAAkD;AAC9C8nB,QAAAA,KAAK,CAACgI,gBAAN,GAAyB,IAAzB;AACH;;AAED,aAAOtrB,UAAU,CAAC0rB,aAAlB;AACH;;AAED,QAAIlG,MAAJ;AAEA,QAAI0F,OAAO,GAAG5H,KAAK,CAAC4H,OAApB;;AAEA,QAAI,CAACA,OAAL,EAAc;AACVA,MAAAA,OAAO,GAAG5H,KAAK,CAAC4H,OAAN,GAAgBrW,OAAO,CAACiB,iBAAR,CACtB,KAAKpO,QADiB,EAEtB4b,KAAK,CAAC5T,IAFgB,CAA1B;AAIH;;AAED,UAAMmc,SAAS,GAAGX,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE7sB,KAA3B;AACA,QAAIF,QAAQ,GAAGkC,GAAG,CAAClC,QAAnB;AACA,QAAIE,KAAK,GAAGgC,GAAG,CAAChC,KAAhB;AAEAmnB,IAAAA,MAAM,GAAG,MAAA,KAAK9d,QAAL,CAAc5J,SAAd,UAAA,iBAAA,SAAA,MAAyBguB,cAActwB,SAAS8nB,MAAzD;;AAEA,QAAIkC,MAAM,KAAK1pB,SAAf,EAA0B;AACtBwnB,MAAAA,KAAK,CAACgI,gBAAN,GAAyB,IAAzB;AACH;;AAED,QAAI9F,MAAM,KAAK1pB,SAAX,KAAyBqC,QAAQ,IAAIE,KAAZ,IAAqBwtB,SAA9C,CAAJ,EAA8D;AAC1D,YAAME,eAAe,GAAG5tB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,SAAA,GAAAA,QAAQ,CAAE2J,UAAV,EAAxB;AACA,YAAMkkB,gBAAgB,GAAGH,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAE/jB,UAAX,EAAzB;AACA,UAAImkB,YAAY,GAAG5tB,KAAK,SAAL,IAAAA,KAAK,WAAL,SAAA,GAAAA,KAAK,CAAEyJ,UAAP,EAAnB;;AAEA,UACImkB,YAAY,KACZD,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,SAAA,GAAAA,gBAAgB,CAAEllB,QAAlB,CAA2BmlB,YAA3B,CADY,CAAZ,IAEA1nB,SAAS,CAACuC,QAAV,CAAmBklB,gBAAnB,CAFA,KAGC,CAACD,eAAD,IACG,CAAC1tB,KADJ,IAEG2tB,gBAAgB,CAACllB,QAAjB,CAA0BilB,eAA1B,CALJ,CADJ,EAOE;AACE1tB,QAAAA,KAAK,GAAGwtB,SAAR;AACAI,QAAAA,YAAY,GAAGD,gBAAf;AACH;;AAED,UACID,eAAe,KACdA,eAAe,KAAKxnB,SAApB,IACG,CAACA,SAAS,CAACuC,QAAV,CAAmBilB,eAAnB,CAFU,CADnB,EAIE;AACE5tB,QAAAA,QAAQ,GAAGrC,SAAX;AACH;;AAED,UAAImwB,YAAY,IAAI,CAAC1nB,SAAS,CAACuC,QAAV,CAAmBmlB,YAAnB,CAArB,EAAuD;AACnD5tB,QAAAA,KAAK,GAAGvC,SAAR;AACH;;AAED,UAAIqC,QAAQ,IAAIE,KAAhB,EAAuB;AACnB,YACI4tB,YAAY,IACZF,eADA,IAEA,CAACA,eAAe,CAACjlB,QAAhB,CAAyBmlB,YAAzB,CAHL,EAIE;AACE5tB,UAAAA,KAAK,GAAGvC,SAAR;AACH,SAND,MAMO;AACHqC,UAAAA,QAAQ,GAAGrC,SAAX;AACH;AACJ;;AAED,UAAIqC,QAAJ,EAAc;AACVqnB,QAAAA,MAAM,GAAGrnB,QAAQ,CAAC2tB,aAAT,CAAuBtwB,OAAvB,EAAgC8nB,KAAhC,CAAT;AACH;;AAED,UAAIjlB,KAAJ,EAAW;AACPmnB,QAAAA,MAAM,GAAGnnB,KAAK,CAACytB,aAAN,CAAoBtwB,OAApB,EAA6B8nB,KAA7B,CAAT;AACH;AACJ;;AAED,QAAIkC,MAAM,KAAK1pB,SAAf,EAA0B;AACtB0pB,MAAAA,MAAM,GAAGlC,KAAK,CAACwG,eAAN,CAAsBtuB,OAAtB,IACHwE,UAAU,CAACqrB,aADR,GAEHrrB,UAAU,CAACyrB,WAFjB;;AAIA,UACIjG,MAAM,KAAKxlB,UAAU,CAACyrB,WAAtB,IACA,KAAK3f,WAAL,CAAiBtQ,OAAjB,EAA0B,KAA1B,EAAiC,IAAjC,EAAuC,IAAvC,CAFJ,EAGE;AACE8nB,QAAAA,KAAK,CAACgI,gBAAN,GAAyB,IAAzB;AACH;AACJ;;AAED,QAAI9F,MAAM,KAAKxlB,UAAU,CAACqrB,aAAtB,IAAuC,CAAC/H,KAAK,CAAC4G,KAAlD,EAAyD;AACrD,UAAI5G,KAAK,CAAC7X,UAAV,EAAsB;AAClB;AACA;AACA;AACA6X,QAAAA,KAAK,CAAC2H,aAAN,GAAsBzvB,OAAtB;AACAgqB,QAAAA,MAAM,GAAGxlB,UAAU,CAACyrB,WAApB;AACH,OAND,MAMO;AACHnI,QAAAA,KAAK,CAAC4G,KAAN,GAAc,IAAd;AACA5G,QAAAA,KAAK,CAAC0H,YAAN,GAAqBxvB,OAArB;AACH;AACJ;;AAED,WAAOgqB,MAAP;AACH;;;;AClgBL;;;;AAKO,MAAM0G,IAAI,GAab;AACAC,EAAAA,GAAG,EAAE,CADL;AAEAC,EAAAA,KAAK,EAAE,EAFP;AAGAC,EAAAA,GAAG,EAAE,EAHL;AAIAC,EAAAA,KAAK,EAAE,EAJP;AAKAC,EAAAA,MAAM,EAAE,EALR;AAMAC,EAAAA,QAAQ,EAAE,EANV;AAOAC,EAAAA,GAAG,EAAE,EAPL;AAQAC,EAAAA,IAAI,EAAE,EARN;AASAC,EAAAA,IAAI,EAAE,EATN;AAUAC,EAAAA,EAAE,EAAE,EAVJ;AAWAC,EAAAA,KAAK,EAAE,EAXP;AAYAC,EAAAA,IAAI,EAAE;AAZN,CAbG;;ACLP;;;;;AAqBA,SAASC,kCAAT,CACIxxB,OADJ,EAEIC,OAFJ;;;AAII,QAAM0Y,SAAS,GAAG3Y,OAAO,CAAC2Y,SAA1B;AACA,MAAIhP,EAAE,GAAuB1J,OAA7B;;AAEA,KAAG;AACC,UAAMwxB,qBAAqB,GAAG,MAAA1xB,mBAAmB,CAC7CC,OAD6C,EAE7C2J,EAF6C,CAAnB,UAAA,iBAAA,SAAA,MAG3B1G,YAHH;;AAKA,QACIwuB,qBAAqB,IACrBzxB,OAAO,CAACiD,YAAR,CAAqByuB,wBAArB,CACI/nB,EADJ,EAEI,CAAC,CAAC8nB,qBAAqB,CAACE,UAF5B,CAFJ,EAME;AACE,aAAOhoB,EAAP;AACH;;AAEDA,IAAAA,EAAE,GAAGgP,SAAS,CAAChP,EAAD,CAAd;AACH,GAjBD,QAiBSA,EAjBT;;AAmBA,SAAOpJ,SAAP;AACH;;MAEYqxB,4BACD/O;AAiBR/e,EAAAA,YAAY9D,SAA4BqD;AACpC;;AAOI,cAAA,GAAQ;AACZ,YAAMwB,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AACA,YAAMnK,GAAG,GAAG5C,GAAG,CAACpB,QAAhB;;AAGAgE,MAAAA,GAAG,CAACqG,gBAAJ,CAAqB+jB,eAArB,EAAsC,KAAKriB,UAA3C,EAAuD,IAAvD;AACA/H,MAAAA,GAAG,CAACqG,gBAAJ,CAAqB,UAArB,EAAiC,KAAK2B,WAAtC,EAAmD,IAAnD;AACA5K,MAAAA,GAAG,CAACiJ,gBAAJ,CAAqB,SAArB,EAAgC,KAAKgkB,UAArC,EAAiD,IAAjD;AAEA,YAAMxQ,aAAa,GAAG7Z,GAAG,CAAC6Z,aAA1B;;AAEA,UAAIA,aAAa,IAAIA,aAAa,KAAK7Z,GAAG,CAAC+D,IAA3C,EAAiD;AAC7C,aAAKumB,kBAAL,CAAwBzQ,aAAxB;AACH;;AAED,WAAKD,SAAL,CAAe,KAAK2Q,UAApB;AACH,KAhBO;;AA8QA,mBAAA,GAAc7wB,CAAD;AACjB,WAAK4wB,kBAAL,CACI5wB,CAAC,CAAC8E,MADN,EAEI9E,CAAC,CAACiV,OAAF,CAAUpJ,aAFd,EAGI7L,CAAC,CAACiV,OAAF,CAAU6S,yBAHd;AAKH,KANO;;AAQA,oBAAA,GAAe9nB,CAAD;AAClB,WAAK4wB,kBAAL,CACIxxB,SADJ,EAEIY,CAAC,CAAC6L,aAFN;AAIH,KALO;;;AA4HA,gCAAA,GAA2B/M,OAAD;AAEjC,KAFO;;AAIA,mBAAA,GAAckB,CAAD;AACjB,UAAIA,CAAC,CAAC8wB,OAAF,KAActB,IAAI,CAACC,GAAnB,IAA0BzvB,CAAC,CAAC+wB,OAAhC,EAAyC;AACrC;AACH;;AAED,YAAMtD,cAAc,GAAG,KAAKtL,MAAL,EAAvB;;AAEA,UACI,CAACsL,cAAD,IACA,CAACA,cAAc,CAACpoB,aADhB,IAEAooB,cAAc,CAACuD,eAAf,KAAmC,MAHvC,EAIE;AACE;AACH;;AAED,YAAMnyB,OAAO,GAAG,KAAKmM,QAArB;AACA,YAAM6M,UAAU,GAAGhZ,OAAO,CAACgZ,UAA3B;AACA,YAAMlU,GAAG,GAAGwU,OAAO,CAACiB,iBAAR,CAA0Bva,OAA1B,EAAmC4uB,cAAnC,CAAZ;;AAEA,UAAI,CAAC9pB,GAAD,IAAQA,GAAG,CAACkW,aAAJ,CAAkB7Z,CAAlB,CAAZ,EAAkC;AAC9B;AACH;;AAED,YAAM+O,UAAU,GAAG/O,CAAC,CAACixB,QAArB;AAEA,YAAMC,IAAI,GAAGT,mBAAmB,CAACU,gBAApB,CACTtyB,OADS,EAET8E,GAFS,EAGTvE,SAHS,EAITquB,cAJS,EAKTruB,SALS,EAMT2P,UANS,EAOT,IAPS,CAAb;AAUA,YAAMqiB,WAAW,GAAGF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,SAAA,GAAAA,IAAI,CAAEpyB,OAA1B;AACA,YAAMuyB,+BAA+B,GACjChB,kCAAkC,CAACxxB,OAAD,EAAU4uB,cAAV,CADtC;;AAGA,UAAI2D,WAAJ,EAAiB;AACb,cAAME,gBAAgB,GAAGJ,IAAI,CAACpvB,YAA9B;;AAEA,YACI6B,GAAG,CAAC7B,YAAJ,KACAwvB,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,SAAA,GAAAA,gBAAgB,CAAElnB,QAAlB,CAA2BqjB,cAA3B,CADA,CADJ,EAGE;AACE,cACK,CAACyD,IAAI,CAACzC,aAAN,IACG6C,gBAAgB,KAAK3tB,GAAG,CAAC7B,YAD7B,IAECuvB,+BAA+B,IAC5B,CAACA,+BAA+B,CAACjnB,QAAhC,CAAyCgnB,WAAzC,CAJT,EAKE;AACE;AACA;AACA;AACH,WAVH;AAaE;AACA;AACA;AACA;;;AACAtjB,UAAAA,iBAAiB,CAAC2B,yBAAlB,CACI5Q,OADJ,EAEI4uB,cAFJ,EAGI1e,UAHJ,EAIIqiB,WAJJ;AAOA;AACH;;AAED,YAAIE,gBAAgB,IAAIF,WAAW,CAACliB,OAAZ,KAAwB,QAAhD,EAA0D;AACtD;AACA;AACApB,UAAAA,iBAAiB,CAACe,oBAAlB,CACI,KAAK7D,QADT,EAEIsmB,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,GAAAA,gBAAA,GAAoBF,WAFxB,EAGI,KAHJ,EAIIriB,UAJJ;AAOA;AACH;;AAED,YAAI8I,UAAU,KAAIqZ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,SAAA,GAAAA,IAAI,CAAEzC,aAAV,CAAd,EAAuC;AACnCzuB,UAAAA,CAAC,CAACuxB,cAAF;AACAvxB,UAAAA,CAAC,CAACwxB,wBAAF;AAEA9lB,UAAAA,WAAW,CAAC0lB,WAAD,CAAX;AACH;AAIJ,OAvDD,MAuDO;AACH,YAAI,CAACC,+BAAL,EAAsC;AAClC1tB,UAAAA,GAAG,CAACjD,IAAJ,CAAS+N,wBAAT,CAAkCM,UAAlC;AACH;AACJ;AACJ,KAnGO;;AAqGR,mBAAA,GAAa,CACTjQ,OADS,EAETmW,OAFS;;;AAIT,UAAInW,OAAJ,EAAa;AACTiW,QAAAA,YAAY,CAACjW,OAAD,EAAUQ,gBAAV,EAAkC2V,OAAlC,CAAZ;AACH,OAFD,MAEO;AACH,cAAM/C,IAAI,GAAG,MAAA,KAAKuf,QAAL,UAAA,iBAAA,SAAA,MAAe5rB,KAA5B;;AAEA,YAAIqM,IAAJ,EAAU;AACN,gBAAMgK,CAAC,GAAG,EAAE,GAAGjH;AAAL,WAAV;AACA,gBAAMyc,OAAO,GAAGvZ,OAAO,CAACiB,iBAAR,CAA0B,KAAKpO,QAA/B,EAAyCkH,IAAzC,CAAhB;AACA,gBAAMwb,WAAW,GAAG,MAAAgE,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEtwB,SAAT,UAAA,iBAAA,SAAA,MAAoBkZ,MAAxC;;AAEA,cAAIoT,WAAJ,EAAiB;AACbxR,YAAAA,CAAC,CAACwR,WAAF,GAAgBA,WAAhB;AACH;;AAED3Y,UAAAA,YAAY,CAAC7C,IAAD,EAAO5S,iBAAP,EAAgC4c,CAAhC,CAAZ;AACH;AACJ;AACJ,KArBD;;AAhgBI,SAAKlR,QAAL,GAAgBnM,OAAhB;AACA,SAAK4R,IAAL,GAAYvO,SAAZ;AACArD,IAAAA,OAAO,CAAC6Z,SAAR,CAAkB,KAAKsT,KAAvB;AACH;;AAoBD/sB,EAAAA,OAAO;AACH,UAAMA,OAAN;;AAEA,UAAMyE,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AAEA/M,IAAAA,GAAG,CAACpB,QAAJ,CAAa2K,mBAAb,CACIyjB,eADJ,EAEI,KAAKriB,UAFT,EAGI,IAHJ;AAKA3K,IAAAA,GAAG,CAACpB,QAAJ,CAAa2K,mBAAb,CAAiC,UAAjC,EAA6C,KAAKqB,WAAlD,EAA+D,IAA/D;AACA5K,IAAAA,GAAG,CAACuJ,mBAAJ,CAAwB,SAAxB,EAAmC,KAAK0jB,UAAxC,EAAoD,IAApD;AAEA,SAAKpQ,WAAL,CAAiB,KAAKsQ,UAAtB;AAEA,WAAOJ,mBAAmB,CAACkB,iBAA3B;AAEA,WAAO,KAAKC,QAAZ;AACA,WAAO,KAAKH,QAAZ;AACH;;AAEqB,SAAfI,eAAe,CAClBpe,QADkB,EAElBvJ,MAFkB;;;AAIlB,QAAIC,GAAG,GAAGsmB,mBAAmB,CAACkB,iBAA9B;AACA,QAAInpB,EAAE,GAAG2B,GAAG,IAAIA,GAAG,CAACtE,GAAJ,EAAhB;;AACA,QAAI2C,EAAE,IAAI0B,MAAM,CAACE,QAAP,CAAgB5B,EAAhB,CAAV,EAA+B;AAC3B,aAAOioB,mBAAmB,CAACkB,iBAA3B;AACH;;AAEDnpB,IAAAA,EAAE,GAAG,MAAA,MAACiL,QAAgC,CAACme,QAAlC,UAAA,iBAAA,SAAA,MAA4C9yB,OAA5C,UAAA,iBAAA,SAAA,MAAqD+G,KAA1D;;AACA,QAAI2C,EAAE,IAAI0B,MAAM,CAACE,QAAP,CAAgB5B,EAAhB,CAAV,EAA+B;AAC3B,aAAQiL,QAAgC,CAACme,QAAzC;AACH;;AAEDznB,IAAAA,GAAG,GAAIsJ,QAAgC,CAACge,QAAxC;AACAjpB,IAAAA,EAAE,GAAG2B,GAAG,IAAIA,GAAG,CAACtE,GAAJ,EAAZ;;AACA,QAAI2C,EAAE,IAAI0B,MAAM,CAACE,QAAP,CAAgB5B,EAAhB,CAAV,EAA+B;AAC3B,aAAQiL,QAAgC,CAACge,QAAzC;AACH;AACJ;;AAED/Q,EAAAA,iBAAiB;AACb,WAAO,KAAKyB,MAAL,EAAP;AACH;;AAEDf,EAAAA,qBAAqB;;;AACjB,QAAI5Y,EAAE,GAAG,MAAA,KAAKipB,QAAL,UAAA,iBAAA,SAAA,MAAe5rB,KAAxB;;AAEA,QAAI,CAAC2C,EAAD,IAAQA,EAAE,IAAI,CAACpD,gBAAgB,CAACoD,EAAE,CAACnD,aAAJ,EAAmBmD,EAAnB,CAAnC,EAA4D;AACxD,WAAKipB,QAAL,GAAgBjpB,EAAE,GAAGpJ,SAArB;AACH;;AAED,WAAOoJ,EAAP;AACH;;AAED+S,EAAAA,KAAK,CACDzc,OADC,EAEDmsB,6BAFC,EAGDC,iBAHC;AAKD,QACI,CAAC,KAAKlgB,QAAL,CAAcxJ,SAAd,CAAwB4N,WAAxB,CACGtQ,OADH,EAEGmsB,6BAFH,EAGG,KAHH,EAIGC,iBAJH,CADL,EAOE;AACE,aAAO,KAAP;AACH;;AAEDpsB,IAAAA,OAAO,CAACyc,KAAR;AAEA,WAAO,IAAP;AACH;;AAED8C,EAAAA,YAAY,CAACxW,SAAD;AACR,UAAMW,EAAE,GAAG,KAAKwC,QAAL,CAAcxJ,SAAd,CAAwBwd,WAAxB,CAAoC;AAAEnX,MAAAA;AAAF,KAApC,CAAX;;AAEA,QAAIW,EAAJ,EAAQ;AACJ,WAAKwC,QAAL,CAAc6L,cAAd,CAA6B0E,KAA7B,CAAmC/S,EAAnC;;AAEA,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH;;AAEDsO,EAAAA,sBAAsB,CAClBtK,OADkB,EAElBzB,KAFkB;;;AAOlB,UAAM;AAAElD,MAAAA,SAAF;AAAakP,MAAAA;AAAb,QAAqChM,KAA3C;AACA,QAAIwH,OAAJ;;AAEA,QAAI1K,SAAJ,EAAe;AACX,YAAMlE,GAAG,GAAGwU,OAAO,CAACiB,iBAAR,CAA0B,KAAKpO,QAA/B,EAAyCnD,SAAzC,CAAZ;;AAEA,UAAIlE,GAAJ,EAAS;AACL4O,QAAAA,OAAO,GAAG,MAAAke,mBAAmB,CAACU,gBAApB,CACN,KAAKnmB,QADC,EAENrH,GAFM,EAGNkE,SAHM,EAINzI,SAJM,EAKNA,SALM,EAMN,CAACoN,OANK,EAONuK,mBAPM,CAAA,UAAA,iBAAA,SAAA,MAQPjY,OARH;AASH;AACJ;;AAED,QAAIyT,OAAO,IAAI,EAAC1K,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAEuC,QAAX,CAAoBmI,OAApB,CAAD,CAAf,EAA8C;AAC1CA,MAAAA,OAAO,GAAGnT,SAAV;AACH;;AAED,WAAOmT,OAAO,IAAInT,SAAlB;AACH;;AAEO0yB,EAAAA,iBAAiB,CACrBtlB,OADqB,EAErBzB,KAFqB;AAIrB,UAAMwH,OAAO,GAAG,KAAKuE,sBAAL,CAA4BtK,OAA5B,EAAqCzB,KAArC,CAAhB;;AAEA,QAAIwH,OAAJ,EAAa;AACT,WAAKgJ,KAAL,CAAWhJ,OAAX,EAAoB,KAApB,EAA2B,IAA3B;AAEA,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH;;AAED6L,EAAAA,UAAU,CAACrT,KAAD;AACN,WAAO,KAAK+mB,iBAAL,CAAuB,IAAvB,EAA6B/mB,KAA7B,CAAP;AACH;;AAEDgnB,EAAAA,SAAS,CAAChnB,KAAD;AACL,WAAO,KAAK+mB,iBAAL,CAAuB,KAAvB,EAA8B/mB,KAA9B,CAAP;AACH;;AAEDyQ,EAAAA,UAAU,CAAC3T,SAAD;AACN,QAAI,CAAC,KAAKmD,QAAL,CAAcxJ,SAAd,CAAwBsd,SAAxB,CAAkCjX,SAAlC,CAAL,EAAmD;AAC/C,aAAO,KAAP;AACH;;AAED,QAAI,CAAC,KAAKmD,QAAL,CAAcxJ,SAAd,CAAwB4N,WAAxB,CAAoCvH,SAApC,EAA+C,IAA/C,EAAqD,IAArD,EAA2D,IAA3D,CAAL,EAAuE;AACnE,YAAMmqB,YAAY,GAAGnqB,SAAS,CAACxI,YAAV,CAAuB,UAAvB,CAArB;AACA,YAAM4yB,cAAc,GAAGpqB,SAAS,CAACxI,YAAV,CAAuB,aAAvB,CAAvB;AAEAwI,MAAAA,SAAS,CAACoE,QAAV,GAAqB,CAAC,CAAtB;AACApE,MAAAA,SAAS,CAACqE,YAAV,CAAuB,aAAvB,EAAsC,MAAtC;AAEAukB,MAAAA,mBAAmB,CAACkB,iBAApB,GAAwC,IAAIrsB,eAAJ,CACpC,KAAKmL,IAD+B,EAEpC5I,SAFoC,CAAxC;AAKA,WAAK0T,KAAL,CAAW1T,SAAX,EAAsB,IAAtB,EAA4B,IAA5B;;AAEA,WAAKqqB,qBAAL,CAA2BrqB,SAA3B,EAAsC,UAAtC,EAAkDmqB,YAAlD;;AACA,WAAKE,qBAAL,CACIrqB,SADJ,EAEI,aAFJ,EAGIoqB,cAHJ;AAKH,KApBD,MAoBO;AACH,WAAK1W,KAAL,CAAW1T,SAAX;AACH;;AAED,WAAO,IAAP;AACH;;AAEOqqB,EAAAA,qBAAqB,CACzBpzB,OADyB,EAEzBkW,IAFyB,EAGzBQ,KAHyB;AAKzB,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAChB1W,MAAAA,OAAO,CAAC8W,eAAR,CAAwBZ,IAAxB;AACH,KAFD,MAEO;AACHlW,MAAAA,OAAO,CAACoN,YAAR,CAAqB8I,IAArB,EAA2BQ,KAA3B;AACH;AACJ;;AAEOob,EAAAA,kBAAkB,CACtB9xB,OADsB,EAEtB+M,aAFsB,EAGtBic,yBAHsB;;;AAKtB,QAAI,KAAK9c,QAAL,CAAc7L,KAAlB,EAAyB;AACrB;AACH;;AAED,UAAM8V,OAAO,GAAgC;AAAEpJ,MAAAA;AAAF,KAA7C;;AAEA,QAAI/M,OAAJ,EAAa;AACT,YAAMqzB,gBAAgB,GAClB,MAAA1B,mBAAmB,CAACkB,iBAApB,UAAA,iBAAA,SAAA,MAAuC9rB,KAD3C;AAEA4qB,MAAAA,mBAAmB,CAACkB,iBAApB,GAAwCvyB,SAAxC;;AAEA,UAAI+yB,gBAAgB,KAAKrzB,OAArB,IAAgCgK,iBAAiB,CAAChK,OAAD,CAArD,EAAgE;AAC5D;AACH;;AAEDmW,MAAAA,OAAO,CAAC6S,yBAAR,GAAoCA,yBAApC;AAEA,YAAMnkB,GAAG,GAAGwU,OAAO,CAACiB,iBAAR,CAA0B,KAAKpO,QAA/B,EAAyClM,OAAzC,CAAZ;AAEA,YAAM4uB,WAAW,GAAG,MAAA/pB,GAAG,SAAH,IAAAA,GAAG,WAAH,SAAA,GAAAA,GAAG,CAAEvC,SAAL,UAAA,iBAAA,SAAA,MAAgBkZ,MAApC;;AAEA,UAAIoT,WAAJ,EAAiB;AACbzY,QAAAA,OAAO,CAACyY,WAAR,GAAsBA,WAAtB;AACH;AACJ;;AAED,UAAM0E,OAAO,GAAI,KAAKR,QAAL,GAAgB;AAC7B9yB,MAAAA,OAAO,EAAEA,OAAO,GACV,IAAIwG,eAAJ,CAAoB,KAAKmL,IAAzB,EAA+B3R,OAA/B,CADU,GAEVM,SAHuB;AAI7B6V,MAAAA;AAJ6B,KAAjC;;AAOA,QAAInW,OAAO,IAAIA,OAAO,KAAK,KAAK8iB,IAAhC,EAAsC;AAClC,WAAKyQ,uBAAL,CAA6BvzB,OAA7B;AACH;AAGD;;;AACA,QAAI,KAAK8yB,QAAL,KAAkBQ,OAAtB,EAA+B;AAC3B,WAAKpQ,MAAL,CAAYljB,OAAZ,EAAqBmW,OAArB;AACH;;AAED,SAAK2c,QAAL,GAAgBxyB,SAAhB;AACH;;AAES4iB,EAAAA,MAAM,CACZC,GADY,EAEZhN,OAFY;AAIZ,UAAM+M,MAAN,CAAaC,GAAb,EAAkBhN,OAAlB;;AAEA,QAAIgN,GAAJ,EAAS;AACL,WAAKwP,QAAL,GAAgB,IAAInsB,eAAJ,CAAoB,KAAKmL,IAAzB,EAA+BwR,GAA/B,CAAhB;AACH;AACJ;;AAiBsB,SAAhBkP,gBAAgB,CACnBtyB,OADmB,EAEnB8E,GAFmB,EAGnBkE,SAHmB,EAInB4lB,cAJmB,EAKnBlU,gBALmB,EAMnBxK,UANmB,EAOnBgI,mBAPmB;AASnB,UAAMub,eAAe,GAAGzqB,SAAS,IAAIlE,GAAG,CAACjD,IAAJ,CAAS0K,UAAT,EAArC;;AAEA,QAAI,CAACknB,eAAL,EAAsB;AAClB,aAAO,IAAP;AACH;;AAED,QAAIpB,IAAI,GAA8B,IAAtC;AAEA,UAAMqB,cAAc,GAAG9B,mBAAmB,CAAC+B,eAA3C;AACA,UAAM9uB,GAAG,GAAG7E,OAAO,CAACqD,SAAR,EAAZ;;AAEA,QAAIqwB,cAAJ,EAAoB;AAChB7uB,MAAAA,GAAG,CAACa,YAAJ,CAAiBguB,cAAjB;AACH;;AAED9B,IAAAA,mBAAmB,CAACgC,SAApB,GAAgC,IAAhC;AACAhC,IAAAA,mBAAmB,CAAC+B,eAApB,GAAsC9uB,GAAG,CAACyC,UAAJ,CAAe;AACjD,aAAOsqB,mBAAmB,CAAC+B,eAA3B;AACA/B,MAAAA,mBAAmB,CAACgC,SAApB,GAAgC,KAAhC;AACH,KAHqC,EAGnC,CAHmC,CAAtC;AAKA,UAAMrxB,SAAS,GAAGuC,GAAG,CAACvC,SAAtB;AACA,UAAMK,QAAQ,GAAGkC,GAAG,CAAClC,QAArB;AACA,UAAME,KAAK,GAAGgC,GAAG,CAAChC,KAAlB;;AAEA,UAAM+wB,YAAY,GACd3iB,IADiB;;;AAGjBmhB,MAAAA,IAAI,GAAGnhB,IAAI,CAACohB,gBAAL,CACH1D,cADG,EAEHlU,gBAFG,EAGHxK,UAHG,EAIHgI,mBAJG,CAAP;;AAOA,UAAI0W,cAAc,IAAI,EAACyD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,SAAA,GAAAA,IAAI,CAAEpyB,OAAP,CAAtB,EAAsC;AAClC,cAAM2J,aAAa,GACfsH,IAAI,KAAK3O,SAAT,KAAsB,MAAA2O,IAAI,CAAC3E,UAAL,EAAA,UAAA,iBAAA,SAAA,MAAmB3C,aAAzC,CADJ;;AAGA,YAAIA,aAAJ,EAAmB;AACf,gBAAMkqB,SAAS,GAAGxa,OAAO,CAACiB,iBAAR,CACdva,OADc,EAEd4uB,cAFc,EAGd;AAAElU,YAAAA,gBAAgB,EAAE9Q;AAApB,WAHc,CAAlB;;AAMA,cAAIkqB,SAAJ,EAAe;AACX,kBAAMC,mBAAmB,GAAG7iB,IAAI,CAAC3E,UAAL,EAA5B;AACA,kBAAMynB,UAAU,GAAG9jB,UAAU,GACvB6jB,mBADuB,GAEtBA,mBAAmB,IAChBne,YAAY,CAACme,mBAAD,CADhB,IAEAA,mBAJN;;AAMA,gBAAIC,UAAJ,EAAgB;AACZ3B,cAAAA,IAAI,GAAGT,mBAAmB,CAACU,gBAApB,CACHtyB,OADG,EAEH8zB,SAFG,EAGH9qB,SAHG,EAIHgrB,UAJG,EAKHpqB,aALG,EAMHsG,UANG,EAOHgI,mBAPG,CAAP;;AAUA,kBAAIma,IAAJ,EAAU;AACNA,gBAAAA,IAAI,CAACzC,aAAL,GAAqB,IAArB;AACH;AACJ;AACJ;AACJ;AACJ;AACJ,KA/CD;;AAiDA,QAAIhtB,QAAQ,IAAIE,KAAhB,EAAuB;AACnB+wB,MAAAA,YAAY,CAAC/uB,GAAG,CAAC+V,mBAAJ,GAA0BjY,QAA1B,GAAqCE,KAAtC,CAAZ;AACH,KAFD,MAEO,IAAIF,QAAJ,EAAc;AACjBixB,MAAAA,YAAY,CAACjxB,QAAD,CAAZ;AACH,KAFM,MAEA,IAAIE,KAAJ,EAAW;AACd+wB,MAAAA,YAAY,CAAC/wB,KAAD,CAAZ;AACH,KAFM,MAEA,IAAIP,SAAJ,EAAe;AAClBsxB,MAAAA,YAAY,CAACtxB,SAAD,CAAZ;AACH,KAFM,MAEA;AACH,YAAM0xB,SAAS,GAAwB;AACnCjrB,QAAAA,SAAS,EAAEyqB,eADwB;AAEnC7E,QAAAA,cAFmC;AAGnClU,QAAAA,gBAHmC;AAInCxC,QAAAA,mBAJmC;AAKnC8I,QAAAA,kBAAkB,EAAE;AALe,OAAvC;AAQA,YAAMkT,YAAY,GAAmC,EAArD;AAEA,YAAM3B,WAAW,GAAGvyB,OAAO,CAAC2C,SAAR,CAChBuN,UAAU,GAAG,UAAH,GAAgB,UADV,EAElB+jB,SAFkB,EAEPC,YAFO,CAApB;AAIA7B,MAAAA,IAAI,GAAG;AACHpyB,QAAAA,OAAO,EAAEsyB,WADN;AAEH3C,QAAAA,aAAa,EAAEsE,YAAY,CAACtE,aAFzB;AAGH3sB,QAAAA,YAAY,EAAEixB,YAAY,CAACjxB;AAHxB,OAAP;AAKH;;AAED,WAAOovB,IAAP;AACH;;;AAnaMT,6BAAA,GAAY,KAAZ;;ACxDX;;;;;AAsBA,MAAMuC,oBAAN,SAAmCllB,iBAAnC;AACInL,EAAAA,YACI7D,SACA2C,UACA5C,SACAkC;AAEA,UACIlC,OADJ,EAEIC,OAFJ,EAGI2O,2BAA2B,CAACI,QAHhC,EAII9M,GAJJ,EAKI,IALJ;;AAQA,SAAKqN,YAAL,CACI,CACI0D,UADJ,EAEI/C,UAFJ,EAGIlD,aAHJ;;;AAKI,YAAMhE,SAAS,GAAG/I,OAAO,CAAC+G,GAAR,EAAlB;AACA,YAAM8F,KAAK,GAAGmG,UAAU,CAACnG,KAAzB;;AAEA,UAAI9D,SAAS,IAAI8D,KAAjB,EAAwB;AACpB,cAAMhI,GAAG,GAAGwU,OAAO,CAACiB,iBAAR,CAA0Bva,OAA1B,EAAmC8M,KAAnC,CAAZ;;AAEA,YAAIhI,GAAJ,EAAS;AACL,cAAIutB,IAAJ;AAEAA,UAAAA,IAAI,GAAG,MAAAzvB,QAAQ,CAAC0vB,gBAAT,CACHtlB,aAAa,IAAIzM,SADd,EAEHA,SAFG,EAGH2P,UAHG,EAIH,IAJG,CAAA,UAAA,iBAAA,SAAA,MAKJjQ,OALH;;AAOA,cAAI,CAACoyB,IAAL,EAAW;AACPA,YAAAA,IAAI,GAAG,MAAAT,mBAAmB,CAACU,gBAApB,CACHtyB,OADG,EAEH8E,GAFG,EAGHvE,SAHG,EAIH0S,UAAU,CAACvG,SAAX,GACMI,KADN,GAEMgJ,kBAAkB,CACd9M,SADc,EAEd,CAACkH,UAFa,CANrB,EAUH3P,SAVG,EAWH2P,UAXG,EAYH,IAZG,CAAA,UAAA,iBAAA,SAAA,MAaJjQ,OAbH;AAcH;;AAED,cAAIoyB,IAAJ,EAAU;AACNxlB,YAAAA,WAAW,CAACwlB,IAAD,CAAX;AACH;AACJ;AACJ;AACJ,KA5CL;AA8CH;;;;MAGQrjB,iBACD/C;AASRnI,EAAAA,YACI9D,SACAC,SACAoY,WACAnM,OACAhK;AAEA,UAAMlC,OAAN,EAAeC,OAAf,EAAwBiM,KAAxB;AAbI,yBAAA,GAAmB,KAAnB;AAcJ,SAAKkoB,YAAL,CAAkB,KAAlB;AAEA,SAAKtb,UAAL,GAAkBT,SAAlB;;AAEA,QAAI,CAACrY,OAAO,CAACgZ,UAAb,EAAyB;AACrB,WAAKK,YAAL,GAAoB,IAAI8a,oBAAJ,CAChB,KAAK/nB,QADW,EAEhB,IAFgB,EAGhBpM,OAHgB,EAIhBkC,GAJgB,CAApB;AAMH;AACJ;;AAED9B,EAAAA,OAAO;;;AACH,SAAK0Y,UAAL,CAAgB,IAAhB;;AAEA,UAAM7Y,OAAO,GAAG,KAAKmM,QAAL,CAAcpF,GAAd,EAAhB;;AACA,UAAA,KAAKqS,YAAL,UAAA,iBAAA,SAAA,MAAmBjZ,SAAnB;AACA,WAAO,KAAKiZ,YAAZ;;AAEA,QAAIpZ,OAAJ,EAAa;AACT,UAAImB,sCAAJ,EAAa;AACToW,QAAAA,sBAAoB,CAAC,KAAKpL,QAAN,EAAgB,IAAhB,CAApB;AACH;AACJ;;AAED,WAAO,KAAKioB,MAAZ;AACH;;AAED/B,EAAAA,gBAAgB,CACZ1D,cADY,EAEZlU,gBAFY,EAGZxK,UAHY,EAIZgI,mBAJY;;;AAMZ,UAAMsY,eAAe,GAAG,KAAKjkB,UAAL,EAAxB;;AAEA,QAAI,CAACikB,eAAL,EAAsB;AAClB,aAAO,IAAP;AACH;;AAED,UAAM8D,cAAc,GAChB,CAAA,MACI1F,cACH,SADG,IAAAA,cAAc,WAAd,SAAA,GAAAA,cAAc,CACf3gB,uBAFH,UAAA,iBAAA,SAAA,MAE4BjH,KAF5B,MAEsCwpB,eAH1C;;AAKA,QACI,CAAC,KAAK+D,gBAAN,IACA3F,cADA,IAEA4B,eAAe,CAACjlB,QAAhB,CAAyBqjB,cAAzB,CAFA,IAGA,CAAC0F,cAJL,EAKE;AACE,aAAO;AAAEr0B,QAAAA,OAAO,EAAEM,SAAX;AAAsBqvB,QAAAA,aAAa,EAAE;AAArC,OAAP;AACH;;AAED,UAAM4E,sBAAsB,GAAG,KAAKC,QAAL,CAAc,IAAd,CAA/B;;AAEA,QACI,CAAC7F,cAAD,IACA,CAAC4B,eAAe,CAACjlB,QAAhB,CAAyBqjB,cAAzB,CADD,IAEA0F,cAHJ,EAIE;AACE,aAAO;AACHr0B,QAAAA,OAAO,EAAEu0B,sBADN;AAEH5E,QAAAA,aAAa,EAAE;AAFZ,OAAP;AAIH;;AAED,UAAM5vB,OAAO,GAAG,KAAKmM,QAArB;AACA,QAAIkmB,IAAI,GAAmC,IAA3C;AACA,QAAIzC,aAAa,GAAG,KAApB;AACA,QAAI3sB,YAAJ;;AAEA,QAAI,KAAKsxB,gBAAL,IAAyBC,sBAA7B,EAAqD;AACjD,YAAMP,SAAS,GAAwB;AACnCjrB,QAAAA,SAAS,EAAEwnB,eADwB;AAEnC5B,QAAAA,cAFmC;AAGnClU,QAAAA,gBAHmC;AAInCxC,QAAAA,mBAJmC;AAKnC8I,QAAAA,kBAAkB,EAAE;AALe,OAAvC;AAQA,YAAMkT,YAAY,GAAmC,EAArD;AAEA7B,MAAAA,IAAI,GAAGryB,OAAO,CAAC2C,SAAR,CAAkBuN,UAAU,GAAG,UAAH,GAAgB,UAA5C,EACH+jB,SADG,EAEHC,YAFG,CAAP;AAKAtE,MAAAA,aAAa,GAAG,CAAC,CAACsE,YAAY,CAACtE,aAA/B;;AAEA,UACI,CAACyC,IAAD,IACA,KAAKhmB,MAAL,CAAYmP,WAAZ,KACI/a,qBAAA,CAA4Bf,gBAHpC,EAIE;AACE2yB,QAAAA,IAAI,GAAGryB,OAAO,CAAC2C,SAAR,CAAkBuN,UAAU,GAAG,UAAH,GAAgB,WAA5C,EACH;AACIlH,UAAAA,SAAS,EAAEwnB,eADf;AAEItY,UAAAA,mBAFJ;AAGI8I,UAAAA,kBAAkB,EAAE;AAHxB,SADG,EAMHkT,YANG,CAAP;AASAtE,QAAAA,aAAa,GAAG,IAAhB;AACH;;AAED3sB,MAAAA,YAAY,GAAGixB,YAAY,CAACjxB,YAA5B;AACH;;AAED,WAAO;AACHhD,MAAAA,OAAO,EAAEoyB,IADN;AAEHpvB,MAAAA,YAFG;AAGH2sB,MAAAA;AAHG,KAAP;AAKH;;AAEDwE,EAAAA,YAAY,CAACM,UAAD;AACR,SAAKH,gBAAL,GAAwBG,UAAU,IAAI,CAAC,KAAKroB,MAAL,CAAYmP,WAAnD;;AAEA,QAAIpa,sCAAJ,EAAa;AACToW,MAAAA,sBAAoB,CAAC,KAAKpL,QAAN,EAAgB,CAAC,KAAKmoB,gBAAtB,CAApB;AACH;AACJ;;AAEDhZ,EAAAA,QAAQ,CAACoZ,kBAAD;;;AACJ,UAAM10B,OAAO,GAAG,KAAKsM,UAAL,MAAqB,IAArC;AACA,QAAIqoB,cAAc,GAAG,IAArB;;AAEA,SAAK,IAAIzzB,CAAC,GAAGlB,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE2J,aAAtB,EAAqCzI,CAArC,EAAwCA,CAAC,GAAGA,CAAC,CAACyI,aAA9C,EAA6D;AACzD,YAAMirB,CAAC,GAAG,MAAA90B,mBAAmB,CAAC,KAAKoM,QAAN,EAAgBhL,CAAhB,CAAnB,UAAA,iBAAA,SAAA,MAAuCyB,QAAjD;;AAIA,UAAIiyB,CAAJ,EAAO;AACH,YAAI,CAACA,CAAC,CAACN,gBAAP,EAAyB;AACrBK,UAAAA,cAAc,GAAG,KAAjB;AACH;AACJ;AACJ;;AAED,QAAIhe,GAAG,GAAGge,cAAc,GAClB,KAAKvoB,MAAL,CAAYmP,WAAZ,GACI,KAAK+Y,gBADT,GAEI,KAHc,GAIlBh0B,SAJN;;AAMA,QAAIqW,GAAG,IAAI+d,kBAAX,EAA+B;AAC3B,YAAMxI,OAAO,GAAG,KAAKhgB,QAAL,CAAc6L,cAAd,CAA6B6J,iBAA7B,EAAhB;;AAEA,UAAIsK,OAAJ,EAAa;AACTvV,QAAAA,GAAG,GAAGuV,OAAO,KAAK,KAAKsI,QAAL,CAAc,IAAd,CAAlB;AACH;AACJ;;AAED,WAAO7d,GAAP;AACH;;AAED6d,EAAAA,QAAQ,CAACK,WAAD;;;AACJ,UAAMtE,eAAe,GAAG,KAAKjkB,UAAL,EAAxB;AACA,QAAI4G,KAAJ;;AAEA,QAAIqd,eAAJ,EAAqB;AACjB,UACIsE,WAAW,IACX,KAAK3oB,QAAL,CAAcxJ,SAAd,CAAwB4N,WAAxB,CAAoCigB,eAApC,CAFJ,EAGE;AACE,eAAOA,eAAP;AACH;;AAEDrd,MAAAA,KAAK,GAAG,MAAA,KAAKkhB,MAAL,UAAA,iBAAA,SAAA,MAAartB,KAArB;;AAEA,UAAI,CAACmM,KAAL,EAAY;AACRA,QAAAA,KAAK,GACD,KAAKhH,QAAL,CAAcxJ,SAAd,CAAwBoe,SAAxB,CAAkC;AAC9B/X,UAAAA,SAAS,EAAEwnB,eADmB;AAE9BxP,UAAAA,kBAAkB,EAAE;AAFU,SAAlC,KAGMzgB,SAJV;;AAMA,YAAI4S,KAAJ,EAAW;AACP,eAAK4hB,QAAL,CAAc5hB,KAAd;AACH;AACJ;AACJ;;AAED,WAAOA,KAAP;AACH;;AAED4hB,EAAAA,QAAQ,CAAC90B,OAAD;AACJ,QAAIA,OAAJ,EAAa;AACT,WAAKo0B,MAAL,GAAc,IAAI5tB,eAAJ,CAAoB,KAAK0F,QAAL,CAAc9I,SAAlC,EAA6CpD,OAA7C,CAAd;AACH,KAFD,MAEO;AACH,aAAO,KAAKo0B,MAAZ;AACH;AACJ;;AAED9D,EAAAA,aAAa,CACTtwB,OADS,EAET8nB,KAFS;;;AAIT,UAAMoH,eAAe,GAAGpH,KAAK,CAACoH,eAA9B;AAEA,UAAMvlB,aAAa,GAAG,MAAA,KAAK2C,UAAL,EAAA,UAAA,iBAAA,SAAA,MAAmB3C,aAAzC;AACA,UAAMkqB,SAAS,GACXlqB,aAAa,IACb0P,OAAO,CAACiB,iBAAR,CAA0B,KAAKpO,QAA/B,EAAyCvC,aAAzC,CAFJ;AAGA,UAAMorB,iBAAiB,GAAGlB,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAElxB,QAArC;AACA,UAAMqyB,cAAc,GAAG,CAAAnB,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAEjZ,mBAAX,IACjBma,iBADiB,GAEjBz0B,SAFN;AAGA,QAAI20B,qBAAJ;;AAEA,UAAMC,WAAW,GAAIvyB,QAAD;AAChB,UAAIqF,MAAM,GAAGknB,eAAe,CAACvsB,QAAQ,CAAC0J,EAAV,CAA5B;AACA,UAAIiP,QAAJ;;AAEA,UAAItT,MAAJ,EAAY;AACRsT,QAAAA,QAAQ,GAAGtT,MAAM,CAACsT,QAAlB;AACH,OAFD,MAEO;AACHA,QAAAA,QAAQ,GAAG,KAAKA,QAAL,CAAc,IAAd,CAAX;AAEAtT,QAAAA,MAAM,GAAGknB,eAAe,CAACvsB,QAAQ,CAAC0J,EAAV,CAAf,GAA+B;AACpCiP,UAAAA;AADoC,SAAxC;AAGH;;AAED,aAAOA,QAAP;AACH,KAfD;;AAiBA,QAAI0Z,cAAJ,EAAoB;AAChBC,MAAAA,qBAAqB,GAAGD,cAAc,CAAC1oB,UAAf,EAAxB;;AAEA,UACI,CAAC4oB,WAAW,CAACF,cAAD,CAAZ,IACAC,qBADA,IAEAnN,KAAK,CAAC/e,SAAN,KAAoBksB,qBAFpB,IAGAnN,KAAK,CAAC/e,SAAN,CAAgBuC,QAAhB,CAAyB2pB,qBAAzB,CAJJ,EAKE;AACE;AACAnN,QAAAA,KAAK,CAACgI,gBAAN,GAAyB,IAAzB;AACA,eAAOtrB,UAAU,CAAC0rB,aAAlB;AACH;AACJ;;AAED,UAAM5U,QAAQ,GAAG4Z,WAAW,CAAC,IAAD,CAA5B;AACA,UAAM3E,eAAe,GAAG,KAAKjkB,UAAL,EAAxB;;AAEA,QAAIikB,eAAJ,EAAqB;AACjB,UAAIjV,QAAQ,KAAK,IAAjB,EAAuB;AACnB,YAAIiV,eAAe,KAAKvwB,OAApB,IAA+B+0B,iBAAnC,EAAsD;AAClD,cAAI,CAACE,qBAAL,EAA4B;AACxBA,YAAAA,qBAAqB,GAAGF,iBAAiB,CAACzoB,UAAlB,EAAxB;AACH;;AAED,cACI2oB,qBAAqB,IACrB,CAACC,WAAW,CAACH,iBAAD,CADZ,IAEAjN,KAAK,CAAC/e,SAAN,CAAgBuC,QAAhB,CAAyB2pB,qBAAzB,CAFA,IAGAA,qBAAqB,KAAKnN,KAAK,CAAC/e,SAJpC,EAKE;AACE+e,YAAAA,KAAK,CAACgI,gBAAN,GAAyB,IAAzB;AACA,mBAAOtrB,UAAU,CAAC0rB,aAAlB;AACH;AACJ;;AAED,YACIK,eAAe,KAAKvwB,OAApB,IACAuwB,eAAe,CAACjlB,QAAhB,CAAyBtL,OAAzB,CAFJ,EAGE;AACE8nB,UAAAA,KAAK,CAACgI,gBAAN,GAAyB,IAAzB;AACA,iBAAOtrB,UAAU,CAAC0rB,aAAlB;AACH;;AAED,cAAMloB,MAAM,GAAGknB,eAAe,CAAC,KAAK7iB,EAAN,CAA9B;AACA,YAAI6G,KAAJ;;AAEA,YAAI,WAAWlL,MAAf,EAAuB;AACnBkL,UAAAA,KAAK,GAAGlL,MAAM,CAACkL,KAAf;AACH,SAFD,MAEO;AACHA,UAAAA,KAAK,GAAGlL,MAAM,CAACkL,KAAP,GAAe,KAAKshB,QAAL,CAAc,IAAd,CAAvB;AACH;;AAED,YAAIthB,KAAK,IAAI4U,KAAK,CAACwG,eAAN,CAAsBpb,KAAtB,CAAb,EAA2C;AACvC4U,UAAAA,KAAK,CAACqI,kBAAN,GAA2BI,eAA3B;AACAzI,UAAAA,KAAK,CAACgI,gBAAN,GAAyB,IAAzB;;AAEA,cAAI5c,KAAK,KAAK4U,KAAK,CAAC5T,IAApB,EAA0B;AACtB4T,YAAAA,KAAK,CAAC4G,KAAN,GAAc,IAAd;AACA5G,YAAAA,KAAK,CAAC0H,YAAN,GAAqBtc,KAArB;AACA,mBAAO1O,UAAU,CAACqrB,aAAlB;AACH,WAJD,MAIO;AACH,mBAAOrrB,UAAU,CAAC0rB,aAAlB;AACH;AACJ;AACJ;AACJ;;AAED,WAAO5vB,SAAP;AACH;;;;MAQQ60B;AAOTtxB,EAAAA,YAAY9D,SAA4BqD;AAHhC,iBAAA,GAA2C,EAA3C;AACA,mBAAA,GAA6C,EAA7C;;AAQA,cAAA,GAAQ;AACZ,YAAMwB,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;;AAGA,WAAKzF,QAAL,CAAc6L,cAAd,CAA6BkL,cAA7B,CAA4C,KAAKhQ,QAAjD;;AAEArO,MAAAA,GAAG,CAACpB,QAAJ,CAAaqK,gBAAb,CAA8B,WAA9B,EAA2C,KAAKunB,YAAhD,EAA8D,IAA9D;AACAxwB,MAAAA,GAAG,CAACiJ,gBAAJ,CAAqB,SAArB,EAAgC,KAAKgkB,UAArC,EAAiD,IAAjD;AACH,KARO;;AAgFA,2BAAA,GAAsBlvB,QAAD;AACzB,aAAO,KAAK0yB,UAAL,CAAgB1yB,QAAQ,CAAC0J,EAAzB,CAAP;AACH,KAFO;;AAIA,iBAAA,GAAYrM,OAAD;AACf,UAAIA,OAAJ,EAAa;AACT,aAAKs1B,cAAL,CAAoBt1B,OAApB,EAA6B,IAA7B,EAAmC,IAAnC;AACH;AACJ,KAJO;;AAMA,qBAAA,GAAgBkB,CAAD;AACnB,UAAIA,CAAC,CAAC8E,MAAN,EAAc;AACV,aAAKsvB,cAAL,CAAoBp0B,CAAC,CAAC8E,MAAtB,EAA6C,IAA7C;AACH;AACJ,KAJO;;AA4DA,mBAAA,GAAcoQ,KAAD;AACjB,UAAIA,KAAK,CAAC4b,OAAN,KAAkBtB,IAAI,CAACE,KAAvB,IAAgCxa,KAAK,CAAC4b,OAAN,KAAkBtB,IAAI,CAACG,GAA3D,EAAgE;AAC5D;AACH;;;AAGD,UAAIza,KAAK,CAAC6b,OAAN,IAAiB7b,KAAK,CAACmf,MAAvB,IAAiCnf,KAAK,CAAC+b,QAAvC,IAAmD/b,KAAK,CAACof,OAA7D,EAAsE;AAClE;AACH;;AAED,YAAMx1B,OAAO,GAAG,KAAKkM,QAAL,CAAc6L,cAAd,CAA6B6J,iBAA7B,EAAhB;;AAEA,UAAI5hB,OAAJ,EAAa;AACT,aAAKy1B,cAAL,CAAoBz1B,OAApB,EAA6BoW,KAA7B;AACH;AACJ,KAfO;;AA3JJ,SAAKlK,QAAL,GAAgBnM,OAAhB;AACA,SAAK4R,IAAL,GAAYvO,SAAZ;AACArD,IAAAA,OAAO,CAAC6Z,SAAR,CAAkB,KAAKsT,KAAvB;AACH;;AAYD/sB,EAAAA,OAAO;AACH,UAAMyE,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AAEA,SAAK+jB,QAAL,GAAgB,EAAhB;;AAEA,QAAI,KAAKrjB,YAAT,EAAuB;AACnBzN,MAAAA,GAAG,CAACa,YAAJ,CAAiB,KAAK4M,YAAtB;AACA,aAAO,KAAKA,YAAZ;AACH;;AAED,SAAKnG,QAAL,CAAc6L,cAAd,CAA6B0J,WAA7B,CAAyC,KAAKxO,QAA9C;;AAEArO,IAAAA,GAAG,CAACpB,QAAJ,CAAa2K,mBAAb,CAAiC,WAAjC,EAA8C,KAAKinB,YAAnD,EAAiE,IAAjE;AACAxwB,IAAAA,GAAG,CAACuJ,mBAAJ,CAAwB,SAAxB,EAAmC,KAAK0jB,UAAxC,EAAoD,IAApD;AAEAnwB,IAAAA,MAAM,CAACC,IAAP,CAAY,KAAK0zB,UAAjB,EAA6Bxb,OAA7B,CAAsC8b,UAAD;AACjC,UAAI,KAAKN,UAAL,CAAgBM,UAAhB,CAAJ,EAAiC;AAC7B,aAAKN,UAAL,CAAgBM,UAAhB,EAA4Bx1B,OAA5B;;AACA,eAAO,KAAKk1B,UAAL,CAAgBM,UAAhB,CAAP;AACH;AACJ,KALD;AAMH;;AAED/yB,EAAAA,cAAc,CACV5C,OADU,EAEViM,KAFU,EAGVhK,GAHU;AAKV,QAAId,sCAAJ,EAAa;;AAIb,UAAMy0B,WAAW,GAAG,IAAI7mB,QAAJ,CAChB,KAAK7C,QADW,EAEhBlM,OAFgB,EAGhB,KAAK61B,kBAHW,EAIhB5pB,KAJgB,EAKhBhK,GALgB,CAApB;AAQA,SAAKozB,UAAL,CAAgBO,WAAW,CAACvpB,EAA5B,IAAkCupB,WAAlC;;AAEA,UAAM7d,cAAc,GAAG,KAAK7L,QAAL,CAAc6L,cAAd,CAA6B6J,iBAA7B,EAAvB;AAGA;;;AACA,QACI7J,cAAc,IACd/X,OAAO,CAACsL,QAAR,CAAiByM,cAAjB,CADA,IAEA,CAAC,KAAK1F,YAHV,EAIE;AACE,WAAKA,YAAL,GAAoB,KAAKV,IAAL,GAAYtK,UAAZ,CAAuB;AACvC,eAAO,KAAKgL,YAAZ;;AAEA,YACI0F,cAAc,KACd,KAAK7L,QAAL,CAAc6L,cAAd,CAA6B6J,iBAA7B,EAFJ,EAGE;AACE,eAAK0T,cAAL,CAAoBvd,cAApB,EAAoC,IAApC,EAA0C,IAA1C;AACH;AACJ,OATmB,EASjB,CATiB,CAApB;AAUH;;AAED,WAAO6d,WAAP;AACH;;AAEDE,EAAAA,sBAAsB;AAClB,SAAKJ,QAAL,GAAgB,EAAhB;AACH;;AAkBOJ,EAAAA,cAAc,CAClBt1B,OADkB,EAElB+1B,aAFkB,EAGlBC,WAHkB;;;AAKlB,QAAI,KAAK3jB,YAAT,EAAuB;AACnB,WAAKV,IAAL,GAAYlM,YAAZ,CAAyB,KAAK4M,YAA9B;;AACA,aAAO,KAAKA,YAAZ;AACH;;AAED,UAAM4jB,MAAM,GAAyB,EAArC;AAEA,QAAIC,QAAQ,GAAG,IAAf;;AAEA,SACI,IAAIxsB,EAAE,GAAG1J,OADb,EAEI0J,EAFJ,EAGIA,EAAE,GAAGA,EAAE,CAACC,aAHZ,EAIE;AACE,YAAMhH,QAAQ,GAAG,MAAA7C,mBAAmB,CAAC,KAAKoM,QAAN,EAAgBxC,EAAhB,CAAnB,UAAA,iBAAA,SAAA,MAAwC/G,QAAzD;;AAEA,UAAIA,QAAJ,EAAc;AACVszB,QAAAA,MAAM,CAACtzB,QAAQ,CAAC0J,EAAV,CAAN,GAAsB,IAAtB;;AAEA,YAAI6pB,QAAQ,IAAIF,WAAZ,IAA2BtsB,EAAE,KAAK1J,OAAtC,EAA+C;AAC3Ck2B,UAAAA,QAAQ,GAAG,KAAX;AACH;;AAED,YAAIH,aAAa,IAAI,CAACG,QAAtB,EAAgC;AAC5B,eAAKR,QAAL,CAAc/yB,QAAQ,CAAC0J,EAAvB,IAA6B1J,QAA7B;AACA,gBAAM8xB,UAAU,GACZ9xB,QAAQ,CAAC2Y,QAAT,MACCtb,OAAO,KAAK0J,EAAZ,KACI,CAAC/G,QAAQ,CAAC4J,QAAT,GAAoB4pB,SAArB,IACGxzB,QAAQ,CAAC6xB,QAAT,CAAkB,KAAlB,MAA6Bx0B,OAFpC,CAFL;AAMA2C,UAAAA,QAAQ,CAACwxB,YAAT,CAAsBM,UAAtB;AACH;;AAEDyB,QAAAA,QAAQ,GAAG,KAAX;AACH;AACJ;;AAED,SAAK,MAAM7pB,EAAX,IAAiB3K,MAAM,CAACC,IAAP,CAAY,KAAK+zB,QAAjB,CAAjB,EAA6C;AACzC,YAAM/yB,QAAQ,GAAG,KAAK+yB,QAAL,CAAcrpB,EAAd,CAAjB;;AAEA,UAAI,EAAE1J,QAAQ,CAAC0J,EAAT,IAAe4pB,MAAjB,CAAJ,EAA8B;AAC1BtzB,QAAAA,QAAQ,CAACwxB,YAAT,CAAsB,KAAtB;AACAxxB,QAAAA,QAAQ,CAACmyB,QAAT,CAAkBx0B,SAAlB;AACA,eAAO,KAAKo1B,QAAL,CAAcrpB,EAAd,CAAP;AACH;AACJ;AACJ;;AAmBDopB,EAAAA,cAAc,CACVz1B,OADU,EAEVoW,KAFU,EAGVggB,MAHU;;;AAKV,UAAMr2B,OAAO,GAAG,KAAKmM,QAArB;AACA,UAAMrH,GAAG,GAAGwU,OAAO,CAACiB,iBAAR,CAA0Bva,OAA1B,EAAmCC,OAAnC,CAAZ;AACA,UAAM6a,mBAAmB,GAAGhW,GAAG,SAAH,IAAAA,GAAG,WAAH,SAAA,GAAAA,GAAG,CAAEgW,mBAAjC;AACA,QAAIlY,QAAQ,GAAG,CAAAkC,GAAG,SAAH,IAAAA,GAAG,WAAH,SAAA,GAAAA,GAAG,CAAElC,QAAL,KAAiBkY,mBAAhC;;AAEA,QAAIhW,GAAG,IAAIlC,QAAX,EAAqB;AACjB,UAAIkC,GAAG,CAACkW,aAAJ,CAAkB3E,KAAlB,CAAJ,EAA8B;AAC1B;AACH;;AAED,UAAIgc,IAAJ;AAEA,YAAM7B,eAAe,GAAG5tB,QAAQ,CAAC2J,UAAT,EAAxB;;AAEA,UAAI8J,KAAK,CAAC4b,OAAN,KAAkBtB,IAAI,CAACE,KAA3B,EAAkC;AAC9B,YACIL,eAAe,KACdvwB,OAAO,KAAKuwB,eAAZ,IACI5tB,QAAQ,CAAC4J,QAAT,GAAoB4pB,SAApB,IACGn2B,OAAO,KAAK2C,QAAQ,CAAC6xB,QAAT,CAAkB,KAAlB,CAHL,CADnB,EAKE;AACEpC,UAAAA,IAAI,GAAGryB,OAAO,CAAC2C,SAAR,CAAkB0rB,QAAlB,CAA2B;AAC9BrlB,YAAAA,SAAS,EAAEwnB,eADmB;AAE9B5B,YAAAA,cAAc,EAAE3uB,OAFc;AAG9B+gB,YAAAA,kBAAkB,EAAE;AAHU,WAA3B,CAAP;AAKH;AACJ,OAbD,MAaO,IAAI3K,KAAK,CAAC4b,OAAN,KAAkBtB,IAAI,CAACG,GAA3B,EAAgC;AACnC,YAAIN,eAAe,IAAIA,eAAe,CAACjlB,QAAhB,CAAyBtL,OAAzB,CAAvB,EAA0D;AACtD,cAAIA,OAAO,KAAKuwB,eAAZ,IAA+B6F,MAAnC,EAA2C;AACvChE,YAAAA,IAAI,GAAGzvB,QAAQ,CAAC6xB,QAAT,CAAkB,IAAlB,CAAP;AACH,WAFD,MAEO;AACH,kBAAM7qB,aAAa,GAAG4mB,eAAe,CAAC5mB,aAAtC;AACA,kBAAMkqB,SAAS,GAAGlqB,aAAa,GACzB0P,OAAO,CAACiB,iBAAR,CAA0Bva,OAA1B,EAAmC4J,aAAnC,CADyB,GAEzBrJ,SAFN;AAIAqC,YAAAA,QAAQ,GAAGkxB,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAElxB,QAAtB;AACAyvB,YAAAA,IAAI,GAAGzvB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,SAAA,GAAAA,QAAQ,CAAE6xB,QAAV,CAAmB,IAAnB,CAAP;AACH;AACJ;;AAED,YAAI7xB,QAAJ,EAAc;AACVA,UAAAA,QAAQ,CAACwxB,YAAT,CAAsB,KAAtB;;AAEA,cAAItZ,mBAAJ,EAAyB;AACrB,kBAAA9a,OAAO,CAACuC,SAAR,UAAA,iBAAA,SAAA,MAAmBod,UAAUpf,UAA7B;AACH;AACJ;AACJ;;AAED,UAAI8xB,IAAJ,EAAU;AACNhc,QAAAA,KAAK,CAACqc,cAAN;AACArc,QAAAA,KAAK,CAACsc,wBAAN;AAEAN,QAAAA,IAAI,CAAC3V,KAAL;AACH;AACJ;AACJ;;;;AAGL,SAASlF,sBAAT,CACIC,WADJ,EAEIrF,MAFJ;AAII,MAAIhR,sCAAJ,EAAa;AACT,UAAMnB,OAAO,GAAGwX,WAAW,CAACzQ,GAAZ,EAAhB;;AAEA,QAAI/G,OAAJ,EAAa;AACT,UAAImS,MAAJ,EAAY;AACRnS,QAAAA,OAAO,CAACqN,KAAR,CAAcoK,cAAd,CAA6B,oBAA7B;AACH,OAFD,MAEO;AACHzX,QAAAA,OAAO,CAACqN,KAAR,CAAcI,WAAd,CAA0B,oBAA1B,EAAgD,WAAhD;AACH;AACJ;AACJ;AACJ;;ACjqBD;;;;MAUa4oB,gCACDzT;AAKR/e,EAAAA,YAAYT;AACR;;AAiBI,kBAAA,GAAayd,wBAAD;AAChB,WAAKqC,MAAL,CAAYrC,wBAAZ,EAAsCvgB,SAAtC;AACH,KAFO;;AAhBJ,SAAKg2B,QAAL,GAAgBC,aAAa,CAACnzB,SAAS,EAAV,CAA7B;;AACA,SAAKkzB,QAAL,CAAclV,SAAd,CAAwB,KAAKoV,SAA7B;AACH;;AAEDr2B,EAAAA,OAAO;AACH,UAAMA,OAAN;;AAEA,QAAI,KAAKm2B,QAAT,EAAmB;AACf,WAAKA,QAAL,CAAc7U,WAAd,CAA0B,KAAK+U,SAA/B;;AAEAC,MAAAA,cAAc,CAAC,KAAKH,QAAN,CAAd;AAEA,aAAO,KAAKA,QAAZ;AACH;AACJ;;AAMDxe,EAAAA,yBAAyB,CAAC+I,wBAAD;;;AACrB,UAAA,KAAKyV,QAAL,UAAA,iBAAA,SAAA,MAAepT,OAAOrC,yBAAtB;AACH;;AAEDA,EAAAA,wBAAwB;;;AACpB,WAAO,CAAC,EAAC,MAAA,KAAKyV,QAAL,UAAA,iBAAA,SAAA,MAAezV,0BAAhB,CAAR;AACH;;;;AC5CL;;;;AAsBA,IAAI6V,kBAAkB,GAAG,CAAzB;AAEA,MAAMC,WAAW,GAAG,aAApB;;AAEA,SAASpf,oBAAT,CACIC,WADJ,EAEIrF,MAFJ,EAGIykB,UAHJ,EAIIpb,MAJJ,EAKIF,QALJ,EAMIub,UANJ;AAQI,MAAI11B,sCAAJ,EAAa;AACT,UAAMnB,OAAO,GAAGwX,WAAW,CAACzQ,GAAZ,EAAhB;;AAEA,QAAI/G,OAAJ,EAAa;AACT,UAAImS,MAAJ,EAAY;AACRnS,QAAAA,OAAO,CAACqN,KAAR,CAAcoK,cAAd,CAA6B,qBAA7B;AACH,OAFD,MAEO;AACHzX,QAAAA,OAAO,CAACqN,KAAR,CAAcI,WAAd,CACI,qBADJ,EAEImpB,UAAU,GACN,GADJ,GAEIpb,MAFJ,GAGI,GAHJ,IAIKF,QAAQ,GAAG,QAAH,GAAc,UAJ3B,IAKI,GALJ,GAMI,GANJ,IAOKub,UAAU,cAAcA,aAAd,GAA8B,aAP7C,CAFJ;AAWH;AACJ;AACJ;AACJ;AAED;;;;;AAGA,MAAMC,qBAAN,SAAoC9nB,iBAApC;AACInL,EAAAA,YACI7D,SACAD,SACAkC;AAEA,UAAMlC,OAAN,EAAeC,OAAf,EAAwB2O,2BAA2B,CAACE,SAApD,EAA+D5M,GAA/D;;AAEA,SAAKqN,YAAL,CAAkB,CAAC0D,UAAD,EAAyB/C,UAAzB;;;AACd,YAAMvG,EAAE,GAAG1J,OAAO,CAAC+G,GAAR,EAAX;AACA,YAAMgC,SAAS,GAAGW,EAAE,KAAI,MAAA2P,OAAO,CAACyC,OAAR,CAAgB/b,OAAhB,EAAyB2J,EAAzB,CAAA,UAAA,iBAAA,SAAA,MAA8B4C,YAAlC,CAApB;AACA,YAAMO,KAAK,GAAGmG,UAAU,CAACnG,KAAzB;AACA,UAAI4G,OAAJ;;AAEA,UAAI1K,SAAS,IAAI8D,KAAjB,EAAwB;AACpB,cAAMkqB,cAAc,GAAG,MACnBlqB,KACH,CAACmB,uBAFqB,UAAA,iBAAA,SAAA,MAEIjH,KAF3B;AAIA,cAAMlC,GAAG,GAAGwU,OAAO,CAACiB,iBAAR,CACRva,OADQ,EAERg3B,cAAc,IAAIlqB,KAFV,CAAZ;;AAKA,YAAIhI,GAAJ,EAAS;AACL4O,UAAAA,OAAO,GAAG,MAAAke,mBAAmB,CAACU,gBAApB,CACNtyB,OADM,EAEN8E,GAFM,EAGNkE,SAHM,EAIN8D,KAJM,EAKNvM,SALM,EAMN2P,UANM,EAON,IAPM,CAAA,UAAA,iBAAA,SAAA,MAQPjQ,OARH;AASH;;AAED,YAAIyT,OAAJ,EAAa;AACT7G,UAAAA,WAAW,CAAC6G,OAAD,CAAX;AACH;AACJ;AACJ,KAhCD;AAiCH;;;;MAGQ5E,kBACD7C;AAYRnI,EAAAA,YACI9D,SACAC,SACAoY,WACAnM,OACAhK,KACA+0B;AAEA,UAAMj3B,OAAN,EAAeC,OAAf,EAAwBiM,KAAxB;AAdI,oBAAA,GAAc,CAAd;AAgBJ,SAAKuP,MAAL,GAAcvP,KAAK,CAACI,EAApB;AACA,SAAKwM,UAAL,GAAkBT,SAAlB;AACA,SAAK6e,eAAL,GAAuBD,cAAvB;;AAEA,QAAI,CAACj3B,OAAO,CAACgZ,UAAb,EAAyB;AACrB,WAAKK,YAAL,GAAoB,IAAI0d,qBAAJ,CAChB,KAAK3qB,QADW,EAEhBpM,OAFgB,EAGhBkC,GAHgB,CAApB;AAKH;;AAED,QAAId,sCAAJ,EAAa;AACToW,MAAAA,oBAAoB,CAChB,KAAKpL,QADW,EAEhB,KAFgB,EAGhB,KAAKE,EAHW,EAIhB,KAAKmP,MAJW,EAKhB,KAAK4D,SALW,EAMhB,KAAK8X,WANW,CAApB;AAQH;AACJ;;AAEDC,EAAAA,UAAU,CAAC7b,QAAD;AACN,QAAI,KAAK8D,SAAL,KAAmB9D,QAAvB,EAAiC;AAC7B,WAAK8D,SAAL,GAAiB9D,QAAjB;AAEA,YAAMtb,OAAO,GAAG,KAAKsM,UAAL,EAAhB;;AAEA,UAAItM,OAAJ,EAAa;AACT,cAAMg3B,cAAc,GAAG,KAAKC,eAA5B;AACA,cAAMjY,KAAK,GAAGgY,cAAc,CACvB9lB,GADS,CACJhQ,CAAD,IAAOA,CAAC,CAAC6F,GAAF,EADF,EAETic,OAFS,CAEDhjB,OAFC,CAAd;;AAIA,YAAIsb,QAAJ,EAAc;AACV,cAAI0D,KAAK,GAAG,CAAZ,EAAe;AACXgY,YAAAA,cAAc,CAACpwB,IAAf,CACI,IAAIJ,eAAJ,CACI,KAAK0F,QAAL,CAAc9I,SADlB,EAEIpD,OAFJ,CADJ;AAMH;AACJ,SATD,MASO;AACH,cAAIgf,KAAK,IAAI,CAAb,EAAgB;AACZgY,YAAAA,cAAc,CAACxZ,MAAf,CAAsBwB,KAAtB,EAA6B,CAA7B;AACH;AACJ;AACJ;;AAED,UAAI7d,sCAAJ,EAAa;AACToW,QAAAA,oBAAoB,CAChB,KAAKpL,QADW,EAEhB,KAFgB,EAGhB,KAAKE,EAHW,EAIhB,KAAKmP,MAJW,EAKhB,KAAK4D,SALW,EAMhB,KAAK8X,WANW,CAApB;AAQH;;AAED,WAAKE,iBAAL,CACI9b,QAAQ,GACF9a,wBADE,GAEFA,0BAHV;AAKH;AACJ;;AAED0rB,EAAAA,OAAO,CAACmL,WAAD;AACH,QAAI,CAACA,WAAL,EAAkB;AACd,WAAKH,WAAL,GAAmB,EAAER,kBAArB;AACH;;AAED,WAAO,KAAKQ,WAAZ;AACH;;AAED/0B,EAAAA,QAAQ,CAAC8J,KAAD;AACJ,QAAIA,KAAK,CAACI,EAAV,EAAc;AACV,WAAKmP,MAAL,GAAcvP,KAAK,CAACI,EAApB;AACH;;AAED,SAAKD,MAAL,GAAc,EAAE,GAAGH;AAAL,KAAd;AACH;;AAED9L,EAAAA,OAAO;;;AACH,SAAKg3B,UAAL,CAAgB,KAAhB;;AACA,SAAKte,UAAL,CAAgB,IAAhB;;AACA,UAAA,KAAKO,YAAL,UAAA,iBAAA,SAAA,MAAmBjZ,SAAnB;AACA,WAAO,KAAKiZ,YAAZ;AACA,SAAK6d,eAAL,GAAuB,EAAvB;;AACA,SAAK9d,OAAL;AACH;;AAEDmC,EAAAA,QAAQ;AACJ,WAAO,CAAC,CAAC,KAAK8D,SAAd;AACH;;AAED9T,EAAAA,QAAQ,CAACtL,OAAD;;;AACJ,WAAO,CAAC,EAAC,MAAA,KAAKsM,UAAL,EAAA,UAAA,iBAAA,SAAA,MAAmBhB,SAAStL,QAA7B,CAAR;AACH;;AAEDqyB,EAAAA,gBAAgB,CACZ1D,cADY,EAEZlU,gBAFY,EAGZxK,UAHY,EAIZgI,mBAJY;;;AAMZ,UAAMqf,gBAAgB,GAAG,KAAKhrB,UAAL,EAAzB;;AAEA,QAAI,CAACgrB,gBAAL,EAAuB;AACnB,aAAO,IAAP;AACH;;AAED,UAAMv3B,OAAO,GAAG,KAAKmM,QAArB;AACA,QAAIkmB,IAAI,GAAmC,IAA3C;AACA,QAAIzC,aAAa,GAAG,KAApB;AACA,QAAI3sB,YAAJ;AAEA,UAAM+F,SAAS,GACX4lB,cAAc,KACd,MAAAtV,OAAO,CAACyC,OAAR,CAAgB/b,OAAhB,EAAyB4uB,cAAzB,CAAA,UAAA,iBAAA,SAAA,MAA0CriB,YAD5B,CADlB;;AAIA,QAAIvD,SAAJ,EAAe;AACX,YAAMirB,SAAS,GAAwB;AACnCjrB,QAAAA,SADmC;AAEnC4lB,QAAAA,cAFmC;AAGnClU,QAAAA,gBAHmC;AAInCxC,QAAAA,mBAJmC;AAKnC8I,QAAAA,kBAAkB,EAAE;AALe,OAAvC;AAQA,YAAMkT,YAAY,GAAmC,EAArD;AAEA7B,MAAAA,IAAI,GAAGryB,OAAO,CAAC2C,SAAR,CAAkBuN,UAAU,GAAG,UAAH,GAAgB,UAA5C,EACH+jB,SADG,EAEHC,YAFG,CAAP;;AAKA,UAAI,CAAC7B,IAAD,IAAS,KAAKhmB,MAAL,CAAYmrB,SAArB,KAAkC,MAAAx3B,OAAO,CAACuC,SAAR,UAAA,iBAAA,SAAA,MAAmBmZ,QAArD,CAAJ,EAAmE;AAC/D2W,QAAAA,IAAI,GAAGryB,OAAO,CAAC2C,SAAR,CAAkBuN,UAAU,GAAG,UAAH,GAAgB,WAA5C,EACH;AACIlH,UAAAA,SADJ;AAEIkP,UAAAA,mBAFJ;AAGI8I,UAAAA,kBAAkB,EAAE;AAHxB,SADG,EAMHkT,YANG,CAAP;AASAtE,QAAAA,aAAa,GAAG,IAAhB;AACH,OAXD,MAWO;AACHA,QAAAA,aAAa,GAAG,CAAC,CAACsE,YAAY,CAACtE,aAA/B;AACH;;AAED3sB,MAAAA,YAAY,GAAGixB,YAAY,CAACjxB,YAA5B;AACH;;AAED,WAAO;AACHhD,MAAAA,OAAO,EAAEoyB,IADN;AAEHpvB,MAAAA,YAFG;AAGH2sB,MAAAA;AAHG,KAAP;AAKH;;AAEDyH,EAAAA,iBAAiB,CACbI,SADa,EAEbC,WAFa;AAIb,UAAMz3B,OAAO,GAAG,KAAKsM,UAAL,EAAhB;AACA,QAAIkK,gBAAgB,GAAG,KAAvB;;AAEA,QAAIxW,OAAJ,EAAa;AACT,YAAM8uB,QAAQ,GAAG2I,WAAW,GACtB,KAAKR,eAAL,CAAqB/lB,GAArB,CAA0BhQ,CAAD,IAAOA,CAAC,CAAC6F,GAAF,EAAhC,CADsB,GAEtB,CAAC/G,OAAD,CAFN;;AAIA,WAAK,MAAM0J,EAAX,IAAiBolB,QAAjB,EAA2B;AACvB,YACIplB,EAAE,IACF,CAACuM,YAAY,CAA8BvM,EAA9B,EAAkC8tB,SAAlC,EAA6C;AACtDnrB,UAAAA,EAAE,EAAE,KAAKmP,MAD6C;AAEtDxb,UAAAA,OAFsD;AAGtDw3B,UAAAA;AAHsD,SAA7C,CAFjB,EAOE;AACEhhB,UAAAA,gBAAgB,GAAG,IAAnB;AACH;AACJ;AACJ;;AAED,WAAOA,gBAAP;AACH;;AAEO2C,EAAAA,OAAO;AACX,QAAIhY,sCAAJ,EAAa;AACToW,MAAAA,oBAAoB,CAAC,KAAKpL,QAAN,EAAgB,IAAhB,CAApB;AACH;AACJ;;;;MAQQurB;AAgBT7zB,EAAAA,YACI9D;AAEA43B,EAAAA,0BACAC;AA+FI,4BAAA,GAAuBt1B,SAAD;AAC1B,YAAM+J,EAAE,GAAG/J,SAAS,CAAC+J,EAArB;AACA,YAAMmP,MAAM,GAAGlZ,SAAS,CAACkZ,MAAzB;AACA,YAAM1Z,IAAI,GAAG,KAAK+1B,MAAL,CAAYrc,MAAZ,CAAb;AAEA,aAAO,KAAKsc,WAAL,CAAiBzrB,EAAjB,CAAP;;AAEA,UAAIvK,IAAJ,EAAU;AACN,eAAOA,IAAI,CAACuK,EAAD,CAAX;;AAEA,YAAI3K,MAAM,CAACC,IAAP,CAAYG,IAAZ,EAAkBoB,MAAlB,KAA6B,CAAjC,EAAoC;AAChC,iBAAO,KAAK20B,MAAL,CAAYrc,MAAZ,CAAP;;AAEA,cAAI,KAAKC,QAAL,KAAkBD,MAAtB,EAA8B;AAC1B,iBAAKkE,SAAL,CAAepf,SAAf;AACH;AACJ;AACJ;AACJ,KAlBO;;AAoBA,mBAAA,GAAc8V,KAAD;;;AACjB,UAAIA,KAAK,CAAC4b,OAAN,KAAkBtB,IAAI,CAACG,GAA3B,EAAgC;AAC5B;AACH;;AAED,YAAM9wB,OAAO,GAAG,KAAKmM,QAArB;AACA,YAAMlM,OAAO,GAAGD,OAAO,CAACgY,cAAR,CAAuB6J,iBAAvB,EAAhB;;AAEA,UAAI5hB,OAAJ,EAAa;AACT,cAAM6E,GAAG,GAAGwU,OAAO,CAACiB,iBAAR,CAA0Bva,OAA1B,EAAmCC,OAAnC,CAAZ;AACA,cAAMsC,SAAS,GAAGuC,GAAG,SAAH,IAAAA,GAAG,WAAH,SAAA,GAAAA,GAAG,CAAEvC,SAAvB;;AAEA,YACIuC,GAAG,IACH,CAACA,GAAG,CAAClC,QADL,KAEAL,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAEgZ,QAAX,EAFA,KAGA,CAACzW,GAAG,CAACkW,aAAJ,CAAkB3E,KAAlB,CAJL,EAKE;AACE,gBAAMqF,QAAQ,GAAGnZ,SAAS,CAACkZ,MAA3B;;AAEA,cAAIC,QAAJ,EAAc;AACV,kBAAM3Z,IAAI,GAAG,KAAK+1B,MAAL,CAAYpc,QAAZ,CAAb;;AAEA,gBAAI3Z,IAAJ,EAAU;AACN,oBAAMi2B,YAAY,GAAGr2B,MAAM,CAACC,IAAP,CAAYG,IAAZ,EAChBoP,GADgB,CACX7E,EAAD;;;AACD,sBAAM2rB,CAAC,GAAGl2B,IAAI,CAACuK,EAAD,CAAd;AACA,sBAAM3C,EAAE,GAAGsuB,CAAC,CAAC1rB,UAAF,EAAX;AACA,oBAAI3J,QAAJ;;AAEA,oBAAI+G,EAAJ,EAAQ;AACJ/G,kBAAAA,QAAQ,GAAG,MAAA7C,mBAAmB,CAC1B,KAAKoM,QADqB,EAE1BxC,EAF0B,CAAnB,UAAA,iBAAA,SAAA,MAGR/G,QAHH;AAIH;;AAED,uBAAOq1B,CAAC,IAAItuB,EAAL,IAAW/G,QAAX,GACD;AACI+G,kBAAAA,EADJ;AAEIquB,kBAAAA,YAAY,EAAEC,CAAC,CAAC9L,OAAF,CAAU,IAAV;AAFlB,iBADC,GAKD;AAAE6L,kBAAAA,YAAY,EAAE;AAAhB,iBALN;AAMH,eAnBgB,EAoBhB7wB,MApBgB,CAoBR+wB,CAAD,IAAOA,CAAC,CAACF,YAAF,GAAiB,CApBf,EAqBhB7iB,IArBgB,CAqBX,CAACC,CAAD,EAAIC,CAAJ,KACFD,CAAC,CAAC4iB,YAAF,GAAiB3iB,CAAC,CAAC2iB,YAAnB,GACM,CAAC,CADP,GAEM5iB,CAAC,CAAC4iB,YAAF,GAAiB3iB,CAAC,CAAC2iB,YAAnB,GACA,CADA,GAEA,CA1BO,CAArB;;AA6BA,kBAAIA,YAAY,CAAC70B,MAAjB,EAAyB;AACrB,sBAAMqtB,eAAe,GAAGwH,YAAY,CAAC,CAAD,CAAZ,CAAgBruB,EAAxC;;AAEA,oBAAI6mB,eAAJ,EAAqB;AACjB,wBAAAxwB,OAAO,CAAC4C,QAAR,UAAA,iBAAA,SAAA,MAAkB8yB,eACdlF,iBACAna,OACA,KAHJ;AAKH;AACJ;AACJ;AACJ;AACJ;AACJ;AACJ,KApEO;AAuVR;;;;;;;AAKQ,iBAAA,GAAW,CACf2B,cADe,EAEf5B,OAFe;;;AAIf,YAAMtR,GAAG,GACLkT,cAAc,IACdsB,OAAO,CAACiB,iBAAR,CAA0B,KAAKpO,QAA/B,EAAyC6L,cAAzC,CAFJ;;AAKA,UAAI,CAAClT,GAAD,IAAQ,CAACkT,cAAb,EAA6B;AACzB;AACH;;AAED,YAAMmgB,YAAY,GAAG,KAAKC,OAA1B;;AAEA,WACI,IAAIj3B,CAAC,GAAuB6W,cADhC,EAEI7W,CAFJ,EAGIA,CAAC,GAAGA,CAAC,CAACyI,aAHV,EAIE;AACE;AACA;AACA;AACA;AAEA,YAAIuuB,YAAY,CAAC1mB,GAAb,CAAiBtQ,CAAjB,CAAJ,EAAyB;AACrBg3B,UAAAA,YAAY,CAAC9lB,MAAb,CAAoBlR,CAApB;AACAuV,UAAAA,gBAAgB,CAAC,KAAKvK,QAAN,EAAgBhL,CAAhB,EAAmBy1B,WAAnB,CAAhB;AACH;AACJ;;AAED,YAAMr0B,SAAS,GAAGuC,GAAG,CAACvC,SAAtB;AAGA;;AACA,YACIA,SAAS,KACT,MAAAxC,mBAAmB,CAAC,KAAKoM,QAAN,EAAgB6L,cAAhB,CAAnB,UAAA,iBAAA,SAAA,MAAoDzV,SAD3C,CADb,UAAA,iBAAA,SAAA,MAGG4pB,SAHH;;AAKA,UAAI,CAAA5pB,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAEkZ,MAAX,MAAsB,KAAKC,QAA/B,EAAyC;AACrC,aAAK2c,yBAAL,GACI91B,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAEiK,QAAX,GAAsB8rB,kBAD1B;AAGA;AACH;;;AAGD,UACIliB,OAAO,CAAC6S,yBAAR,IACA,KAAKoP,yBADL,KAEA91B,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAEiK,QAAX,GAAsB+rB,kBAFtB,CADJ,EAIE;AACE,aAAK5Y,SAAL,CAAepd,SAAf;AACH,OAND,MAMO;AACH;AACA,cAAMsC,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AACA/M,QAAAA,GAAG,CAACa,YAAJ,CAAiB,KAAK8yB,2BAAtB,EAHG;AAKH;;AACA,aAAKA,2BAAL,GAAmC3zB,GAAG,CAACyC,UAAJ,CAC/B,MAAM,KAAKmxB,sBAAL,CAA4BzgB,cAA5B,CADyB,EAE/B,GAF+B,CAAnC;AAIH;AACJ,KAjEO;;AA7cJ,SAAK7L,QAAL,GAAgBnM,OAAhB;AACA,SAAK4R,IAAL,GAAY5R,OAAO,CAACqD,SAApB;AACA,SAAK00B,WAAL,GAAmB,EAAnB;AACA,SAAKD,MAAL,GAAc,EAAd;AACA,SAAKM,OAAL,GAAe,IAAIvyB,OAAJ,EAAf;AACA,SAAK6yB,IAAL,GAAY,EAAZ;AACA,SAAKC,yBAAL,GAAiCf,wBAAjC;AACA,SAAKgB,gBAAL,GAAwBf,eAAxB;AACA,SAAKZ,cAAL,GAAsB,EAAtB;;AAEA,QAAI,CAACj3B,OAAO,CAACgZ,UAAb,EAAyB;AACrBhZ,MAAAA,OAAO,CAAC6B,IAAR,CAAaqX,cAAb;AACH;;AAED,UAAMrU,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AACA/M,IAAAA,GAAG,CAACiJ,gBAAJ,CAAqB,SAArB,EAAgC,KAAKgkB,UAArC,EAAiD,IAAjD;AAEA9xB,IAAAA,OAAO,CAAC6Z,SAAR,CAAkB;AACd,WAAK1N,QAAL,CAAc6L,cAAd,CAA6BqJ,SAA7B,CAAuC,KAAKnO,QAA5C;AACH,KAFD;AAGH;;AAED9S,EAAAA,OAAO;AACH,UAAMyE,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AAEA/M,IAAAA,GAAG,CAACuJ,mBAAJ,CAAwB,SAAxB,EAAmC,KAAK0jB,UAAxC,EAAoD,IAApD;;AAGAnwB,IAAAA,MAAM,CAACC,IAAP,CAAY,KAAKm2B,WAAjB,EAA8Bje,OAA9B,CAAuC+U,WAAD;AAClC,UAAI,KAAKkJ,WAAL,CAAiBlJ,WAAjB,CAAJ,EAAmC;AAC/B,aAAKkJ,WAAL,CAAiBlJ,WAAjB,EAA8BzuB,OAA9B;;AACA,eAAO,KAAK23B,WAAL,CAAiBlJ,WAAjB,CAAP;AACH;AACJ,KALD;AAOAhqB,IAAAA,GAAG,CAACa,YAAJ,CAAiB,KAAK8yB,2BAAtB;AACA3zB,IAAAA,GAAG,CAACa,YAAJ,CAAiB,KAAKmzB,kBAAtB;AAEA,SAAKf,MAAL,GAAc,EAAd;AACA,WAAO,KAAKpc,QAAZ;AACA,SAAKub,cAAL,GAAsB,EAAtB;AAEA,SAAKmB,OAAL,GAAe,IAAIvyB,OAAJ,EAAf;AACA,SAAK6yB,IAAL,GAAY,EAAZ;;AAEA,SAAKvsB,QAAL,CAAc6L,cAAd,CAA6B0J,WAA7B,CAAyC,KAAKxO,QAA9C;AACH;;AAED1Q,EAAAA,eAAe,CACXvC,OADW,EAEXiM,KAFW,EAGXhK,GAHW;;;AAKX,QAAId,sCAAJ,EAAa;;AAIb,UAAMmB,SAAS,GAAG,IAAIuM,SAAJ,CACd,KAAK3C,QADS,EAEdlM,OAFc,EAGd,KAAK64B,mBAHS,EAId5sB,KAJc,EAKdhK,GALc,EAMd,KAAK+0B,cANS,CAAlB;AASA,UAAM3qB,EAAE,GAAG/J,SAAS,CAAC+J,EAArB;AACA,UAAMmP,MAAM,GAAGvP,KAAK,CAACI,EAArB;AAEA,SAAKyrB,WAAL,CAAiBzrB,EAAjB,IAAuB/J,SAAvB;AAEA,QAAIR,IAAI,GAAG,KAAK+1B,MAAL,CAAYrc,MAAZ,CAAX;;AACA,QAAI,CAAC1Z,IAAL,EAAW;AACPA,MAAAA,IAAI,GAAG,KAAK+1B,MAAL,CAAYrc,MAAZ,IAAsB,EAA7B;AACH;;AACD1Z,IAAAA,IAAI,CAACuK,EAAD,CAAJ,GAAW/J,SAAX;;AAGA,QACItC,OAAO,CAACsL,QAAR,CACI,MAAA,KAAKY,QAAL,CAAc6L,cAAd,CAA6B6J,iBAA7B,EAAA,UAAA,iBAAA,KAAA,GAAoD,IADxD,CADJ,EAIE;AACE,UAAIpG,MAAM,KAAK,KAAKC,QAApB,EAA8B;AAC1B,aAAKiE,SAAL,CAAepd,SAAf;AACH,OAFD,MAEO;AACHA,QAAAA,SAAS,CAAC60B,UAAV,CAAqB,IAArB;AACH;AACJ;;AAED,WAAO70B,SAAP;AACH;;AA4FD2rB,EAAAA,WAAW,CAACjuB,OAAD;AACP,WAAO,KAAKm4B,OAAL,CAAa3mB,GAAb,CAAiBxR,OAAjB,CAAP;AACH;;AAED84B,EAAAA,YAAY;AACR,QAAI,KAAKF,kBAAT,EAA6B;AACzB;AACH;;AAED,SAAKA,kBAAL,GAA0B,KAAKjnB,IAAL,GAAYtK,UAAZ,CAAuB;AAC7C,aAAO,KAAKuxB,kBAAZ;;AACA,WAAKG,aAAL;AACH,KAHyB,EAGvB,GAHuB,CAA1B;AAIH;;AAEDrZ,EAAAA,SAAS,CAACpd,SAAD;AACL,UAAMkZ,MAAM,GAAGlZ,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAEkZ,MAA1B;AACA,UAAMC,QAAQ,GAAG,KAAKA,QAAtB;;AAEA,QAAIA,QAAQ,KAAKD,MAAjB,EAAyB;AACrB;AACH;;AAED,SAAKC,QAAL,GAAgBD,MAAhB;;AAEA,QAAIC,QAAJ,EAAc;AACV,YAAM3Z,IAAI,GAAG,KAAK+1B,MAAL,CAAYpc,QAAZ,CAAb;;AAEA,UAAI3Z,IAAJ,EAAU;AACN,aAAK,MAAMuK,EAAX,IAAiB3K,MAAM,CAACC,IAAP,CAAYG,IAAZ,CAAjB,EAAoC;AAChCA,UAAAA,IAAI,CAACuK,EAAD,CAAJ,CAAS8qB,UAAT,CAAoB,KAApB;AACH;AACJ;AACJ;;AAED,QAAI3b,MAAJ,EAAY;AACR,YAAM1Z,IAAI,GAAG,KAAK+1B,MAAL,CAAYrc,MAAZ,CAAb;;AAEA,UAAI1Z,IAAJ,EAAU;AACN,aAAK,MAAMuK,EAAX,IAAiB3K,MAAM,CAACC,IAAP,CAAYG,IAAZ,CAAjB,EAAoC;AAChCA,UAAAA,IAAI,CAACuK,EAAD,CAAJ,CAAS8qB,UAAT,CAAoB,IAApB;AACH;AACJ;AACJ;;AAED,SAAKiB,yBAAL,GACI91B,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAEiK,QAAX,GAAsB8rB,kBAD1B;AAGA,SAAKS,YAAL;AACH;;AAEDrc,EAAAA,KAAK,CACDuc,oBADC,EAEDC,YAFC,EAGDC,cAHC;AAKD,UAAMr0B,GAAG,GAAGwU,OAAO,CAACiB,iBAAR,CACR,KAAKpO,QADG,EAER8sB,oBAFQ,CAAZ;AAKA,UAAM12B,SAAS,GAAGuC,GAAG,SAAH,IAAAA,GAAG,WAAH,SAAA,GAAAA,GAAG,CAAEvC,SAAvB;;AAEA,QAAIA,SAAJ,EAAe;AACX,WAAKod,SAAL,CAAepd,SAAf;AAEA,YAAM2J,KAAK,GAAG3J,SAAS,CAACiK,QAAV,EAAd;AACA,YAAM4sB,aAAa,GAAG72B,SAAS,CAACgK,UAAV,EAAtB;;AAEA,UAAI6sB,aAAJ,EAAmB;AACf,YAAIF,YAAY,KAAK34B,SAArB,EAAgC;AAC5B24B,UAAAA,YAAY,GAAGhtB,KAAK,CAACmtB,cAArB;AACH;;AAED,YACI,CAACH,YAAD,IACA,KAAK/sB,QAAL,CAAc2L,kBAAd,CAAiCgJ,wBAAjC,EADA,IAEA,KAAK3U,QAAL,CAAc6L,cAAd,CAA6BuH,UAA7B,CAAwC;AACpCvW,UAAAA,SAAS,EAAEowB;AADyB,SAAxC,CAHJ,EAME;AACE,iBAAO,IAAP;AACH;;AAED,YAAID,cAAc,KAAK54B,SAAvB,EAAkC;AAC9B44B,UAAAA,cAAc,GAAGjtB,KAAK,CAACotB,gBAAvB;AACH;;AAED,YACI,CAACH,cAAD,IACA,KAAKhtB,QAAL,CAAc6L,cAAd,CAA6BwH,YAA7B,CAA0C4Z,aAA1C,CAFJ,EAGE;AACE,iBAAO,IAAP;AACH;;AAED,aAAKjtB,QAAL,CAAc6L,cAAd,CAA6B2E,UAA7B,CAAwCyc,aAAxC;AACH;AACJ,KAlCD,MAkCO,IAAIh4B,sCAAJ,EAAa;AAChBC,MAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd,EAA8C23B,oBAA9C;AACH;;AAED,WAAO,KAAP;AACH;;AAED1I,EAAAA,aAAa,CACTtwB,OADS,EAET8nB,KAFS;;;AAIT,UAAMmH,eAAe,GAAGnH,KAAK,CAACmH,eAA9B;AACA,UAAMqK,gBAAgB,GAAG,MAAAxR,KAAK,CAACsI,UAAN,UAAA,iBAAA,SAAA,MAAkB9tB,SAA3C;;AAEA,QAAI2sB,eAAJ,EAAqB;AACjB,WAAK,MAAM/tB,CAAX,IAAgB,KAAK81B,cAArB,EAAqC;AACjC,cAAMttB,EAAE,GAAGxI,CAAC,CAAC6F,GAAF,EAAX;;AAEA,YAAI2C,EAAE,KAAK1J,OAAO,CAACsL,QAAR,CAAiB5B,EAAjB,KAAwBA,EAAE,KAAK1J,OAApC,CAAN,EAAoD;AAChD;AACA;AACA,iBAAOwE,UAAU,CAACyrB,WAAlB;AACH;AACJ;AACJ;;AAED,UAAMtZ,GAAG,GACLsY,eAAe,MAAKqK,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,SAAA,GAAAA,gBAAgB,CAAE9d,MAAvB,CAAf,IACC,CAACyT,eAAD,KACGqK,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,SAAA,GAAAA,gBAAgB,CAAE/sB,QAAlB,GAA6B+rB,kBADhC,CADD,GAGMh4B,SAHN,GAIMkE,UAAU,CAACyrB,WALrB;;AAOA,QAAItZ,GAAG,KAAKrW,SAAZ,EAAuB;AACnBwnB,MAAAA,KAAK,CAACgI,gBAAN,GAAyB,IAAzB;AACH;;AAED,WAAOnZ,GAAP;AACH;;AAEOoiB,EAAAA,aAAa;;;AACjB,UAAMh5B,OAAO,GAAG,KAAKmM,QAArB;AACA,UAAMX,IAAI,GAAGxL,OAAO,CAACqD,SAAR,GAAoBI,QAApB,CAA6B+H,IAA1C;AACA,UAAMkQ,QAAQ,GAAG,KAAKA,QAAtB;AAEA,UAAM8d,KAAK,GAAG,KAAK1B,MAAnB;AACA,UAAM2B,eAAe,GAAkB,EAAvC;AACA,UAAMC,cAAc,GAAkB,EAAtC;AACA,UAAM9B,wBAAwB,GAAG,KAAKe,yBAAtC;AACA,UAAMgB,wBAAwB,GAAkB/B,wBAAwB,GAClEgC,KAAK,CAACzlB,IAAN,CAAW3I,IAAI,CAACqV,gBAAL,CAAsB+W,wBAAtB,CAAX,CADkE,GAElE,EAFN;AAGA,UAAMiC,uBAAuB,GAAkB,EAA/C;;AAEA,SAAK,MAAMpe,MAAX,IAAqB9Z,MAAM,CAACC,IAAP,CAAY43B,KAAZ,CAArB,EAAyC;AACrC,YAAMM,cAAc,GAAGN,KAAK,CAAC/d,MAAD,CAA5B;;AAEA,WAAK,MAAMnP,EAAX,IAAiB3K,MAAM,CAACC,IAAP,CAAYk4B,cAAZ,CAAjB,EAA8C;AAC1C,cAAMv3B,SAAS,GAAGu3B,cAAc,CAACxtB,EAAD,CAAhC;AACA,cAAM3C,EAAE,GAAGpH,SAAS,CAACgK,UAAV,EAAX;AACA,cAAML,KAAK,GAAG3J,SAAS,CAACiK,QAAV,EAAd;AACA,cAAM+rB,kBAAkB,GAAGrsB,KAAK,CAACqsB,kBAAjC;;AAEA,YAAI5uB,EAAJ,EAAQ;AACJ,cAAI8R,MAAM,KAAKC,QAAf,EAAyB;AACrBme,YAAAA,uBAAuB,CAAChzB,IAAxB,CAA6B8C,EAA7B;;AAEA,gBAAI,CAAC,KAAK0uB,yBAAV,EAAqC;AACjCoB,cAAAA,eAAe,CAAC5yB,IAAhB,CAAqB8C,EAArB;AACH;AACJ,WAND,MAMO,IAAI4uB,kBAAJ,EAAwB;AAC3BoB,YAAAA,wBAAwB,CAAC9yB,IAAzB,CAA8B8C,EAA9B;AACH,WAFM,MAEA;AACH+vB,YAAAA,cAAc,CAAC7yB,IAAf,CAAoB8C,EAApB;AACH;AACJ;AACJ;AACJ;;AAED,UAAMwuB,YAAY,GAAG,KAAKC,OAA1B;AACA,UAAM2B,kBAAkB,GACpBN,eAAe,CAACt2B,MAAhB,GAAyB,CAAzB,GACM,CAAC,GAAGs2B,eAAJ,EAAqB,GAAGE,wBAAxB,CADN,GAEMp5B,SAHV;AAKA,UAAMy5B,YAAY,GAAmC,EAArD;AACA,UAAMC,eAAe,GAA+B,IAAIp0B,OAAJ,EAApD;;AAEA,UAAMq0B,MAAM,GAAG,CAACj6B,OAAD,EAAuBk6B,IAAvB;;;AACX,YAAM9pB,OAAO,GAAGpQ,OAAO,CAACoQ,OAAxB;;AAEA,UAAIA,OAAO,KAAK,QAAZ,IAAwBA,OAAO,KAAK,OAAxC,EAAiD;AAC7C;AACH;;AAED,UAAI6d,WAAW,GAAG,KAAlB;;AAEA,UAAIiK,YAAY,CAAC1mB,GAAb,CAAiBxR,OAAjB,CAAJ,EAA+B;AAC3B,YAAIk6B,IAAJ,EAAU;AACNjM,UAAAA,WAAW,GAAG,IAAd;AACH,SAFD,MAEO;AACHiK,UAAAA,YAAY,CAAC9lB,MAAb,CAAoBpS,OAApB;AACAyW,UAAAA,gBAAgB,CAAC1W,OAAD,EAAUC,OAAV,EAAmB22B,WAAnB,CAAhB;AACH;AACJ,OAPD,MAOO,IACHuD,IAAI,IACJ,EAAC,MAAA,KAAKvB,gBAAL,UAAA,iBAAA,SAAA,iBAAwB34B,SAAS45B,wBAAlC,CADA,IAEAnjB,gBAAgB,CAAC1W,OAAD,EAAUC,OAAV,EAAmB22B,WAAnB,EAAgC,MAAhC,CAHb,EAIL;AACEuB,QAAAA,YAAY,CAAClmB,GAAb,CAAiBhS,OAAjB,EAA0B,IAA1B;AACAiuB,QAAAA,WAAW,GAAG,IAAd;AACH;;AAED,UAAIA,WAAJ,EAAiB;AACb8L,QAAAA,YAAY,CAACnzB,IAAb,CACI,IAAIJ,eAAJ,CAAoBzG,OAAO,CAACqD,SAA5B,EAAuCpD,OAAvC,CADJ;AAGAg6B,QAAAA,eAAe,CAAChoB,GAAhB,CAAoBhS,OAApB,EAA6B,IAA7B;AACH;AACJ,KA/BD;;AAiCA,UAAMm6B,IAAI,GAAIn6B,OAAD;AACT,WACI,IAAI0J,EAAE,GAAG1J,OAAO,CAACqQ,iBADrB,EAEI3G,EAFJ,EAGIA,EAAE,GAAGA,EAAE,CAAC6G,kBAHZ,EAIE;AACE,YAAIkN,IAAI,GAAG,KAAX;AACA,YAAI2c,iBAAiB,GAAG,KAAxB;;AAEA,YAAIN,kBAAJ,EAAwB;AACpB,eAAK,MAAM7c,CAAX,IAAgB6c,kBAAhB,EAAoC;AAChC,gBAAIpwB,EAAE,KAAKuT,CAAX,EAAc;AACVQ,cAAAA,IAAI,GAAG,IAAP;AACA;AACH;;AAED,gBAAI/T,EAAE,CAAC4B,QAAH,CAAY2R,CAAZ,CAAJ,EAAoB;AAChBmd,cAAAA,iBAAiB,GAAG,IAApB;AACA;AACH;AACJ;;AAED,cAAIA,iBAAJ,EAAuB;AACnBD,YAAAA,IAAI,CAACzwB,EAAD,CAAJ;AACH,WAFD,MAEO,IAAI,CAAC+T,IAAL,EAAW;AACdwc,YAAAA,MAAM,CAACvwB,EAAD,EAAoB,IAApB,CAAN;AACH;AACJ,SAlBD,MAkBO;AACHuwB,UAAAA,MAAM,CAACvwB,EAAD,EAAoB,KAApB,CAAN;AACH;AACJ;AACJ,KA/BD;;AAiCA,QAAI,CAACowB,kBAAL,EAAyB;AACrBJ,MAAAA,wBAAwB,CAAC7f,OAAzB,CAAkC3Y,CAAD,IAAO+4B,MAAM,CAAC/4B,CAAD,EAAI,KAAJ,CAA9C;AACH;;AAEDu4B,IAAAA,cAAc,CAAC5f,OAAf,CAAwB3Y,CAAD,IAAO+4B,MAAM,CAAC/4B,CAAD,EAAI,IAAJ,CAApC;;AAEA,QAAIqK,IAAJ,EAAU;AACN4uB,MAAAA,IAAI,CAAC5uB,IAAD,CAAJ;AACH;;AAED,UAAA,KAAKktB,IAAL,UAAA,iBAAA,SAAA,MACMvnB,IAAKhQ,CAAD,IAAOA,CAAC,CAAC6F,GAAF,IACZ8S,QAAS3Y,CAAD;AACL,UAAIA,CAAC,IAAI,CAAC84B,eAAe,CAACjzB,GAAhB,CAAoB7F,CAApB,CAAV,EAAkC;AAC9B+4B,QAAAA,MAAM,CAAC/4B,CAAD,EAAI,KAAJ,CAAN;AACH;AACJ,MANL;AAQA,SAAKu3B,IAAL,GAAYsB,YAAZ;AACA,SAAK5B,OAAL,GAAe6B,eAAf;AACH;AA0ED;;;;;;;AAKQxB,EAAAA,sBAAsB,CAC1B6B,cAD0B;AAG1B,UAAM9zB,aAAa,GAAG8zB,cAAc,SAAd,IAAAA,cAAc,WAAd,SAAA,GAAAA,cAAc,CAAE9zB,aAAtC;;AAEA,QAAI,CAAC8zB,cAAD,IAAmB,CAAC9zB,aAAxB,EAAuC;AACnC;AACH;;AAED,UAAM1B,GAAG,GAAGwU,OAAO,CAACiB,iBAAR,CAA0B,KAAKpO,QAA/B,EAAyCmuB,cAAzC,CAAZ;AACA,UAAM/3B,SAAS,GAAGuC,GAAG,SAAH,IAAAA,GAAG,WAAH,SAAA,GAAAA,GAAG,CAAEvC,SAAvB;AACA,UAAMmZ,QAAQ,GAAG,KAAKA,QAAtB;;AAEA,QACK,CAACnZ,SAAD,IAAc,CAACmZ,QAAhB,IACCnZ,SAAS,IAAImZ,QAAQ,KAAKnZ,SAAS,CAACkZ,MAFzC,EAGE;AACE;AACH;;AAED,UAAMzS,SAAS,GAAGlE,GAAG,SAAH,IAAAA,GAAG,WAAH,SAAA,GAAAA,GAAG,CAAEjD,IAAL,CAAU0K,UAAV,EAAlB;;AAEA,QAAIvD,SAAJ,EAAe;AACX,UAAI0K,OAAO,GAAG,KAAKvH,QAAL,CAAcxJ,SAAd,CAAwBoe,SAAxB,CAAkC;AAC5C/X,QAAAA,SAD4C;AAE5CgY,QAAAA,kBAAkB,EAAE;AAFwB,OAAlC,CAAd;;AAKA,UAAItN,OAAJ,EAAa;AACT,YACI4mB,cAAc,CAAC5rB,uBAAf,CAAuCgF,OAAvC,IACAjQ,QAAQ,CAAC82B,2BAFb,EAGE;AACE7mB,UAAAA,OAAO,GAAG,KAAKvH,QAAL,CAAcxJ,SAAd,CAAwByrB,QAAxB,CAAiC;AACvCplB,YAAAA,SADuC;AAEvCgY,YAAAA,kBAAkB,EAAE;AAFmB,WAAjC,CAAV;;AAKA,cAAI,CAACtN,OAAL,EAAc;AACV;AACA,kBAAM,IAAIzS,KAAJ,CAAU,uBAAV,CAAN;AACH;AACJ;;AAED,aAAKkL,QAAL,CAAc6L,cAAd,CAA6B0E,KAA7B,CAAmChJ,OAAnC;;AAEA;AACH;AACJ;AAGD;;;AACA4mB,IAAAA,cAAc,CAACniB,IAAf;AACH;;;;AC96BL;;;;;AA2BA,MAAMqiB,cAAc,gBAAG,CAAC,OAAD,EAAU,UAAV,EAAsB,oBAAtB,EAA4Cz8B,IAA5C,CAAiD,IAAjD,CAAvB;;AAEA,MAAM08B,iBAAN,SAAgCxrB,iBAAhC;AAIInL,EAAAA,YACI7D,SACAD,SACA06B,cACAx4B;AAEA,UAAMlC,OAAN,EAAeC,OAAf,EAAwB2O,2BAA2B,CAACG,KAApD,EAA2D7M,GAA3D;;AAQI,2BAAA,GAAsB+Q,UAAD;;;AACzB,YAAMjK,SAAS,GAAG,KAAKoD,QAAL,CAAcpF,GAAd,EAAlB;;AACA,YAAM8F,KAAK,GAAGmG,UAAU,CAACnG,KAAzB;;AAEA,UAAI9D,SAAS,IAAI8D,KAAjB,EAAwB;AACpB,cAAMhI,GAAG,GAAGwU,OAAO,CAACiB,iBAAR,CAA0B,KAAKpO,QAA/B,EAAyCnD,SAAzC,CAAZ;AAEA,YAAI0K,OAAJ;;AAEA,YAAI5O,GAAJ,EAAS;AACL4O,UAAAA,OAAO,GAAG,MAAAke,mBAAmB,CAACU,gBAApB,CACN,KAAKnmB,QADC,EAENrH,GAFM,EAGNvE,SAHM,EAINuM,KAJM,EAKNvM,SALM,EAMN,CAAC0S,UAAU,CAACtF,OANN,EAON,IAPM,CAAA,UAAA,iBAAA,SAAA,MAQP1N,OARH;AASH;;AAED,cAAM06B,SAAS,GAAG,MAAA,KAAKC,aAAL,EAAA,UAAA,iBAAA,SAAA,MAAsB5zB,KAAxC;;AACA,YAAI2zB,SAAJ,EAAe;AACXjnB,UAAAA,OAAO,GAAGinB,SAAV;AACH;;AAED,YAAIjnB,OAAJ,EAAa;AACT7G,UAAAA,WAAW,CAAC6G,OAAD,CAAX;AACH;AACJ;AACJ,KA9BO;;AANJ,SAAKvH,QAAL,GAAgBnM,OAAhB;AACA,SAAK46B,aAAL,GAAqBF,YAArB;;AAEA,SAAKnrB,YAAL,CAAkB,KAAKsrB,kBAAvB;AACH;;;AAoCL;;;AACA,MAAMC,eAAe,GAAG,CAAxB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,kBAAkB,GAAG,CAA3B;MAUajsB,cACD9C;AAmBRnI,EAAAA,YACI9D,SACAC,SACAoY,WACAnM,OACAhK;;;AAEA,UAAMlC,OAAN,EAAeC,OAAf,EAAwBiM,KAAxB;AAlBI,iBAAA,GAA6C,EAA7C;;AAiQA,wBAAA,GAAmB+uB,OAAD;AACtB,WAAK,MAAMv6B,KAAX,IAAoBu6B,OAApB,EAA6B;AACzB,cAAMtxB,EAAE,GAAGjJ,KAAK,CAACuF,MAAjB;AACA,cAAMqG,EAAE,GAAGvB,aAAa,CAAC,KAAK6G,IAAN,EAAYjI,EAAZ,CAAxB;AAEA,YAAIuxB,aAAJ;AACA,YAAIC,YAAY,GAAG,KAAKC,aAAxB;;AAEA,YAAI16B,KAAK,CAAC26B,iBAAN,IAA2B,IAA/B,EAAqC;AACjCH,UAAAA,aAAa,GACTx6B,KAAK,CAAC26B,iBAAN,IAA2B,IAA3B,GACM56B,YAAA,CAAmB5B,OADzB,GAEM4B,YAAA,CAAmB7B,gBAH7B;;AAKA,cAAIs8B,aAAa,KAAKz6B,YAAA,CAAmB5B,OAAzC,EAAkD;AAC9Cs8B,YAAAA,YAAY,GAAG7uB,EAAf;AACH;AACJ,SATD,MASO;AACH4uB,UAAAA,aAAa,GAAGz6B,YAAA,CAAmB9B,SAAnC;AACH;;AAED,YAAI,KAAK28B,QAAL,CAAchvB,EAAd,MAAsB4uB,aAA1B,EAAyC;AACrC,cAAIA,aAAa,KAAK36B,SAAtB,EAAiC;AAC7B,mBAAO,KAAK+6B,QAAL,CAAchvB,EAAd,CAAP;;AAEA,gBAAI6uB,YAAY,KAAK7uB,EAArB,EAAyB;AACrB,qBAAO,KAAK8uB,aAAZ;AACH;AACJ,WAND,MAMO;AACH,iBAAKE,QAAL,CAAchvB,EAAd,IAAoB4uB,aAApB;AACA,iBAAKE,aAAL,GAAqBD,YAArB;AACH;;AAED,gBAAMpT,KAAK,GAAG,KAAKwT,QAAL,CAAc5xB,EAAd,CAAd;;AAEA,cAAIoe,KAAJ,EAAW;AACP7R,YAAAA,YAAY,CAACvM,EAAD,EAAKlJ,cAAL,EAA2BsnB,KAA3B,CAAZ;AACH;AACJ;AACJ;AACJ,KAxCO;;AA7OJ,SAAKnW,IAAL,GAAY5R,OAAO,CAACqD,SAApB;AACA,SAAKm4B,mBAAL,GAA2B,MAAAtvB,KAAK,CAACsvB,mBAAN,UAAA,iBAAA,KAAA,GAA6B,GAAxD;;AAEA,QAAI,KAAKnvB,MAAL,CAAYovB,UAAZ,IAA0B,KAAKpvB,MAAL,CAAYqvB,eAA1C,EAA2D;AACvD,WAAKC,qBAAL,GAA6B,IAAIC,oBAAJ,CACzB,KAAKC,eADoB,EAEzB;AAAEC,QAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,IAAJ,EAAU,GAAV,EAAe,IAAf,EAAqB,CAArB;AAAb,OAFyB,CAA7B;;AAIA,WAAKC,aAAL;AACH;;AAED,SAAKjjB,UAAL,GAAkBT,SAAlB;;AACA,UAAMqiB,YAAY,GAAG,MACjBxuB,KAAK,CAAC8vB,eAAN,GAAwB,KAAKrG,QAA7B,GAAwCp1B,SAD5C;;AAGA,QAAI,CAACP,OAAO,CAACgZ,UAAb,EAAyB;AACrB,WAAKK,YAAL,GAAoB,IAAIohB,iBAAJ,CAChB,KAAKruB,QADW,EAEhBpM,OAFgB,EAGhB06B,YAHgB,EAIhBx4B,GAJgB,CAApB;AAMH;AACJ;;AAED9B,EAAAA,OAAO;;;AACH,SAAK0Y,UAAL,CAAgB,IAAhB;;AAEA,QAAI,KAAK6iB,qBAAT,EAAgC;AAC5B,WAAKA,qBAAL,CAA2BM,UAA3B;;AACA,aAAO,KAAKN,qBAAZ;AACH;;AAED,WAAO,KAAKhG,QAAZ;AACA,WAAO,KAAKyF,aAAZ;AACA,WAAO,KAAKc,YAAZ;AACA,WAAO,KAAK3pB,YAAZ;;AAEA,QAAI,KAAK4pB,UAAT,EAAqB;AACjB,WAAKA,UAAL;;AACA,aAAO,KAAKA,UAAZ;AACH;;AAED,UAAMt3B,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AAEA,QAAI,KAAKwqB,gBAAT,EAA2B;AACvBv3B,MAAAA,GAAG,CAACa,YAAJ,CAAiB,KAAK02B,gBAAtB;AACA,aAAO,KAAKA,gBAAZ;AACH;;AAED,QAAI,KAAK9pB,YAAT,EAAuB;AACnBzN,MAAAA,GAAG,CAACa,YAAJ,CAAiB,KAAK4M,YAAtB;AACA,aAAO,KAAKA,YAAZ;AACH;;AAED,UAAA,KAAK+G,YAAL,UAAA,iBAAA,SAAA,MAAmBjZ,SAAnB;AACA,WAAO,KAAKiZ,YAAZ;AACH;;AAEDgjB,EAAAA,UAAU,CAACp8B,OAAD;AACN,QAAIA,OAAJ,EAAa;AACT,WAAK01B,QAAL,GAAgB,IAAIlvB,eAAJ,CAAoB,KAAKmL,IAAzB,EAA+B3R,OAA/B,CAAhB;AACH,KAFD,MAEO;AACH,WAAK01B,QAAL,GAAgBp1B,SAAhB;AACH;;AAED,QACI,CAAC,KAAK8L,MAAL,CAAYovB,UAAZ,IAA0B,KAAKpvB,MAAL,CAAYqvB,eAAvC,KACA,CAAC,KAAKU,gBAFV,EAGE;AACE,WAAKA,gBAAL,GAAwB,KAAKxqB,IAAL,GAAYtK,UAAZ,CAAuB;;;AAC3C,eAAO,KAAK80B,gBAAZ;AAEA,cAAME,OAAO,GAAoC,EAAjD;;AAEA,YAAI,KAAK3G,QAAL,KAAkB,KAAK4G,YAA3B,EAAyC;AACrCD,UAAAA,OAAO,CAACz1B,IAAR,CAAa,KAAK8uB,QAAlB;AACA2G,UAAAA,OAAO,CAACz1B,IAAR,CAAa,KAAK01B,YAAlB;AACA,eAAKA,YAAL,GAAoB,KAAK5G,QAAzB;AACH;;AAED,aAAK,MAAM6G,IAAX,IAAmBF,OAAnB,EAA4B;AACxB,gBAAM3yB,EAAE,GAAG6yB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,SAAA,GAAAA,IAAI,CAAEx1B,GAAN,EAAX;;AAEA,cAAI2C,EAAE,IAAI,CAAA,MAAA,KAAKuyB,YAAL,UAAA,iBAAA,SAAA,MAAmBl1B,IAAI2C,GAAvB,MAA+B,IAAzC,EAA+C;AAC3C,kBAAMuC,KAAK,GAAG,KAAKG,MAAnB;;AAEA,gBACI1C,EAAE,KACDuC,KAAK,CAACwvB,eAAN,KAA0Bn7B,SAA1B,IACG2L,KAAK,CAACuvB,UAFR,CADN,EAIE;AACE,oBAAM1T,KAAK,GAAG,KAAKwT,QAAL,CAAc5xB,EAAd,CAAd;;AAEA,kBAAIoe,KAAJ,EAAW;AACP7R,gBAAAA,YAAY,CAACvM,EAAD,EAAKlJ,cAAL,EAA2BsnB,KAA3B,CAAZ;AACH;AACJ;AACJ;AACJ;AACJ,OA9BuB,CAAxB;AA+BH;AACJ;;AAED0U,EAAAA,UAAU;;;AACN,WAAO,CAAA,MAAA,KAAK9G,QAAL,UAAA,iBAAA,SAAA,MAAe3uB,KAAf,KAAwB,IAA/B;AACH;;AAEDsrB,EAAAA,gBAAgB,CACZ1D,cADY,EAEZlU,gBAFY,EAGZxK,UAHY,EAIZgI,mBAJY;;;AAMZ,UAAMlP,SAAS,GAAG,KAAKuD,UAAL,EAAlB;AACA,UAAM+nB,cAAc,GAChBtrB,SAAS,IACT,CAAA,MACI4lB,cACH,SADG,IAAAA,cAAc,WAAd,SAAA,GAAAA,cAAc,CACf3gB,uBAFH,UAAA,iBAAA,SAAA,MAE4BjH,KAF5B,MAEsCgC,SAJ1C;;AAMA,QAAI,CAACA,SAAL,EAAgB;AACZ,aAAO,IAAP;AACH;;AAED,QAAIqpB,IAAI,GAAmC,IAA3C;AACA,QAAIzC,aAAa,GAAG,KAApB;AACA,QAAI3sB,YAAJ;;AAEA,QACI,KAAKoJ,MAAL,CAAY0D,QAAZ,IACAukB,cADA,IAEC1F,cAAc,IAAI,CAAC5lB,SAAS,CAACuC,QAAV,CAAmBqjB,cAAnB,CAHxB,EAIE;AACE,YAAMqF,SAAS,GAAwB;AACnCrF,QAAAA,cADmC;AAEnClU,QAAAA,gBAFmC;AAGnC1R,QAAAA,SAHmC;AAInCkP,QAAAA,mBAJmC;AAKnC8I,QAAAA,kBAAkB,EAAE;AALe,OAAvC;AAQA,YAAMkT,YAAY,GAAmC,EAArD;AAEA7B,MAAAA,IAAI,GAAG,KAAKlmB,QAAL,CAAcxJ,SAAd,CACHuN,UAAU,GAAG,UAAH,GAAgB,UADvB,EAEL+jB,SAFK,EAEMC,YAFN,CAAP;AAIAtE,MAAAA,aAAa,GAAG,CAAC,CAACsE,YAAY,CAACtE,aAA/B;AACA3sB,MAAAA,YAAY,GAAGixB,YAAY,CAACjxB,YAA5B;AACH;;AAED,WAAO;AACHhD,MAAAA,OAAO,EAAEoyB,IADN;AAEHpvB,MAAAA,YAFG;AAGH2sB,MAAAA;AAHG,KAAP;AAKH;;AAEDW,EAAAA,aAAa,CACTtwB,OADS,EAET8nB,KAFS;;;AAIT,QAAI,CAAC6J,mBAAmB,CAACgC,SAAzB,EAAoC;AAChC,aAAO,CAAA,MAAA7L,KAAK,CAACsI,UAAN,UAAA,iBAAA,SAAA,MAAkBzV,iBAAlB,IACDnW,UAAU,CAAC0rB,aADV,GAED5vB,SAFN;AAGH;;AAED,UAAM;AACFy7B,MAAAA,eADE;AAEFN,MAAAA,eAFE;AAGFgB,MAAAA,UAAU,GAAG;AAHX,QAIF,KAAKrwB,MAJT;AAKA,UAAMqkB,YAAY,GAAG,KAAKnkB,UAAL,EAArB;;AAEA,QACImkB,YAAY,KACXsL,eAAe,IAAIN,eAAnB,IAAsCgB,UAD3B,CAAZ,KAEC,CAAChM,YAAY,CAACnlB,QAAb,CAAsBwc,KAAK,CAAC5T,IAA5B,CAAD,IACG,CAAA,MACI4T,KAAK,CAAC5T,IAAN,CACFlG,uBAFF,UAAA,iBAAA,SAAA,MAE2BjH,KAF3B,MAEqC0pB,YALzC,CADJ,EAOE;AACE,UAAI/B,KAAJ;;AAEA,UAAIqN,eAAJ,EAAqB;AACjB,cAAMxtB,OAAO,GAAG,MAAA,KAAKmnB,QAAL,UAAA,iBAAA,SAAA,MAAe3uB,KAA/B;;AAEA,YAAIwH,OAAO,IAAIuZ,KAAK,CAACwG,eAAN,CAAsB/f,OAAtB,CAAf,EAA+C;AAC3CmgB,UAAAA,KAAK,GAAGngB,OAAR;AACH;AACJ;;AAED,UAAI,CAACmgB,KAAD,IAAU+N,UAAd,EAA0B;AACtB/N,QAAAA,KAAK,GAAG,KAAKxiB,QAAL,CAAcxJ,SAAd,CAAwBwd,WAAxB,CAAoC;AACxCnX,UAAAA,SAAS,EAAE0nB,YAD6B;AAExC1P,UAAAA,kBAAkB,EAAE;AAFoB,SAApC,CAAR;AAIH;;AAED,UAAI,CAAC2N,KAAD,IAAU+M,eAAd,EAA+B;AAC3B/M,QAAAA,KAAK,GAAG,KAAKxiB,QAAL,CAAcxJ,SAAd,CAAwB0kB,WAAxB,CAAoC;AACxCre,UAAAA,SAAS,EAAE0nB,YAD6B;AAExC1P,UAAAA,kBAAkB,EAAE,IAFoB;AAGxC9Q,UAAAA,UAAU,EAAE6X,KAAK,CAAC7X,UAHsB;AAIxCqe,UAAAA,eAAe,EAAG5kB,EAAD;;;AACb,kBAAM2C,EAAE,GAAGvB,aAAa,CAAC,KAAK6G,IAAN,EAAYjI,EAAZ,CAAxB;AACA,kBAAMgkB,UAAU,GAAG,KAAK2N,QAAL,CAAchvB,EAAd,CAAnB;AAEA,mBACIokB,YAAY,KAAK/mB,EAAjB,IACA,CAAC,EAAC,MAAA,KAAKuyB,YAAL,UAAA,iBAAA,SAAA,MAAmBl1B,IAAI2C,GAAxB,CADD,IAEAoe,KAAK,CAACwG,eAAN,CAAsB5kB,EAAtB,CAFA,KAGCgkB,UAAU,KAAKltB,YAAA,CAAmB5B,OAAlC,IACI8uB,UAAU,KACPltB,YAAA,CAAmB7B,gBADtB,KAEI88B,eAAe,KACZj7B,YAAA,CAAmB7B,gBADtB,IAEG,CAAC,KAAKw8B,aAJb,CAJL,CADJ;AAWH;AAnBuC,SAApC,CAAR;AAqBH;;AAED,UAAIzM,KAAJ,EAAW;AACP5G,QAAAA,KAAK,CAAC4G,KAAN,GAAc,IAAd;AACA5G,QAAAA,KAAK,CAAC0H,YAAN,GAAqBd,KAArB;AACA5G,QAAAA,KAAK,CAACqI,kBAAN,GAA2BM,YAA3B;AACA3I,QAAAA,KAAK,CAACgI,gBAAN,GAAyB,IAAzB;AACA,eAAOtrB,UAAU,CAACqrB,aAAlB;AACH;AACJ;;AAED,WAAOvvB,SAAP;AACH;;AA4COw7B,EAAAA,aAAa;AACjB,UAAM97B,OAAO,GAAG,KAAKsM,UAAL,EAAhB;;AAEA,QACI,KAAK4vB,UAAL,IACA,CAACl8B,OADD,IAEA,OAAO08B,gBAAP,KAA4B,WAHhC,EAIE;AACE;AACH;;AAED,UAAM93B,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AACA,UAAM8lB,WAAW,GAAI,KAAKwE,YAAL,GAAoB,IAAIr2B,OAAJ,EAAzC;AACA,UAAM+2B,gBAAgB,GAAG,KAAKzwB,QAAL,CAAcxJ,SAAvC;AACA,QAAIk6B,WAAW,GAA4B,KAAKtqB,YAAL,GAAoB,EAA/D;AAEA,UAAMuqB,QAAQ,GAAG,IAAIH,gBAAJ,CAAsBI,SAAD;AAClC,WAAK,MAAMC,QAAX,IAAuBD,SAAvB,EAAkC;AAC9B,cAAM92B,MAAM,GAAG+2B,QAAQ,CAAC/2B,MAAxB;AACA,cAAM+V,OAAO,GAAGghB,QAAQ,CAACC,YAAzB;AACA,cAAMC,KAAK,GAAGF,QAAQ,CAACG,UAAvB;;AAEA,YAAIH,QAAQ,CAAC9W,IAAT,KAAkB,YAAtB,EAAoC;AAChC,cAAI8W,QAAQ,CAACI,aAAT,KAA2B,UAA/B,EAA2C;AACvCP,YAAAA,WAAW,CAACh2B,IAAZ,CAAiB;AACb5G,cAAAA,OAAO,EAAEgG,MADI;AAEbigB,cAAAA,IAAI,EAAE6U;AAFO,aAAjB;AAIH;AACJ,SAPD,MAOO;AACH,eAAK,IAAItwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuR,OAAO,CAAC7Y,MAA5B,EAAoCsH,CAAC,EAArC,EAAyC;AACrCoyB,YAAAA,WAAW,CAACh2B,IAAZ,CAAiB;AACb5G,cAAAA,OAAO,EAAE+b,OAAO,CAACvR,CAAD,CADH;AAEbyb,cAAAA,IAAI,EAAE8U;AAFO,aAAjB;AAIH;;AAED,eAAK,IAAIvwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyyB,KAAK,CAAC/5B,MAA1B,EAAkCsH,CAAC,EAAnC,EAAuC;AACnCoyB,YAAAA,WAAW,CAACh2B,IAAZ,CAAiB;AACb5G,cAAAA,OAAO,EAAEi9B,KAAK,CAACzyB,CAAD,CADD;AAEbyb,cAAAA,IAAI,EAAE4U;AAFO,aAAjB;AAIH;AACJ;AACJ;;AAEDuC,MAAAA,aAAa;AAChB,KA/BgB,CAAjB;;AAiCA,UAAMC,UAAU,GAAG,CAACr9B,OAAD,EAAuBmS,MAAvB;;;AACf,YAAM5D,OAAO,GAAGkpB,WAAW,CAAC1wB,GAAZ,CAAgB/G,OAAhB,CAAhB;;AAEA,UAAIuO,OAAO,IAAI4D,MAAf,EAAuB;AACnB,cAAA,KAAKupB,qBAAL,UAAA,iBAAA,SAAA,MAA4B4B,UAAUt9B,QAAtC;AACAy3B,QAAAA,WAAW,CAACrlB,MAAZ,CAAmBpS,OAAnB;AACH;;AAED,UAAI,CAACuO,OAAD,IAAY,CAAC4D,MAAjB,EAAyB;AACrBslB,QAAAA,WAAW,CAACzlB,GAAZ,CAAgBhS,OAAhB,EAAyB,IAAzB;AACA,cAAA,KAAK07B,qBAAL,UAAA,iBAAA,SAAA,MAA4B6B,QAAQv9B,QAApC;AACH;AACJ,KAZD;;AAcA,UAAMw9B,aAAa,GAAIx9B,OAAD;AAClB,YAAMsQ,WAAW,GAAGqsB,gBAAgB,CAACrsB,WAAjB,CAA6BtQ,OAA7B,CAApB;AACA,YAAMuO,OAAO,GAAGkpB,WAAW,CAAC1wB,GAAZ,CAAgB/G,OAAhB,CAAhB;;AAEA,UAAIuO,OAAJ,EAAa;AACT,YAAI,CAAC+B,WAAL,EAAkB;AACd+sB,UAAAA,UAAU,CAACr9B,OAAD,EAAU,IAAV,CAAV;AACH;AACJ,OAJD,MAIO;AACH,YAAIsQ,WAAJ,EAAiB;AACb+sB,UAAAA,UAAU,CAACr9B,OAAD,CAAV;AACH;AACJ;AACJ,KAbD;;AAeA,UAAMy9B,cAAc,GAAIz9B,OAAD;AACnB,YAAM;AAAE6C,QAAAA;AAAF,UAAY66B,gBAAgB,CAAC19B,OAAD,CAAlC;;AAEA,UAAI6C,KAAK,IAAIA,KAAK,KAAK,IAAvB,EAA6B;AACzB,YACIA,KAAK,CAACyJ,UAAN,OAAuBtM,OAAvB,IACA28B,gBAAgB,CAACrsB,WAAjB,CAA6BtQ,OAA7B,CAFJ,EAGE;AACEq9B,UAAAA,UAAU,CAACr9B,OAAD,CAAV;AACH,SALD,MAKO;AACH;AACH;AACJ;;AAED,YAAMmvB,MAAM,GAAG5nB,uBAAuB,CAClC3C,GAAG,CAACpB,QAD8B,EAElCxD,OAFkC,EAGjCovB,IAAD;AACI,cAAM;AAAEvsB,UAAAA,KAAF;AAASF,UAAAA;AAAT,YAAsB+6B,gBAAgB,CACxCtO,IADwC,CAA5C;;AAIA,YAAIvsB,KAAK,IAAIA,KAAK,KAAK,IAAvB,EAA6B;AACzB,iBAAO2B,UAAU,CAAC0rB,aAAlB;AACH;;AAED,cAAMqE,sBAAsB,GAAG5xB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,SAAA,GAAAA,QAAQ,CAAE6xB,QAAV,CAAmB,IAAnB,CAA/B;;AAEA,YACI7xB,QAAQ,IACRA,QAAQ,CAAC2J,UAAT,OAA0B8iB,IAD1B,IAEAmF,sBAFA,IAGAA,sBAAsB,KAAKnF,IAJ/B,EAKE;AACE,iBAAO5qB,UAAU,CAAC0rB,aAAlB;AACH;;AAED,YAAIyM,gBAAgB,CAACrsB,WAAjB,CAA6B8e,IAA7B,CAAJ,EAAuD;AACnDiO,UAAAA,UAAU,CAACjO,IAAD,CAAV;AACH;;AAED,eAAO5qB,UAAU,CAACyrB,WAAlB;AACH,OA5BiC,CAAtC;;AA+BA,UAAId,MAAJ,EAAY;AACRA,QAAAA,MAAM,CAACS,WAAP,GAAqB5vB,OAArB;;AAEA,eAAOmvB,MAAM,CAACa,QAAP,EAAP,EAA0B;AACtB;AACH;AACJ;AACJ,KApDD;;AAsDA,UAAM2N,UAAU,GAAI39B,OAAD;AACf,YAAMuO,OAAO,GAAGkpB,WAAW,CAAC1wB,GAAZ,CAAgB/G,OAAhB,CAAhB;;AAEA,UAAIuO,OAAJ,EAAa;AACT8uB,QAAAA,UAAU,CAACr9B,OAAD,EAAU,IAAV,CAAV;AACH;;AAED,WACI,IAAI0J,EAAE,GAAG1J,OAAO,CAACqQ,iBADrB,EAEI3G,EAFJ,EAGIA,EAAE,GAAGA,EAAE,CAAC6G,kBAHZ,EAIE;AACEotB,QAAAA,UAAU,CAACj0B,EAAD,CAAV;AACH;AACJ,KAdD;;AAgBA,UAAM0zB,aAAa,GAAG;AAClB,UAAI,CAAC,KAAK/qB,YAAN,IAAsBuqB,WAAW,CAAC15B,MAAtC,EAA8C;AAC1C,aAAKmP,YAAL,GAAoBzN,GAAG,CAACyC,UAAJ,CAAe;AAC/B,iBAAO,KAAKgL,YAAZ;;AAEA,eAAK,MAAM;AAAErS,YAAAA,OAAF;AAAWimB,YAAAA;AAAX,WAAX,IAAgC2W,WAAhC,EAA6C;AACzC,oBAAQ3W,IAAR;AACI,mBAAK6U,gBAAL;AACI0C,gBAAAA,aAAa,CAACx9B,OAAD,CAAb;AACA;;AACJ,mBAAK66B,eAAL;AACI4C,gBAAAA,cAAc,CAACz9B,OAAD,CAAd;AACA;;AACJ,mBAAK+6B,kBAAL;AACI4C,gBAAAA,UAAU,CAAC39B,OAAD,CAAV;AACA;AATR;AAWH;;AAED48B,UAAAA,WAAW,GAAG,KAAKtqB,YAAL,GAAoB,EAAlC;AACH,SAlBmB,EAkBjB,CAlBiB,CAApB;AAmBH;AACJ,KAtBD;;AAwBA,UAAMorB,gBAAgB,GAClB19B,OADqB;AAGrB,YAAM2W,GAAG,GAGL,EAHJ;;AAKA,WACI,IAAIjN,EAAE,GAAuB1J,OADjC,EAEI0J,EAFJ,EAGIA,EAAE,GAAGA,EAAE,CAACC,aAHZ,EAIE;AACE,cAAMi0B,GAAG,GAAG99B,mBAAmB,CAAC,KAAKoM,QAAN,EAAgBxC,EAAhB,CAA/B;;AAEA,YAAIk0B,GAAJ,EAAS;AACL,cAAIA,GAAG,CAACj7B,QAAJ,IAAgB,CAACgU,GAAG,CAAChU,QAAzB,EAAmC;AAC/BgU,YAAAA,GAAG,CAAChU,QAAJ,GAAei7B,GAAG,CAACj7B,QAAnB;AACH;;AAED,cAAIi7B,GAAG,CAAC/6B,KAAR,EAAe;AACX8T,YAAAA,GAAG,CAAC9T,KAAJ,GAAY+6B,GAAG,CAAC/6B,KAAhB;AACA;AACH;AACJ;AACJ;;AAED,aAAO8T,GAAP;AACH,KA5BD;;AA8BAimB,IAAAA,WAAW,CAACh2B,IAAZ,CAAiB;AAAE5G,MAAAA,OAAF;AAAWimB,MAAAA,IAAI,EAAE4U;AAAjB,KAAjB;AACAuC,IAAAA,aAAa;AAEbP,IAAAA,QAAQ,CAACU,OAAT,CAAiBv9B,OAAjB,EAA0B;AACtB69B,MAAAA,SAAS,EAAE,IADW;AAEtBC,MAAAA,OAAO,EAAE,IAFa;AAGtBC,MAAAA,UAAU,EAAE,IAHU;AAItBC,MAAAA,eAAe,EAAE,CAAC,UAAD;AAJK,KAA1B;;AAOA,SAAK9B,UAAL,GAAkB;AACdW,MAAAA,QAAQ,CAACb,UAAT;AACH,KAFD;AAGH;;AAEDV,EAAAA,QAAQ,CAACt7B,OAAD;AACJ,UAAMqM,EAAE,GAAGvB,aAAa,CAAC,KAAK6G,IAAN,EAAY3R,OAAZ,CAAxB;;AAEA,QAAIqM,EAAE,IAAI,KAAKgvB,QAAf,EAAyB;AACrB,YAAM3N,UAAU,GACZ,KAAK2N,QAAL,CAAchvB,EAAd,KAAqB7L,YAAA,CAAmB9B,SAD5C;AAEA,YAAMu/B,SAAS,GAAG,KAAKvI,QAAL,GACZ,KAAKA,QAAL,CAAc3uB,GAAd,OAAwB/G,OADZ,GAEZM,SAFN;AAIA,aAAO;AACH29B,QAAAA,SADG;AAEHvQ,QAAAA;AAFG,OAAP;AAIH;;AAED,WAAOptB,SAAP;AACH;;;AAQL;;;;;;;;;;;;;;;AAaA,SAAS49B,WAAT,CACIC,GADJ,EAEIC,GAFJ,EAGIC,GAHJ,EAIIC,GAJJ,EAKIC,GALJ,EAMIC,GANJ,EAOIC,GAPJ,EAQIC,GARJ;AAUI,QAAMC,SAAS,GAAGN,GAAG,GAAGE,GAAN,GAAYA,GAAG,GAAGF,GAAlB,GAAwBI,GAAG,GAAGN,GAAN,GAAYA,GAAG,GAAGM,GAAlB,GAAwB,CAAlE;AACA,QAAMG,SAAS,GAAGN,GAAG,GAAGE,GAAN,GAAYA,GAAG,GAAGF,GAAlB,GAAwBI,GAAG,GAAGN,GAAN,GAAYA,GAAG,GAAGM,GAAlB,GAAwB,CAAlE;AAEA,SAAOC,SAAS,KAAK,CAAd,GACDC,SADC,GAEDA,SAAS,KAAK,CAAd,GACAD,SADA,GAEAn2B,IAAI,CAACq2B,IAAL,CAAUF,SAAS,GAAGA,SAAZ,GAAwBC,SAAS,GAAGA,SAA9C,CAJN;AAKH;;MAEYE;AAOTj7B,EAAAA,YAAY9D,SAA4BqD;AAQhC,cAAA,GAAQ;AACZ,YAAMwB,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AAEA/M,MAAAA,GAAG,CAACiJ,gBAAJ,CAAqB,SAArB,EAAgC,KAAKgkB,UAArC,EAAiD,IAAjD;;AAEA,WAAK3lB,QAAL,CAAc6L,cAAd,CAA6BqJ,SAA7B,CAAuC,KAAKnO,QAA5C;AACH,KANO;;AAkDA,wBAAA,GAAmBpQ,KAAD;AACtB,aAAO,KAAKk8B,OAAL,CAAal8B,KAAK,CAACwJ,EAAnB,CAAP;AACH,KAFO;;AAIA,iBAAA,GAAYrM,OAAD;;AAEf;AACA;AACA;AACA;AACA;;;AACA,UAAIg/B,uBAAuB,GAAGh/B,OAA9B;AACA,UAAIi/B,uBAAuB,GAAGj/B,OAA9B;;AAEA,WACI,IAAI0J,EAAE,GAAmC1J,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE2J,aADtD,EAEID,EAFJ,EAGIA,EAAE,GAAGA,EAAE,CAACC,aAHZ,EAIE;AACE;AACA;AACA;AACA,cAAM9G,KAAK,GAAG,MAAA/C,mBAAmB,CAAC,KAAKoM,QAAN,EAAgBxC,EAAhB,CAAnB,UAAA,iBAAA,SAAA,MAAwC7G,KAAtD;;AAEA,YAAIA,KAAJ,EAAW;AACPA,UAAAA,KAAK,CAACu5B,UAAN,CAAiB6C,uBAAjB;AACAD,UAAAA,uBAAuB,GAAG1+B,SAA1B;AACH;;AAED,YACI,CAAC0+B,uBAAD,IACA,KAAK9yB,QAAL,CAAcxJ,SAAd,CAAwB4N,WAAxB,CAAoC5G,EAApC,CAFJ,EAGE;AACEs1B,UAAAA,uBAAuB,GAAGC,uBAAuB,GAAGv1B,EAApD;AACH;AACJ;AACJ,KAhCO;;AAkCA,mBAAA,GAAa,MAAO0M,KAAP;;;AACjB,UAAI,KAAK8oB,kBAAT,EAA6B;AACzB,aAAKvtB,IAAL,GAAYlM,YAAZ,CAAyB,KAAKy5B,kBAA9B;;AACA,eAAO,KAAKA,kBAAZ;AACH;;AAED,YAAA,KAAKC,oBAAL,UAAA,iBAAA,SAAA,iBAA4B,MAA5B;AAEA,UAAInN,OAAO,GAAG5b,KAAK,CAAC4b,OAApB;AAGA;;AACA,UAAI5b,KAAK,CAAC6b,OAAN,IAAiB7b,KAAK,CAACmf,MAAvB,IAAiCnf,KAAK,CAAC+b,QAAvC,IAAmD/b,KAAK,CAACof,OAA7D,EAAsE;AAClE;AACH;;AAED,cAAQxD,OAAR;AACI,aAAKtB,IAAI,CAACY,IAAV;AACA,aAAKZ,IAAI,CAACW,KAAV;AACA,aAAKX,IAAI,CAACU,EAAV;AACA,aAAKV,IAAI,CAACS,IAAV;AACA,aAAKT,IAAI,CAACM,QAAV;AACA,aAAKN,IAAI,CAACK,MAAV;AACA,aAAKL,IAAI,CAACQ,IAAV;AACA,aAAKR,IAAI,CAACO,GAAV;AACI;;AACJ;AACI;AAXR;;AAcA,YAAMlxB,OAAO,GAAG,KAAKmM,QAArB;AACA,YAAMggB,OAAO,GAAGnsB,OAAO,CAACgY,cAAR,CAAuB6J,iBAAvB,EAAhB;;AAEA,UAAI,CAACsK,OAAD,KAAa,MAAM,KAAKkT,eAAL,CAAqBlT,OAArB,EAA8B8F,OAA9B,CAAnB,CAAJ,EAAgE;AAC5D;AACH;;AAED,YAAMntB,GAAG,GAAGwU,OAAO,CAACiB,iBAAR,CAA0Bva,OAA1B,EAAmCmsB,OAAnC,EAA4C;AACpD1R,QAAAA,QAAQ,EAAE;AAD0C,OAA5C,CAAZ;;AAIA,UACI,CAAC3V,GAAD,IACA,CAACA,GAAG,CAAChC,KADL,IAEAgC,GAAG,CAAC8V,iBAFJ,IAGA9V,GAAG,CAACkW,aAAJ,CAAkB3E,KAAlB,CAJJ,EAKE;AACE;AACH;;AAED,YAAMvT,KAAK,GAAGgC,GAAG,CAAChC,KAAlB;AACA,YAAMkG,SAAS,GAAGlG,KAAK,CAACyJ,UAAN,EAAlB;;AAEA,UAAIzH,GAAG,CAAC+V,mBAAR,EAA6B;AACzB,cAAMjY,QAAQ,GAAGkC,GAAG,CAAClC,QAArB;;AAEA,YAAIA,QAAQ,IAAI,CAACA,QAAQ,CAAC2Y,QAAT,CAAkB,IAAlB,CAAjB,EAA0C;AACtC;AACA;AACA,eACI,IAAI5R,EAAE,GACF,MAAA/G,QAAQ,CAAC2J,UAAT,EAAA,UAAA,iBAAA,SAAA,MAAuB3C,aAF/B,EAGID,EAAE,IAAIA,EAAE,KAAKX,SAHjB,EAIIW,EAAE,GAAGA,EAAE,CAACC,aAJZ,EAKE;AACE,gBACI,MAAA,MAAA7J,mBAAmB,CAACC,OAAD,EAAU2J,EAAV,CAAnB,UAAA,iBAAA,SAAA,MAAkC/G,QAAlC,UAAA,iBAAA,SAAA,MAA4C2Y,SACxC,KAFR,EAIE;AACE;AACH;AACJ;AACJ,SAjBD,MAiBO;AACH;AACH;AACJ;;AAED,UAAI,CAACvS,SAAL,EAAgB;AACZ;AACH;;AAED,YAAMrG,SAAS,GAAG3C,OAAO,CAAC2C,SAA1B;AACA,YAAM28B,UAAU,GAAGx8B,KAAK,CAAC0J,QAAN,EAAnB;AACA,YAAM+yB,SAAS,GAAGD,UAAU,CAACC,SAAX,IAAwB9+B,eAAA,CAAsBvB,IAAhE;AACA,YAAMsgC,MAAM,GAAGD,SAAS,KAAK9+B,eAAA,CAAsBvB,IAAnD;AACA,YAAMugC,UAAU,GACZD,MAAM,IAAID,SAAS,KAAK9+B,eAAA,CAAsBtB,QADlD;AAEA,YAAMugC,YAAY,GACdF,MAAM,IAAID,SAAS,KAAK9+B,eAAA,CAAsBrB,UADlD;AAEA,YAAMugC,YAAY,GAAGJ,SAAS,KAAK9+B,eAAA,CAAsBnB,UAAzD;AACA,YAAMsgC,MAAM,GAAGD,YAAY,IAAIJ,SAAS,KAAK9+B,eAAA,CAAsBpB,IAAnE;AACA,YAAMwgC,QAAQ,GAAGP,UAAU,CAACQ,MAA5B;AAEA,UAAIzN,IAAJ;AAEA,UAAI0N,kBAAJ;AACA,UAAIC,gBAAgB,GAAG,CAAvB;AACA,UAAIC,gBAAgB,GAAG,CAAvB;;AAEA,UAAIL,MAAJ,EAAY;AACRG,QAAAA,kBAAkB,GAAG5T,OAAO,CAAC3jB,qBAAR,EAArB;AACAw3B,QAAAA,gBAAgB,GAAGv3B,IAAI,CAACy3B,IAAL,CAAUH,kBAAkB,CAAC57B,IAA7B,CAAnB;AACA87B,QAAAA,gBAAgB,GAAGx3B,IAAI,CAAC03B,KAAL,CAAWJ,kBAAkB,CAAC17B,KAA9B,CAAnB;AACH;;AAED,UAAIS,GAAG,CAACgX,GAAR,EAAa;AACT,YAAImW,OAAO,KAAKtB,IAAI,CAACW,KAArB,EAA4B;AACxBW,UAAAA,OAAO,GAAGtB,IAAI,CAACS,IAAf;AACH,SAFD,MAEO,IAAIa,OAAO,KAAKtB,IAAI,CAACS,IAArB,EAA2B;AAC9Ba,UAAAA,OAAO,GAAGtB,IAAI,CAACW,KAAf;AACH;AACJ;;AAED,UACKW,OAAO,KAAKtB,IAAI,CAACY,IAAjB,IAAyBkO,UAA1B,IACCxN,OAAO,KAAKtB,IAAI,CAACW,KAAjB,KAA2BoO,YAAY,IAAIE,MAA3C,CAFL,EAGE;AACEvN,QAAAA,IAAI,GAAG1vB,SAAS,CAAC0rB,QAAV,CAAmB;AACtBO,UAAAA,cAAc,EAAEzC,OADM;AAEtBnjB,UAAAA,SAFsB;AAGtBgY,UAAAA,kBAAkB,EAAE;AAHE,SAAnB,CAAP;;AAMA,YAAIqR,IAAI,IAAIuN,MAAZ,EAAoB;AAChB,gBAAMQ,aAAa,GAAG33B,IAAI,CAACy3B,IAAL,CAClB7N,IAAI,CAAC7pB,qBAAL,GAA6BrE,IADX,CAAtB;;AAIA,cAAI,CAACw7B,YAAD,IAAiBM,gBAAgB,GAAGG,aAAxC,EAAuD;AACnD/N,YAAAA,IAAI,GAAG9xB,SAAP;AACH;AACJ,SARD,MAQO,IAAI,CAAC8xB,IAAD,IAASwN,QAAb,EAAuB;AAC1BxN,UAAAA,IAAI,GAAG1vB,SAAS,CAACoe,SAAV,CAAoB;AACvB/X,YAAAA,SADuB;AAEvBgY,YAAAA,kBAAkB,EAAE;AAFG,WAApB,CAAP;AAIH;AACJ,OAxBD,MAwBO,IACFiR,OAAO,KAAKtB,IAAI,CAACU,EAAjB,IAAuBoO,UAAxB,IACCxN,OAAO,KAAKtB,IAAI,CAACS,IAAjB,KAA0BsO,YAAY,IAAIE,MAA1C,CAFE,EAGL;AACEvN,QAAAA,IAAI,GAAG1vB,SAAS,CAAC2rB,QAAV,CAAmB;AACtBM,UAAAA,cAAc,EAAEzC,OADM;AAEtBnjB,UAAAA,SAFsB;AAGtBgY,UAAAA,kBAAkB,EAAE;AAHE,SAAnB,CAAP;;AAMA,YAAIqR,IAAI,IAAIuN,MAAZ,EAAoB;AAChB,gBAAMS,aAAa,GAAG53B,IAAI,CAAC03B,KAAL,CAClB9N,IAAI,CAAC7pB,qBAAL,GAA6BnE,KADX,CAAtB;;AAIA,cAAI,CAACs7B,YAAD,IAAiBU,aAAa,GAAGL,gBAArC,EAAuD;AACnD3N,YAAAA,IAAI,GAAG9xB,SAAP;AACH;AACJ,SARD,MAQO,IAAI,CAAC8xB,IAAD,IAASwN,QAAb,EAAuB;AAC1BxN,UAAAA,IAAI,GAAG1vB,SAAS,CAACyrB,QAAV,CAAmB;AACtBplB,YAAAA,SADsB;AAEtBgY,YAAAA,kBAAkB,EAAE;AAFE,WAAnB,CAAP;AAIH;AACJ,OAxBM,MAwBA,IAAIiR,OAAO,KAAKtB,IAAI,CAACQ,IAArB,EAA2B;AAC9B,YAAIyO,MAAJ,EAAY;AACRj9B,UAAAA,SAAS,CAAC0kB,WAAV,CAAsB;AAClBre,YAAAA,SADkB;AAElB4lB,YAAAA,cAAc,EAAEzC,OAFE;AAGlBnL,YAAAA,kBAAkB,EAAE,IAHF;AAIlB9Q,YAAAA,UAAU,EAAE,IAJM;AAKlBqe,YAAAA,eAAe,EAAG5kB,EAAD;;;AACb,kBAAI,CAAChH,SAAS,CAAC4N,WAAV,CAAsB5G,EAAtB,CAAL,EAAgC;AAC5B,uBAAO,KAAP;AACH;;AAED,oBAAMy2B,aAAa,GAAG33B,IAAI,CAACy3B,IAAL,CAClB,MAAAv2B,EAAE,CAACnB,qBAAH,GAA2BrE,IAA3B,UAAA,iBAAA,KAAA,GAAmC,CADjB,CAAtB;;AAIA,kBACIwF,EAAE,KAAKwiB,OAAP,IACA6T,gBAAgB,IAAII,aAFxB,EAGE;AACE,uBAAO,IAAP;AACH;;AAED/N,cAAAA,IAAI,GAAG1oB,EAAP;AACA,qBAAO,KAAP;AACH;AAvBiB,WAAtB;AAyBH,SA1BD,MA0BO;AACH0oB,UAAAA,IAAI,GAAG1vB,SAAS,CAACoe,SAAV,CAAoB;AACvB/X,YAAAA,SADuB;AAEvBgY,YAAAA,kBAAkB,EAAE;AAFG,WAApB,CAAP;AAIH;AACJ,OAjCM,MAiCA,IAAIiR,OAAO,KAAKtB,IAAI,CAACO,GAArB,EAA0B;AAC7B,YAAI0O,MAAJ,EAAY;AACRj9B,UAAAA,SAAS,CAAC0kB,WAAV,CAAsB;AAClBre,YAAAA,SADkB;AAElB4lB,YAAAA,cAAc,EAAEzC,OAFE;AAGlBnL,YAAAA,kBAAkB,EAAE,IAHF;AAIlBuN,YAAAA,eAAe,EAAG5kB,EAAD;;;AACb,kBAAI,CAAChH,SAAS,CAAC4N,WAAV,CAAsB5G,EAAtB,CAAL,EAAgC;AAC5B,uBAAO,KAAP;AACH;;AAED,oBAAMy2B,aAAa,GAAG33B,IAAI,CAACy3B,IAAL,CAClB,MAAAv2B,EAAE,CAACnB,qBAAH,GAA2BrE,IAA3B,UAAA,iBAAA,KAAA,GAAmC,CADjB,CAAtB;;AAIA,kBACIwF,EAAE,KAAKwiB,OAAP,IACA6T,gBAAgB,IAAII,aAFxB,EAGE;AACE,uBAAO,IAAP;AACH;;AAED/N,cAAAA,IAAI,GAAG1oB,EAAP;AACA,qBAAO,KAAP;AACH;AAtBiB,WAAtB;AAwBH,SAzBD,MAyBO;AACH0oB,UAAAA,IAAI,GAAG1vB,SAAS,CAACyrB,QAAV,CAAmB;AACtBplB,YAAAA,SADsB;AAEtBgY,YAAAA,kBAAkB,EAAE;AAFE,WAAnB,CAAP;AAIH;AACJ,OAhCM,MAgCA,IAAIiR,OAAO,KAAKtB,IAAI,CAACK,MAArB,EAA6B;AAChCruB,QAAAA,SAAS,CAAC0kB,WAAV,CAAsB;AAClBuH,UAAAA,cAAc,EAAEzC,OADE;AAElBnjB,UAAAA,SAFkB;AAGlBgY,UAAAA,kBAAkB,EAAE,IAHF;AAIlB9Q,UAAAA,UAAU,EAAE,IAJM;AAKlBqe,UAAAA,eAAe,EAAG5kB,EAAD;AACb,gBAAI,CAAChH,SAAS,CAAC4N,WAAV,CAAsB5G,EAAtB,CAAL,EAAgC;AAC5B,qBAAO,KAAP;AACH;;AAED,gBACIb,qCAAqC,CACjC,KAAK8I,IAD4B,EAEjCjI,EAFiC,EAGjC7G,KAAK,CAAC04B,mBAH2B,CADzC,EAME;AACEnJ,cAAAA,IAAI,GAAG1oB,EAAP;AACA,qBAAO,KAAP;AACH;;AAED,mBAAO,IAAP;AACH;AAtBiB,SAAtB,EADgC;;AA2BhC,YAAIi2B,MAAM,IAAIvN,IAAd,EAAoB;AAChB,gBAAMiO,aAAa,GAAG73B,IAAI,CAACy3B,IAAL,CAClB7N,IAAI,CAAC7pB,qBAAL,GAA6BrE,IADX,CAAtB;AAGAxB,UAAAA,SAAS,CAAC0kB,WAAV,CAAsB;AAClBuH,YAAAA,cAAc,EAAEyD,IADE;AAElBrpB,YAAAA,SAFkB;AAGlBgY,YAAAA,kBAAkB,EAAE,IAHF;AAIlBuN,YAAAA,eAAe,EAAG5kB,EAAD;AACb,kBAAI,CAAChH,SAAS,CAAC4N,WAAV,CAAsB5G,EAAtB,CAAL,EAAgC;AAC5B,uBAAO,KAAP;AACH;;AAED,oBAAMy2B,aAAa,GAAG33B,IAAI,CAACy3B,IAAL,CAClBv2B,EAAE,CAACnB,qBAAH,GAA2BrE,IADT,CAAtB;;AAGA,kBACI67B,gBAAgB,GAAGI,aAAnB,IACAE,aAAa,IAAIF,aAFrB,EAGE;AACE,uBAAO,IAAP;AACH;;AACD/N,cAAAA,IAAI,GAAG1oB,EAAP;AACA,qBAAO,KAAP;AACH;AApBiB,WAAtB;AAsBH;;AAED,YAAI0oB,IAAJ,EAAU;AACN7oB,UAAAA,cAAc,CAAC,KAAKoI,IAAN,EAAYygB,IAAZ,EAAkB,KAAlB,CAAd;AACH;AACJ,OA1DM,MA0DA,IAAIJ,OAAO,KAAKtB,IAAI,CAACM,QAArB,EAA+B;AAClCtuB,QAAAA,SAAS,CAAC0kB,WAAV,CAAsB;AAClBuH,UAAAA,cAAc,EAAEzC,OADE;AAElBnjB,UAAAA,SAFkB;AAGlBgY,UAAAA,kBAAkB,EAAE,IAHF;AAIlBuN,UAAAA,eAAe,EAAG5kB,EAAD;AACb,gBAAI,CAAChH,SAAS,CAAC4N,WAAV,CAAsB5G,EAAtB,CAAL,EAAgC;AAC5B,qBAAO,KAAP;AACH;;AAED,gBACIb,qCAAqC,CACjC,KAAK8I,IAD4B,EAEjCjI,EAFiC,EAGjC7G,KAAK,CAAC04B,mBAH2B,CADzC,EAME;AACEnJ,cAAAA,IAAI,GAAG1oB,EAAP;AACA,qBAAO,KAAP;AACH;;AAED,mBAAO,IAAP;AACH;AArBiB,SAAtB,EADkC;;AA0BlC,YAAIi2B,MAAM,IAAIvN,IAAd,EAAoB;AAChB,gBAAMkO,YAAY,GAAG93B,IAAI,CAACy3B,IAAL,CACjB7N,IAAI,CAAC7pB,qBAAL,GAA6BrE,IADZ,CAArB;AAGAxB,UAAAA,SAAS,CAAC0kB,WAAV,CAAsB;AAClBuH,YAAAA,cAAc,EAAEyD,IADE;AAElBrpB,YAAAA,SAFkB;AAGlBgY,YAAAA,kBAAkB,EAAE,IAHF;AAIlB9Q,YAAAA,UAAU,EAAE,IAJM;AAKlBqe,YAAAA,eAAe,EAAG5kB,EAAD;AACb,kBAAI,CAAChH,SAAS,CAAC4N,WAAV,CAAsB5G,EAAtB,CAAL,EAAgC;AAC5B,uBAAO,KAAP;AACH;;AAED,oBAAMy2B,aAAa,GAAG33B,IAAI,CAACy3B,IAAL,CAClBv2B,EAAE,CAACnB,qBAAH,GAA2BrE,IADT,CAAtB;;AAGA,kBACI67B,gBAAgB,GAAGI,aAAnB,IACAG,YAAY,IAAIH,aAFpB,EAGE;AACE,uBAAO,IAAP;AACH;;AACD/N,cAAAA,IAAI,GAAG1oB,EAAP;AACA,qBAAO,KAAP;AACH;AArBiB,WAAtB;AAuBH;;AAED,YAAI0oB,IAAJ,EAAU;AACN7oB,UAAAA,cAAc,CAAC,KAAKoI,IAAN,EAAYygB,IAAZ,EAAkB,IAAlB,CAAd;AACH;AACJ,OA1DM,MA0DA,IAAIuN,MAAJ,EAAY;AACf,cAAM1vB,UAAU,GAAG+hB,OAAO,KAAKtB,IAAI,CAACU,EAApC;AACA,cAAM+M,GAAG,GAAG4B,gBAAZ,CAFe;;AAIf,cAAM3B,GAAG,GAAG51B,IAAI,CAACy3B,IAAL,CAAUH,kBAAmB,CAAC37B,GAA9B,CAAZ;AACA,cAAMk6B,GAAG,GAAG2B,gBAAZ,CALe;;AAOf,cAAM1B,GAAG,GAAG91B,IAAI,CAAC03B,KAAL,CAAWJ,kBAAmB,CAACz7B,MAA/B,CAAZ;AACA,YAAIwM,aAAJ;AACA,YAAI0vB,YAAJ;AACA,YAAIC,gBAAgB,GAAG,CAAvB;AAEA99B,QAAAA,SAAS,CAAC8rB,OAAV,CAAkB;AACdzlB,UAAAA,SADc;AAEd4lB,UAAAA,cAAc,EAAEzC,OAFF;AAGdjc,UAAAA,UAHc;AAId4e,UAAAA,SAAS,EAAGnlB,EAAD;AACP;AACA;AACA,kBAAMzB,IAAI,GAAGyB,EAAE,CAACnB,qBAAH,EAAb;AAEA,kBAAMg2B,GAAG,GAAG/1B,IAAI,CAACy3B,IAAL,CAAUh4B,IAAI,CAAC/D,IAAf,CAAZ;AACA,kBAAMs6B,GAAG,GAAGh2B,IAAI,CAACy3B,IAAL,CAAUh4B,IAAI,CAAC9D,GAAf,CAAZ;AACA,kBAAMs6B,GAAG,GAAGj2B,IAAI,CAAC03B,KAAL,CAAWj4B,IAAI,CAAC7D,KAAhB,CAAZ;AACA,kBAAMs6B,GAAG,GAAGl2B,IAAI,CAAC03B,KAAL,CAAWj4B,IAAI,CAAC5D,MAAhB,CAAZ;;AAEA,gBACK4L,UAAU,IAAImuB,GAAG,GAAGM,GAArB,IACC,CAACzuB,UAAD,IAAequB,GAAG,GAAGE,GAF1B,EAGE;AACE;AACA,qBAAO,IAAP;AACH;;AAED,kBAAMiC,kBAAkB,GACpBj4B,IAAI,CAACy3B,IAAL,CAAUz3B,IAAI,CAACE,GAAL,CAAS21B,GAAT,EAAcI,GAAd,CAAV,IACAj2B,IAAI,CAAC03B,KAAL,CAAW13B,IAAI,CAACC,GAAL,CAAS01B,GAAT,EAAcI,GAAd,CAAX,CAFJ;AAGA,kBAAMmC,QAAQ,GAAGl4B,IAAI,CAACy3B,IAAL,CAAUz3B,IAAI,CAACE,GAAL,CAAS21B,GAAG,GAAGF,GAAf,EAAoBM,GAAG,GAAGF,GAA1B,CAAV,CAAjB;;AAEA,gBACIkC,kBAAkB,GAAG,CAArB,IACAC,QAAQ,IAAID,kBAFhB,EAGE;AACE;AACA,oBAAME,YAAY,GAAGF,kBAAkB,GAAGC,QAA1C;;AAEA,kBAAIC,YAAY,GAAGH,gBAAnB,EAAqC;AACjC3vB,gBAAAA,aAAa,GAAGnH,EAAhB;AACA82B,gBAAAA,gBAAgB,GAAGG,YAAnB;AACH;AACJ,aAXD,MAWO,IAAIH,gBAAgB,KAAK,CAAzB,EAA4B;AAC/B;AACA,oBAAMI,QAAQ,GAAG1C,WAAW,CACxBC,GADwB,EAExBC,GAFwB,EAGxBC,GAHwB,EAIxBC,GAJwB,EAKxBC,GALwB,EAMxBC,GANwB,EAOxBC,GAPwB,EAQxBC,GARwB,CAA5B;;AAWA,kBACI6B,YAAY,KAAKjgC,SAAjB,IACAsgC,QAAQ,GAAGL,YAFf,EAGE;AACEA,gBAAAA,YAAY,GAAGK,QAAf;AACA/vB,gBAAAA,aAAa,GAAGnH,EAAhB;AACH;AACJ,aApBM,MAoBA,IAAI82B,gBAAgB,GAAG,CAAvB,EAA0B;AAC7B;AACA,qBAAO,KAAP;AACH;;AAED,mBAAO,IAAP;AACH;AAhEa,SAAlB;AAmEApO,QAAAA,IAAI,GAAGvhB,aAAP;AACH;;AAED,UAAIuhB,IAAJ,EAAU;AACNhc,QAAAA,KAAK,CAACqc,cAAN;AACArc,QAAAA,KAAK,CAACsc,wBAAN;AAEA9lB,QAAAA,WAAW,CAACwlB,IAAD,CAAX;AACH;AACJ,KA/aO;;AA/FJ,SAAKlmB,QAAL,GAAgBnM,OAAhB;AACA,SAAK4R,IAAL,GAAYvO,SAAZ;AACA,SAAK27B,OAAL,GAAe,EAAf;AAEAh/B,IAAAA,OAAO,CAAC6Z,SAAR,CAAkB,KAAKsT,KAAvB;AACH;;AAUD/sB,EAAAA,OAAO;;;AACH,UAAMyE,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AAEA,SAAKzF,QAAL,CAAc6L,cAAd,CAA6B0J,WAA7B,CAAyC,KAAKxO,QAA9C;;AAEA,UAAA,KAAKksB,oBAAL,UAAA,iBAAA,SAAA,iBAA4B,MAA5B;;AAEA,QAAI,KAAKD,kBAAT,EAA6B;AACzBt6B,MAAAA,GAAG,CAACa,YAAJ,CAAiB,KAAKy5B,kBAAtB;AACA,aAAO,KAAKA,kBAAZ;AACH;;AAEDt6B,IAAAA,GAAG,CAACuJ,mBAAJ,CAAwB,SAAxB,EAAmC,KAAK0jB,UAAxC,EAAoD,IAApD;AAEAnwB,IAAAA,MAAM,CAACC,IAAP,CAAY,KAAKo9B,OAAjB,EAA0BllB,OAA1B,CAAmCgnB,OAAD;AAC9B,UAAI,KAAK9B,OAAL,CAAa8B,OAAb,CAAJ,EAA2B;AACvB,aAAK9B,OAAL,CAAa8B,OAAb,EAAsB1gC,OAAtB;;AACA,eAAO,KAAK4+B,OAAL,CAAa8B,OAAb,CAAP;AACH;AACJ,KALD;AAMH;;AAED/9B,EAAAA,WAAW,CACP9C,OADO,EAEPiM,KAFO,EAGPhK,GAHO;AAKP,QAAId,sCAAJ,EAAa;;AAIb,UAAM2/B,QAAQ,GAAG,IAAIhyB,KAAJ,CACb,KAAK5C,QADQ,EAEblM,OAFa,EAGb,KAAK+gC,eAHQ,EAIb90B,KAJa,EAKbhK,GALa,CAAjB;AAOA,SAAK88B,OAAL,CAAa+B,QAAQ,CAACz0B,EAAtB,IAA4By0B,QAA5B;AACA,WAAOA,QAAP;AACH;;AAyd4B,QAAf1B,eAAe,CACzBp/B,OADyB,EAEzBgyB,OAFyB;;;AAIzB,QACIhyB,OAAO,CAACO,YAAR,CAAqB,eAArB,MAA0C,MAA1C,IACAP,OAAO,CAAC+tB,YAAR,CAAqB,uBAArB,CAFJ,EAGE;AACE;AACA;AACA,aAAO,IAAP;AACH;;AAED,QAAIviB,eAAe,CAACxL,OAAD,EAAUu6B,cAAV,CAAnB,EAA8C;AAC1C,UAAIyG,cAAc,GAAG,CAArB;AACA,UAAIC,YAAY,GAAG,CAAnB;AACA,UAAIC,UAAU,GAAG,CAAjB;AACA,UAAIC,QAAJ;;AAEA,UAAInhC,OAAO,CAACoQ,OAAR,KAAoB,OAApB,IAA+BpQ,OAAO,CAACoQ,OAAR,KAAoB,UAAvD,EAAmE;AAC/D,cAAM6V,IAAI,GAAIjmB,OAA4B,CAACimB,IAA3C;AACA,cAAMvP,KAAK,GAAI1W,OAA4B,CAAC0W,KAA5C;AAEAwqB,QAAAA,UAAU,GAAG,CAACxqB,KAAK,IAAI,EAAV,EAAcxT,MAA3B;;AAEA,YAAI+iB,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,QAAjC,EAA2C;AACvC;AACA;AACA;AACA;AACA,cAAIib,UAAJ,EAAgB;AACZ,kBAAME,SAAS,GACX,MAAAphC,OAAO,CAACuG,aAAR,CAAsBinB,WAAtB,UAAA,iBAAA,SAAA,MAAmC6T,cADvC;;AAGA,gBAAID,SAAJ,EAAe;AACX,oBAAME,aAAa,GAAGF,SAAS,CAACz2B,QAAV,GAAqBzH,MAA3C;AACA,oBAAM+M,UAAU,GACZ+hB,OAAO,KAAKtB,IAAI,CAACS,IAAjB,IAAyBa,OAAO,KAAKtB,IAAI,CAACU,EAD9C;AAGAgQ,cAAAA,SAAS,CAACG,MAAV,CACI,QADJ,EAEItxB,UAAU,GAAG,UAAH,GAAgB,SAF9B,EAGI,WAHJ;;AAMA,kBAAIqxB,aAAa,KAAKF,SAAS,CAACz2B,QAAV,GAAqBzH,MAA3C,EAAmD;AAC/C;AACA;AACAk+B,gBAAAA,SAAS,CAACG,MAAV,CACI,QADJ,EAEItxB,UAAU,GAAG,SAAH,GAAe,UAF7B,EAGI,WAHJ;AAMA,uBAAO,IAAP;AACH,eAVD,MAUO;AACHixB,gBAAAA,UAAU,GAAG,CAAb;AACH;AACJ;AACJ;AACJ,SAnCD,MAmCO;AACH,gBAAMM,QAAQ,GAAIxhC,OAA4B,CACzCghC,cADL;;AAGA,cAAIQ,QAAQ,KAAK,IAAjB,EAAuB;AACnB;AACA,mBAAOvb,IAAI,KAAK,QAAhB;AACH;;AAED+a,UAAAA,cAAc,GAAGQ,QAAQ,IAAI,CAA7B;AACAP,UAAAA,YAAY,GACPjhC,OAA4B,CAACihC,YAA7B,IAA6C,CADlD;AAEH;AACJ,OAtDD,MAsDO,IAAIjhC,OAAO,CAACkyB,eAAR,KAA4B,MAAhC,EAAwC;AAC3CiP,QAAAA,QAAQ,GAAG,KAAKr1B,UAAU,CAAC,KAAK6F,IAAN,CAAf,EAA6BgL,OAAD;AACnC,eAAKwiB,oBAAL,GAA6BzoB,KAAD;AACxB,mBAAO,KAAKyoB,oBAAZ;AACAxiB,YAAAA,OAAO,CAACjG,KAAD,CAAP;AACH,WAHD;;AAKA,gBAAM9R,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AAEA,cAAI,KAAKutB,kBAAT,EAA6B;AACzBt6B,YAAAA,GAAG,CAACa,YAAJ,CAAiB,KAAKy5B,kBAAtB;AACH;;AAED,gBAAM;AACFuC,YAAAA,UAAU,EAAEC,cADV;AAEFC,YAAAA,SAAS,EAAEC,aAFT;AAGFC,YAAAA,YAAY,EAAEC,gBAHZ;AAIFC,YAAAA,WAAW,EAAEC;AAJX,cAKFp9B,GAAG,CAACy8B,YAAJ,MAAsB,EAL1B;;AAQA,eAAKnC,kBAAL,GAA0Bt6B,GAAG,CAACyC,UAAJ,CAAe;;;AACrC,mBAAO,KAAK63B,kBAAZ;AAEA,kBAAM;AACFuC,cAAAA,UADE;AAEFE,cAAAA,SAFE;AAGFE,cAAAA,YAHE;AAIFE,cAAAA;AAJE,gBAKFn9B,GAAG,CAACy8B,YAAJ,MAAsB,EAL1B;;AAOA,gBACII,UAAU,KAAKC,cAAf,IACAC,SAAS,KAAKC,aADd,IAEAC,YAAY,KAAKC,gBAFjB,IAGAC,WAAW,KAAKC,eAJpB,EAKE;AACE,oBAAA,KAAK7C,oBAAL,UAAA,iBAAA,SAAA,iBAA4B,MAA5B;AACA;AACH;;AAED6B,YAAAA,cAAc,GAAGa,YAAY,IAAI,CAAjC;AACAZ,YAAAA,YAAY,GAAGc,WAAW,IAAI,CAA9B;AACAb,YAAAA,UAAU,GAAG,CAAA,MAAAlhC,OAAO,CAACiiC,WAAR,UAAA,iBAAA,SAAA,MAAqB/+B,MAArB,KAA+B,CAA5C;;AAEA,gBAAIu+B,UAAU,IAAIE,SAAlB,EAA6B;AACzB,kBACI3hC,OAAO,CAACsL,QAAR,CAAiBm2B,UAAjB,KACAzhC,OAAO,CAACsL,QAAR,CAAiBq2B,SAAjB,CAFJ,EAGE;AACE,oBAAIF,UAAU,KAAKzhC,OAAnB,EAA4B;AACxB,sBAAIkiC,WAAW,GAAG,KAAlB;;AAEA,wBAAMC,UAAU,GACZ/S,IADe;AAGf,wBAAIA,IAAI,KAAKqS,UAAb,EAAyB;AACrBS,sBAAAA,WAAW,GAAG,IAAd;AACH,qBAFD,MAEO,IAAI9S,IAAI,KAAKuS,SAAb,EAAwB;AAC3B,6BAAO,IAAP;AACH;;AAED,0BAAMS,QAAQ,GAAGhT,IAAI,CAAC6S,WAAtB;;AAEA,wBAAIG,QAAQ,IAAI,CAAChT,IAAI,CAACiT,UAAtB,EAAkC;AAC9B,4BAAMC,GAAG,GAAGF,QAAQ,CAACl/B,MAArB;;AAEA,0BAAIg/B,WAAJ,EAAiB;AACb,4BAAIP,SAAS,KAAKF,UAAlB,EAA8B;AAC1BR,0BAAAA,YAAY,IAAIqB,GAAhB;AACH;AACJ,uBAJD,MAIO;AACHtB,wBAAAA,cAAc,IAAIsB,GAAlB;AACArB,wBAAAA,YAAY,IAAIqB,GAAhB;AACH;AACJ;;AAED,wBAAIC,IAAI,GAAG,KAAX;;AAEA,yBACI,IAAIrhC,CAAC,GAAGkuB,IAAI,CAACiT,UADjB,EAEInhC,CAAC,IAAI,CAACqhC,IAFV,EAGIrhC,CAAC,GAAGA,CAAC,CAACsU,WAHV,EAIE;AACE+sB,sBAAAA,IAAI,GAAGJ,UAAU,CAACjhC,CAAD,CAAjB;AACH;;AAED,2BAAOqhC,IAAP;AACH,mBAnCD;;AAqCAJ,kBAAAA,UAAU,CAACniC,OAAD,CAAV;AACH;AACJ;AACJ;;AAED,kBAAA,KAAKm/B,oBAAL,UAAA,iBAAA,SAAA,iBAA4B,KAA5B;AACH,WA3EyB,EA2EvB,CA3EuB,CAA1B;AA4EH,SAhGU,CAAX;AAiGH;;AAED,UAAIgC,QAAQ,IAAI,EAAE,MAAMA,QAAR,CAAhB,EAAmC;AAC/B,eAAO,IAAP;AACH;;AAED,UAAIH,cAAc,KAAKC,YAAvB,EAAqC;AACjC,eAAO,IAAP;AACH;;AAED,UACID,cAAc,GAAG,CAAjB,KACChP,OAAO,KAAKtB,IAAI,CAACS,IAAjB,IACGa,OAAO,KAAKtB,IAAI,CAACU,EADpB,IAEGY,OAAO,KAAKtB,IAAI,CAACQ,IAHrB,CADJ,EAKE;AACE,eAAO,IAAP;AACH;;AAED,UACI8P,cAAc,GAAGE,UAAjB,KACClP,OAAO,KAAKtB,IAAI,CAACW,KAAjB,IACGW,OAAO,KAAKtB,IAAI,CAACY,IADpB,IAEGU,OAAO,KAAKtB,IAAI,CAACO,GAHrB,CADJ,EAKE;AACE,eAAO,IAAP;AACH;AACJ;;AAED,WAAO,KAAP;AACH;;;;ACt4CL;;;;SAegBuR,iBACZh7B,KACAzH,SACAG,0BAKAuiC;AAEA,MAAI,OAAO/F,gBAAP,KAA4B,WAAhC,EAA6C;AACzC,WAAO;AACH;AACH,KAFD;AAGH;;AAED,QAAMt5B,SAAS,GAAGrD,OAAO,CAACqD,SAA1B;AAEA,MAAI2B,YAAJ;;AAEA,QAAM29B,UAAU,GAAI5F,SAAD;;;AACf,SAAK,MAAMC,QAAX,IAAuBD,SAAvB,EAAkC;AAC9B,YAAM92B,MAAM,GAAG+2B,QAAQ,CAAC/2B,MAAxB;AACA,YAAM+V,OAAO,GAAGghB,QAAQ,CAACC,YAAzB;AACA,YAAMC,KAAK,GAAGF,QAAQ,CAACG,UAAvB;;AAEA,UAAIH,QAAQ,CAAC9W,IAAT,KAAkB,YAAtB,EAAoC;AAChC,YAAI8W,QAAQ,CAACI,aAAT,KAA2B38B,oBAA/B,EAA2D;AACvDN,UAAAA,wBAAwB,CAACH,OAAD,EAAUiG,MAAV,CAAxB;AACH;AACJ,OAJD,MAIO;AACH,aAAK,IAAIwE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuR,OAAO,CAAC7Y,MAA5B,EAAoCsH,CAAC,EAArC,EAAyC;AACrCm4B,UAAAA,qBAAqB,CAAC5mB,OAAO,CAACvR,CAAD,CAAR,EAAa,IAAb,CAArB;AACA,gBAAA,MAAAzK,OAAO,CAACiU,cAAR,EAAuB/B,UAAvB,UAAA,iBAAA,SAAA,eAAoCjM,OAApC;AACH;;AAED,aAAK,IAAIwE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyyB,KAAK,CAAC/5B,MAA1B,EAAkCsH,CAAC,EAAnC,EAAuC;AACnCm4B,UAAAA,qBAAqB,CAAC1F,KAAK,CAACzyB,CAAD,CAAN,CAArB;AACA,gBAAA,MAAAzK,OAAO,CAACiU,cAAR,EAAuB/B,UAAvB,UAAA,iBAAA,SAAA,eAAoCjM,OAApC;AACH;AACJ;AACJ;;AAED,UAAAjG,OAAO,CAACuC,SAAR,UAAA,iBAAA,SAAA,MAAmBw2B,cAAnB;AACH,GAxBD;;AA0BA,WAAS6J,qBAAT,CAA+BvT,IAA/B,EAA2CrT,OAA3C;AACI,QAAI,CAAChX,YAAL,EAAmB;AACfA,MAAAA,YAAY,GAAGJ,kBAAkB,CAACvB,SAAD,CAAlB,CAA8B2B,YAA7C;AACH;;AAED69B,IAAAA,WAAW,CAACxT,IAAD,EAAsBrT,OAAtB,CAAX;AAEA,UAAMoT,MAAM,GAAG5nB,uBAAuB,CAClCC,GADkC,EAElC4nB,IAFkC,EAGjCpvB,OAAD;AACI,aAAO4iC,WAAW,CAAC5iC,OAAD,EAAyB+b,OAAzB,CAAlB;AACH,KALiC,CAAtC;;AAQA,QAAIoT,MAAJ,EAAY;AACR,aAAOA,MAAM,CAACa,QAAP,EAAP,EAA0B;AACtB;AACH;AACJ;AACJ;;AAED,WAAS4S,WAAT,CAAqB5iC,OAArB,EAA2C+b,OAA3C;;;AACI,QAAI,CAAC/b,OAAO,CAACO,YAAb,EAA2B;AACvB;AACA,aAAOiE,UAAU,CAACyrB,WAAlB;AACH;;AAED,UAAMllB,GAAG,GAAI/K,OAA8B,CAACgL,mBAA5C;;AAEA,QAAID,GAAG,IAAIhG,YAAX,EAAyB;AACrB,UAAIgX,OAAJ,EAAa;AACT,eAAOhX,YAAY,CAACgG,GAAD,CAAnB;AACH,OAFD,MAEO;AACH,cAAAhG,YAAY,CAACgG,GAAD,CAAZ,UAAA,iBAAA,KAAA,GAAAhG,YAAY,CAACgG,GAAD,CAAZ,GAAsB,IAAIvE,eAAJ,CAAoBpD,SAApB,EAA+BpD,OAA/B,CAAtB;AACH;AACJ;;AAED,QACIF,mBAAmB,CAACC,OAAD,EAAUC,OAAV,CAAnB,IACAA,OAAO,CAAC+tB,YAAR,CAAqBvtB,oBAArB,CAFJ,EAGE;AACEN,MAAAA,wBAAwB,CAACH,OAAD,EAAUC,OAAV,EAAmB+b,OAAnB,CAAxB;AACH;;AAED,WAAOvX,UAAU,CAACyrB,WAAlB;AACH;;AAED,QAAM4M,QAAQ,GAAG,IAAIH,gBAAJ,CAAqBgG,UAArB,CAAjB;;AAEA,MAAID,SAAJ,EAAe;AACXE,IAAAA,qBAAqB,CAACv/B,SAAS,GAAGI,QAAZ,CAAqB+H,IAAtB,CAArB;AACH;;AAEDsxB,EAAAA,QAAQ,CAACU,OAAT,CAAiB/1B,GAAjB,EAAsB;AAClBq2B,IAAAA,SAAS,EAAE,IADO;AAElBC,IAAAA,OAAO,EAAE,IAFS;AAGlBC,IAAAA,UAAU,EAAE,IAHM;AAIlBC,IAAAA,eAAe,EAAE,CAACx9B,oBAAD;AAJC,GAAtB;AAOA,SAAO;AACHq8B,IAAAA,QAAQ,CAACb,UAAT;AACH,GAFD;AAGH;;AC7HD;;;;AAeA,MAAM6G,sBAAsB,GAAG,GAA/B;MAeaC,2BACDlgB;AAgBR/e,EAAAA,YAAY9D;AACR;AAZI,iBAAA,GAA4C,EAA5C;AACA,4BAAA,GAAsB,CAAtB;AACA,sBAAA,GAAwD,EAAxD;AACA,wBAAA,GAEJ,EAFI;AAMA,iCAAA,GAA2B,CAA3B;;AAuBA,iBAAA,GAAYmB,CAAD;AACf,UAAIA,CAAJ,EAAO;AACH,cAAMqN,OAAO,GAAG,KAAKw0B,eAArB;;AAEA,YAAIx0B,OAAJ,EAAa;AACT,gBAAMy0B,KAAK,GAAGp4B,IAAI,CAACC,GAAL,KAAa,KAAKo4B,wBAAhC;;AACA,gBAAMC,UAAU,GAAG,GAAnB;;AAEA,cAAIF,KAAK,IAAIE,UAAb,EAAyB;AACrB;AACA;AACA,mBAAO,KAAKH,eAAZ;AACAx0B,YAAAA,OAAO,CAAC40B,MAAR;AACH;AACJ;AACJ;AACJ,KAhBO;;AAmNR,gCAAA,GAA2BnjC,OAAD;;;AACtB,YAAM+C,QAAQ,GAAG,MAAAjD,mBAAmB,CAAC,KAAKoM,QAAN,EAAgBlM,OAAhB,CAAnB,UAAA,iBAAA,SAAA,MAA6C+C,QAA9D;AACA,YAAMgI,GAAG,GAAGD,aAAa,CAAC,KAAK6G,IAAN,EAAY3R,OAAZ,CAAzB;AACA,UAAIojC,IAAI,GAAoC,KAAKC,aAAL,CAAmBt4B,GAAnB,CAA5C;;AAEA,UAAIhI,QAAQ,IAAIuD,gBAAgB,CAACtG,OAAO,CAACuG,aAAT,EAAwBvG,OAAxB,CAAhC,EAAkE;AAC9D,YAAI,CAACojC,IAAL,EAAW;AACPA,UAAAA,IAAI,GAAG,KAAKC,aAAL,CAAmBt4B,GAAnB,IAA0B;AAC7B/K,YAAAA,OAAO,EAAE,IAAIwG,eAAJ,CAAoB,KAAKmL,IAAzB,EAA+B3R,OAA/B;AADoB,WAAjC;AAGH;;AAED+C,QAAAA,QAAQ,CAACmmB,KAAT,CAAehU,IAAf;AACA,cAAMouB,aAAa,GAAGvgC,QAAQ,CAACmmB,KAA/B;AACA,cAAMqa,SAAS,GAAGH,IAAI,CAACG,SAAvB,CAT8D;;AAW9D,YAAI,KAAKC,uBAAL,CAA6BF,aAA7B,EAA4CC,SAA5C,CAAJ,EAA4D;AACxD,cAAIA,SAAJ,EAAe;AACXA,YAAAA,SAAS,CAAC1pB,OAAV,CAAmB4pB,QAAD;AACd,oBAAMC,GAAG,GAAG,KAAKC,eAAL,CAAqBF,QAArB,CAAZ;;AAEA,kBAAIC,GAAG,IAAIA,GAAG,CAAC34B,GAAD,CAAd,EAAqB;AACjB,oBAAIrJ,MAAM,CAACC,IAAP,CAAY+hC,GAAZ,EAAiBxgC,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,yBAAOwgC,GAAG,CAAC34B,GAAD,CAAV;AACH,iBAFD,MAEO;AACH,yBAAO,KAAK44B,eAAL,CAAqBF,QAArB,CAAP;AACH;AACJ;AACJ,aAVD;AAWH;;AAEDL,UAAAA,IAAI,CAACG,SAAL,GAAiBD,aAAjB;AACH;;AAEDA,QAAAA,aAAa,CAACzpB,OAAd,CAAuB2O,YAAD;AAClB,cAAIkb,GAAG,GAAG,KAAKC,eAAL,CAAqBnb,YAArB,CAAV;;AAEA,cAAI,CAACkb,GAAL,EAAU;AACNA,YAAAA,GAAG,GAAG,KAAKC,eAAL,CAAqBnb,YAArB,IAAqC,EAA3C;AACH;;;AAGDkb,UAAAA,GAAG,CAAC34B,GAAD,CAAH,GAAWq4B,IAAX;;AAEA,eAAKQ,gBAAL,CAAsBpb,YAAtB;AACH,SAXD;AAYH,OAzCD,MAyCO,IAAI4a,IAAJ,EAAU;AACb,cAAMG,SAAS,GAAGH,IAAI,CAACG,SAAvB;;AAEA,YAAIA,SAAJ,EAAe;AACXA,UAAAA,SAAS,CAAC1pB,OAAV,CAAmB4pB,QAAD;AACd,kBAAMC,GAAG,GAAG,KAAKC,eAAL,CAAqBF,QAArB,CAAZ;;AAEA,gBAAIC,GAAG,IAAIA,GAAG,CAAC34B,GAAD,CAAd,EAAqB;AACjB,kBAAIrJ,MAAM,CAACC,IAAP,CAAY+hC,GAAZ,EAAiBxgC,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,uBAAOwgC,GAAG,CAAC34B,GAAD,CAAV;AACH,eAFD,MAEO;AACH,uBAAO,KAAK44B,eAAL,CAAqBF,QAArB,CAAP;AACH;AACJ;AACJ,WAVD;AAWH;;AAED,eAAO,KAAKJ,aAAL,CAAmBt4B,GAAnB,CAAP;AACH;AACJ,KAjED;;AAtOI,SAAKmB,QAAL,GAAgBnM,OAAhB;AACA,SAAK4R,IAAL,GAAY5R,OAAO,CAACqD,SAApB;AAEArD,IAAAA,OAAO,CAAC6Z,SAAR,CAAkB;AACd,WAAK1N,QAAL,CAAc6L,cAAd,CAA6BqJ,SAA7B,CAAuC,KAAKnO,QAA5C;AACH,KAFD;AAGH;;AAED9S,EAAAA,OAAO;AACH,SAAK+L,QAAL,CAAc6L,cAAd,CAA6B0J,WAA7B,CAAyC,KAAKxO,QAA9C;;AAEA,SAAK,MAAMxR,GAAX,IAAkBC,MAAM,CAACC,IAAP,CAAY,KAAKkiC,QAAjB,CAAlB,EAA8C;AAC1C,WAAKC,cAAL,CAAoBriC,GAApB;AACH;;AAED,SAAK4hC,aAAL,GAAqB,EAArB;AACA,SAAKM,eAAL,GAAuB,EAAvB;AACH;;AAoBOG,EAAAA,cAAc,CAACriC,GAAD,EAAcsiC,aAAd;AAClB,UAAM5yB,CAAC,GAAG,KAAK0yB,QAAL,CAAcpiC,GAAd,CAAV;;AAEA,QAAI0P,CAAJ,EAAO;AACH,YAAMvM,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AAEA,UAAIR,CAAC,CAACwa,KAAN,EAAa;AACT/mB,QAAAA,GAAG,CAACa,YAAJ,CAAiB0L,CAAC,CAACwa,KAAnB;AACH;;AAED,UAAIxa,CAAC,CAAC6yB,cAAN,EAAsB;AAClBp/B,QAAAA,GAAG,CAACa,YAAJ,CAAiB0L,CAAC,CAAC6yB,cAAnB;AACH;;AAED,UAAI,CAACD,aAAD,IAAkB5yB,CAAC,CAACqU,MAAxB,EAAgC;AAC5BrU,QAAAA,CAAC,CAACqU,MAAF;AACH,OAFD,MAEO,IAAIue,aAAa,IAAI5yB,CAAC,CAACwL,OAAvB,EAAgC;AACnCxL,QAAAA,CAAC,CAACwL,OAAF,CAAU,IAAV;AACH;;AAED,aAAO,KAAKknB,QAAL,CAAcpiC,GAAd,CAAP;AACH;AACJ;;AAEO+hC,EAAAA,uBAAuB,CAACztB,GAAD,EAAgBD,IAAhB;AAC3B,QAAI,CAACA,IAAD,IAASC,GAAG,CAAC7S,MAAJ,KAAe4S,IAAI,CAAC5S,MAAjC,EAAyC;AACrC,aAAO,IAAP;AACH;;AACD,SAAK,IAAIsH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuL,GAAG,CAAC7S,MAAxB,EAAgC,EAAEsH,CAAlC,EAAqC;AACjC,UAAIuL,GAAG,CAACvL,CAAD,CAAH,KAAWsL,IAAI,CAACtL,CAAD,CAAnB,EAAwB;AACpB,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH;AAED;;;;;;;;;AAOA8B,EAAAA,UAAU,CACNkc,YADM,EAENgB,aAFM;AAIN,UAAMya,CAAC,GAAG,KAAKN,eAAL,CAAqBnb,YAArB,CAAV;;AAEA,QAAIyb,CAAJ,EAAO;AACH,WAAK,MAAMl5B,GAAX,IAAkBrJ,MAAM,CAACC,IAAP,CAAYsiC,CAAZ,CAAlB,EAAkC;AAC9B,YAAIv6B,EAAE,GAAGu6B,CAAC,CAACl5B,GAAD,CAAD,CAAO/K,OAAP,CAAe+G,GAAf,MAAwB,IAAjC;;AACA,YAAI2C,EAAJ,EAAQ;AACJ,cACK8f,aAAa,KACVhpB,6BAAA,CAAoCvC,UADvC,IAEG,CAAC,KAAKiO,QAAL,CAAcxJ,SAAd,CAAwB6qB,YAAxB,CAAqC7jB,EAArC,CAFL,IAGC8f,aAAa,KACVhpB,6BAAA,CAAoCtC,SADvC,IAEG,CAAC,KAAKgO,QAAL,CAAcxJ,SAAd,CAAwB4N,WAAxB,CAAoC5G,EAApC,EAAwC,IAAxC,CANT,EAOE;AACEA,YAAAA,EAAE,GAAG,IAAL;AACH;AACJ,SAXD,MAWO;AACH,iBAAOu6B,CAAC,CAACl5B,GAAD,CAAR;AACA,iBAAO,KAAKs4B,aAAL,CAAmBt4B,GAAnB,CAAP;AACH;;AAED,eAAOrB,EAAP;AACH;AACJ;;AAED,WAAO,IAAP;AACH;AAED;;;;;;;;;;AAQAqgB,EAAAA,WAAW,CACPvB,YADO,EAEP1D,OAFO,EAGP0E,aAHO;AAKP,UAAM9f,EAAE,GAAG,KAAK4C,UAAL,CAAgBkc,YAAhB,EAA8BgB,aAA9B,CAAX;;AAEA,QAAI9f,EAAJ,EAAQ;AACJ,aAAO;AACHsgB,QAAAA,MAAM,EAAEle,UAAU,CAAC,KAAK6F,IAAN,CAAV,CAAsBgL,OAAtB,CAA8BjT,EAA9B,CADL;AAEHy5B,QAAAA,MAAM,EAAE;AACJ;AACH;AAJE,OAAP;AAMH;;AAED,QAAIe,MAAJ;;AAEA,QAAI1a,aAAa,KAAKhpB,6BAAA,CAAoCvC,UAA1D,EAAsE;AAClEimC,MAAAA,MAAM,GAAG,GAAT;AACH,KAFD,MAEO,IACH1a,aAAa,KAAKhpB,6BAAA,CAAoCtC,SADnD,EAEL;AACEgmC,MAAAA,MAAM,GAAG,GAAT;AACH,KAJM,MAIA;AACHA,MAAAA,MAAM,GAAG,GAAT;AACH;;AAED,UAAMziC,GAAG,GAAGyiC,MAAM,GAAG1b,YAArB;AACA,QAAIrX,CAAC,GAAG,KAAK0yB,QAAL,CAAcpiC,GAAd,CAAR;;AAEA,QAAI0P,CAAC,IAAIA,CAAC,CAACgzB,OAAX,EAAoB;AAChB,aAAOhzB,CAAC,CAACgzB,OAAT;AACH;;AAEDhzB,IAAAA,CAAC,GAAG,KAAK0yB,QAAL,CAAcpiC,GAAd,IAAqB;AACrBkqB,MAAAA,KAAK,EAAE,KAAKha,IAAL,GAAYtK,UAAZ,CAAuB;AAC1B,YAAI8J,CAAC,CAAC6yB,cAAN,EAAsB;AAClB,eAAKryB,IAAL,GAAYlM,YAAZ,CAAyB0L,CAAC,CAAC6yB,cAA3B;AACH;;AAED,eAAO,KAAKH,QAAL,CAAcpiC,GAAd,CAAP;;AAEA,YAAI0P,CAAC,CAACwL,OAAN,EAAe;AACXxL,UAAAA,CAAC,CAACwL,OAAF,CAAU,IAAV;AACH;AACJ,OAVM,EAUJmI,OAVI;AADc,KAAzB;AAcA,UAAMsf,OAAO,GAAG,KAAKt4B,UAAU,CAAC,KAAK6F,IAAN,CAAf,EACZ,CAACgL,OAAD,EAAU6I,MAAV;AACIrU,MAAAA,CAAC,CAACwL,OAAF,GAAYA,OAAZ;AACAxL,MAAAA,CAAC,CAACqU,MAAF,GAAWA,MAAX;AACH,KAJW,CAAhB;AAOArU,IAAAA,CAAC,CAACgzB,OAAF,GAAY;AACRna,MAAAA,MAAM,EAAEoa,OADA;AAERjB,MAAAA,MAAM,EAAE;AACJ,aAAKW,cAAL,CAAoBriC,GAApB,EAAyB,IAAzB;AACH;AAJO,KAAZ;;AAOA,QAAI+nB,aAAa,IAAI,KAAKld,UAAL,CAAgBkc,YAAhB,CAArB,EAAoD;AAChD;AACA;AACA,WAAKob,gBAAL,CAAsBpb,YAAtB;AACH;;AAED,WAAOrX,CAAC,CAACgzB,OAAT;AACH;;AAED1X,EAAAA,YAAY,CACRjE,YADQ,EAER1D,OAFQ;AAIR,UAAM4H,SAAS,GAAG,EAAE,KAAKC,mBAAzB;AACA,UAAM0X,mBAAmB,GAAG,KAAKtB,eAAjC;;AAEA,QAAIsB,mBAAJ,EAAyB;AACrBA,MAAAA,mBAAmB,CAAClB,MAApB;AACH;;AAED,UAAMgB,OAAO,GAAG,KAAKpa,WAAL,CACZvB,YADY,EAEZ1D,OAFY,EAGZtkB,6BAAA,CAAoCtC,SAHxB,CAAhB;AAMA,SAAK6kC,eAAL,GAAuBoB,OAAvB;AACA,SAAKlB,wBAAL,GAAgCr4B,IAAI,CAACC,GAAL,EAAhC;AAEAs5B,IAAAA,OAAO,CAACna,MAAR,CAAe+B,OAAf,CAAuB;AACnB,UAAI,KAAKgX,eAAL,KAAyBoB,OAA7B,EAAsC;AAClC,eAAO,KAAKpB,eAAZ;AACH;AACJ,KAJD;AAMA,WAAO;AACH/Y,MAAAA,MAAM,EAAEma,OAAO,CAACna,MAAR,CAAexF,IAAf,CAAqBxkB,OAAD,IACxB,KAAK2sB,mBAAL,KAA6BD,SAA7B,IAA0C1sB,OAA1C,GACM,KAAKkM,QAAL,CAAc6L,cAAd,CAA6B0E,KAA7B,CAAmCzc,OAAnC,EAA4C,IAA5C,CADN,GAEM,KAHF,CADL;AAMHmjC,MAAAA,MAAM,EAAE;AACJgB,QAAAA,OAAO,CAAChB,MAAR;AACH;AARE,KAAP;AAUH;;AAqEOS,EAAAA,gBAAgB,CAACpb,YAAD;AACpB,UAAM8b,iBAAiB,GAAG,MAAM9b,YAAhC;AACA,UAAM+b,2BAA2B,GAAG,MAAM/b,YAA1C;AACA,UAAMgc,0BAA0B,GAAG,MAAMhc,YAAzC;AACA,UAAMic,cAAc,GAAG,KAAKZ,QAAL,CAAcS,iBAAd,CAAvB;AACA,UAAMI,wBAAwB,GAC1B,KAAKb,QAAL,CAAcU,2BAAd,CADJ;AAEA,UAAMI,uBAAuB,GACzB,KAAKd,QAAL,CAAcW,0BAAd,CADJ;;AAEA,UAAM5/B,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AAEA,UAAMgL,OAAO,GAAG,CACZ3c,OADY,EAEZyB,GAFY,EAGZmjC,OAHY,EAIZpb,aAJY;;;AAMZ,YAAMzmB,QAAQ,GAAG,MAAAjD,mBAAmB,CAChC,KAAKoM,QAD2B,EAEhClM,OAFgC,CAAnB,UAAA,iBAAA,SAAA,MAGd+C,QAHH;;AAKA,UAAI,CAACA,QAAD,IAAa,CAACA,QAAQ,CAACmmB,KAAT,CAAe2b,QAAf,CAAwBrc,YAAxB,CAAlB,EAAyD;AACrD;AACH;;AAED,UAAIoc,OAAO,CAACjZ,KAAZ,EAAmB;AACf/mB,QAAAA,GAAG,CAACa,YAAJ,CAAiBm/B,OAAO,CAACjZ,KAAzB;AACH;;AAED,aAAO,KAAKkY,QAAL,CAAcpiC,GAAd,CAAP;;AAEA,UAAImjC,OAAO,CAACjoB,OAAZ,EAAqB;AACjBioB,QAAAA,OAAO,CAACjoB,OAAR,CAAgB3c,OAAhB;AACH;;AAED,WAAKsjB,OAAL,CAAatjB,OAAb,EAAsB;AAClBkpB,QAAAA,KAAK,EAAE,CAACV,YAAD,CADW;AAElBrS,QAAAA,OAAO,EAAEpT,QAAQ,CAACoT,OAFA;AAGlBqT,QAAAA;AAHkB,OAAtB;AAKH,KA9BD;;AAgCA,QAAIib,cAAJ,EAAoB;AAChB,YAAMzkC,OAAO,GAAG,KAAKsM,UAAL,CAAgBkc,YAAhB,CAAhB;;AAEA,UAAIxoB,OAAO,IAAIsG,gBAAgB,CAACtG,OAAO,CAACuG,aAAT,EAAwBvG,OAAxB,CAA/B,EAAiE;AAC7D2c,QAAAA,OAAO,CACH3c,OADG,EAEHskC,iBAFG,EAGHG,cAHG,EAIHjkC,6BAAA,CAAoCxC,GAJjC,CAAP;AAMH;AACJ;;AAED,QACI0mC,wBAAwB,IACxB,CAACA,wBAAwB,CAACV,cAF9B,EAGE;AACE,YAAMc,iBAAiB,GAAG;AACtB,cAAM9kC,OAAO,GAAG,KAAKsM,UAAL,CAAgBkc,YAAhB,CAAhB;;AAEA,YACIxoB,OAAO,IACPsG,gBAAgB,CAACtG,OAAO,CAACuG,aAAT,EAAwBvG,OAAxB,CADhB,IAEA,KAAKkM,QAAL,CAAcxJ,SAAd,CAAwB6qB,YAAxB,CAAqCvtB,OAArC,CAHJ,EAIE;AACE2c,UAAAA,OAAO,CACH3c,OADG,EAEHukC,2BAFG,EAGHG,wBAHG,EAIHlkC,6BAAA,CAAoCvC,UAJjC,CAAP;AAMH,SAXD,MAWO;AACHymC,UAAAA,wBAAwB,CAACV,cAAzB,GAA0Cp/B,GAAG,CAACyC,UAAJ,CACtCy9B,iBADsC,EAEtCjC,sBAFsC,CAA1C;AAIH;AACJ,OApBD;;AAsBAiC,MAAAA,iBAAiB;AACpB;;AAED,QACIH,uBAAuB,IACvB,CAACA,uBAAuB,CAACX,cAF7B,EAGE;AACE,YAAMe,gBAAgB,GAAG;AACrB,cAAM/kC,OAAO,GAAG,KAAKsM,UAAL,CAAgBkc,YAAhB,CAAhB;;AAEA,YACIxoB,OAAO,IACPsG,gBAAgB,CAACtG,OAAO,CAACuG,aAAT,EAAwBvG,OAAxB,CADhB,IAEA,KAAKkM,QAAL,CAAcxJ,SAAd,CAAwB4N,WAAxB,CAAoCtQ,OAApC,EAA6C,IAA7C,CAHJ,EAIE;AACE2c,UAAAA,OAAO,CACH3c,OADG,EAEHwkC,0BAFG,EAGHG,uBAHG,EAIHnkC,6BAAA,CAAoCtC,SAJjC,CAAP;AAMH,SAXD,MAWO;AACHymC,UAAAA,uBAAuB,CAACX,cAAxB,GAAyCp/B,GAAG,CAACyC,UAAJ,CACrC09B,gBADqC,EAErClC,sBAFqC,CAAzC;AAIH;AACJ,OApBD;;AAsBAkC,MAAAA,gBAAgB;AACnB;AACJ;;;;AC3cL;;;;AAgBA,MAAMC,YAAY,GAAuB;AACrCC,EAAAA,SAAS,EAAE,4BAD0B;AAErCC,EAAAA,YAAY,EAAE,uBAFuB;AAGrCC,EAAAA,YAAY,EAAE,SAHuB;AAIrCC,EAAAA,YAAY,EAAE,CAJuB;AAKrC53B,EAAAA,MAAM,EAAE;AAL6B,CAAzC;AAQA,IAAIpB,MAAM,GAAuB44B,YAAjC;;AAEA,MAAMK,eAAN;AAMIxhC,EAAAA,YAAYK,MAAcC,KAAaC,OAAeC;AAClD,SAAKH,IAAL,GAAYA,IAAZ;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AAEMihC,EAAAA,QAAQ,CAACC,KAAD;AACX,WACI,KAAKrhC,IAAL,KAAcqhC,KAAK,CAACrhC,IAApB,IACA,KAAKC,GAAL,KAAaohC,KAAK,CAACphC,GADnB,IAEA,KAAKC,KAAL,KAAemhC,KAAK,CAACnhC,KAFrB,IAGA,KAAKC,MAAL,KAAgBkhC,KAAK,CAAClhC,MAJ1B;AAMH;;AAEMmhC,EAAAA,KAAK;AACR,WAAO,IAAIH,eAAJ,CACH,KAAKnhC,IADF,EAEH,KAAKC,GAFF,EAGH,KAAKC,KAHF,EAIH,KAAKC,MAJF,CAAP;AAMH;;;;MAGQohC;AAaT5hC,EAAAA,YAAY9D;AAPJ,mBAAA,GAAa,KAAb;AAEA,4BAAA,GAA+C,EAA/C;;AA4BA,cAAA,GAAQ;AACZ,WAAKmM,QAAL,CAAc2L,kBAAd,CAAiCuJ,SAAjC,CACI,KAAKyL,iCADT;;AAGA,WAAK3gB,QAAL,CAAc6L,cAAd,CAA6BqJ,SAA7B,CAAuC,KAAKnO,QAA5C;;AAEA,YAAMrO,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AAEA/M,MAAAA,GAAG,CAACiJ,gBAAJ,CAAqB,QAArB,EAA+B,KAAK63B,SAApC,EAA+C,IAA/C;;AAEA,UAAI,KAAKC,oBAAT,EAA+B;AAC3B/gC,QAAAA,GAAG,CAACpB,QAAJ,CAAaqK,gBAAb,CACI,KAAK83B,oBADT,EAEI,KAAKC,oBAFT;AAIH;AACJ,KAhBO;;AAuEA,6BAAA,GAAwB1kC,CAAD;AAC3B,UAAI,CAAC,KAAK2kC,sBAAN,IAAgC,CAAC3kC,CAAC,CAAC8E,MAAvC,EAA+C;AAC3C;AACH;;AAED,YAAMA,MAAM,GAAI9E,CAAC,CAAC8E,MAAF,CAAsBuF,IAAtB,IAA+BrK,CAAC,CAAC8E,MAAjD;;AACA,YAAM8/B,eAAe,GAAG,KAAKC,OAAL,CAAa//B,MAAb,CAAxB;;AAEA,UAAIA,MAAM,CAACO,aAAP,IAAwBu/B,eAA5B,EAA6C;AACzC;AACA,cAAME,SAAS,GAAwBhgC,MAAM,CAACO,aAAP,CACnC,KAAKs/B,sBAD8B,CAAvC;;AAIA,YAAIG,SAAJ,EAAe;AACXA,UAAAA,SAAS,CAACtwB,WAAV,CAAsBowB,eAAe,CAAC/8B,SAAtC;AACA,eAAKk9B,kBAAL,GAA0BD,SAA1B;AACH,SAHD,MAGO;AACHhgC,UAAAA,MAAM,CAACO,aAAP,CAAqBgF,IAArB,CAA0BmK,WAA1B,CACIowB,eAAe,CAAC/8B,SADpB;AAGA,eAAKk9B,kBAAL,GAA0B3lC,SAA1B;AACH;AACJ;AACJ,KAxBO;;AA0BA,0CAAA,GAAoC;AACxC,WAAK2S,QAAL,CAAc,KAAK/G,QAAL,CAAc6L,cAAd,CAA6B6J,iBAA7B,EAAd;AACH,KAFO;;AAwBA,iBAAA,GAAY1gB,CAAD;AACf,UAAI,CAAC,KAAKglC,cAAL,CAAoBhlC,CAApB,CAAD,IAA2B,KAAKilC,UAApC,EAAgD;AAC5C,aAAKC,cAAL,CAAoB,KAApB;AACH;AACJ,KAJO;;AA+DA,kBAAA,GAAallC,CAAD;AAChB,UACI,CAAC,KAAKmlC,gBAAN,IACA,CAACZ,UAAU,CAACa,cAAX,CACGplC,CAAC,CAAC8E,MADL,EAEG,KAAKqgC,gBAFR,CAFL,EAME;AACE;AACH;;AAED,WAAKE,OAAL,GAAejmC,SAAf;;AAEA,WAAKkmC,mBAAL;AACH,KAdO;;AA9MJ,SAAKt6B,QAAL,GAAgBnM,OAAhB;AACA,SAAK4R,IAAL,GAAY5R,OAAO,CAACqD,SAApB;AAEArD,IAAAA,OAAO,CAAC6Z,SAAR,CAAkB,KAAKsT,KAAvB;;AAEA,QAAI,OAAO1pB,QAAP,KAAoB,WAAxB,EAAqC;AACjC,UAAI,wBAAwBA,QAA5B,EAAsC;AAClC,aAAKmiC,oBAAL,GAA4B,kBAA5B;AACA,aAAKE,sBAAL,GAA8B,mBAA9B;AACH,OAHD,MAGO,IAAI,8BAA8BriC,QAAlC,EAA4C;AAC/C,aAAKmiC,oBAAL,GAA4B,wBAA5B;AACA,aAAKE,sBAAL,GAA8B,yBAA9B;AACH,OAHM,MAGA,IAAI,2BAA2BriC,QAA/B,EAAyC;AAC5C,aAAKmiC,oBAAL,GAA4B,qBAA5B;AACA,aAAKE,sBAAL,GAA8B,sBAA9B;AACH,OAHM,MAGA,IAAI,0BAA0BriC,QAA9B,EAAwC;AAC3C,aAAKmiC,oBAAL,GAA4B,oBAA5B;AACA,aAAKE,sBAAL,GAA8B,qBAA9B;AACH;AACJ;AACJ;;AAoBD3a,EAAAA,KAAK,CAACjf,KAAD;AACDG,IAAAA,MAAM,GAAG,EAAE,GAAGA,MAAL;AAAa,SAAGH;AAAhB,KAAT;;AAEA,UAAMrH,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AAEA,QAAI,CAAC/M,GAAG,CAAC6hC,gBAAT,EAA2B;AACvB7hC,MAAAA,GAAG,CAAC6hC,gBAAJ,GAAuB,EAAvB;AACH;;AAED,QAAI,CAAC7hC,GAAG,CAAC6hC,gBAAJ,CAAqBp5B,KAA1B,EAAiC;AAC7BzI,MAAAA,GAAG,CAAC6hC,gBAAJ,CAAqBp5B,KAArB,GAA6Bq5B,YAAY,CAAC9hC,GAAG,CAACpB,QAAL,EAAe4I,MAAf,CAAzC;AACH;;AAED,QAAI,CAACH,KAAD,IAAU,CAACA,KAAK,CAACg5B,SAArB,EAAgC;AAC5BrgC,MAAAA,GAAG,CAACpB,QAAJ,CAAa+H,IAAb,CAAkBo7B,SAAlB,CAA4Bl1B,GAA5B,CAAgCuzB,YAAY,CAACC,SAA7C;AACH,KAFD,MAEO;AACHrgC,MAAAA,GAAG,CAACpB,QAAJ,CAAa+H,IAAb,CAAkBo7B,SAAlB,CAA4Bx0B,MAA5B,CAAmC6yB,YAAY,CAACC,SAAhD;AACH;AACJ;;AAED9kC,EAAAA,OAAO;AACH,UAAMyE,GAAG,GAAG,KAAK+M,IAAL,EAAZ;;AAEA,QAAI,KAAKU,YAAT,EAAuB;AACnBzN,MAAAA,GAAG,CAACa,YAAJ,CAAiB,KAAK4M,YAAtB;AACA,WAAKA,YAAL,GAAoB/R,SAApB;AACH;;AAED,SAAK4L,QAAL,CAAc2L,kBAAd,CAAiC4J,WAAjC,CACI,KAAKoL,iCADT;;AAGA,SAAK3gB,QAAL,CAAc6L,cAAd,CAA6B0J,WAA7B,CAAyC,KAAKxO,QAA9C;;AAEArO,IAAAA,GAAG,CAACuJ,mBAAJ,CAAwB,QAAxB,EAAkC,KAAKu3B,SAAvC,EAAkD,IAAlD;;AAEA,QAAI,KAAKC,oBAAT,EAA+B;AAC3B/gC,MAAAA,GAAG,CAACpB,QAAJ,CAAa2K,mBAAb,CACI,KAAKw3B,oBADT,EAEI,KAAKC,oBAFT;AAIH;;AAED,SAAKgB,mBAAL,CAAyB/sB,OAAzB,CAAkCisB,eAAD,IAC7B,KAAKe,UAAL,CAAgBf,eAAe,CAAC/8B,SAAhC,CADJ;;AAGA,SAAK69B,mBAAL,GAA2B,EAA3B;AAEA,WAAO,KAAKP,gBAAZ;AACA,WAAO,KAAKE,OAAZ;AACA,WAAO,KAAKO,mBAAZ;AACA,WAAO,KAAKb,kBAAZ;AACH;;AAgCOc,EAAAA,wBAAwB,CAAC/mC,OAAD;AAC5B,UAAMsB,gBAAgB,GAAGxB,mBAAmB,CAAC,KAAKoM,QAAN,EAAgBlM,OAAhB,CAA5C;;AAEA,QACIsB,gBAAgB,IAChBA,gBAAgB,CAAC2B,OADjB,IAEA3B,gBAAgB,CAAC2B,OAAjB,CAAyB+jC,SAH7B,EAIE;AACE,aAAO,KAAP;AACH;;AAED,SAAK,IAAIx8B,CAAC,GAAuBxK,OAAjC,EAA0CwK,CAA1C,EAA6CA,CAAC,GAAGA,CAAC,CAACb,aAAnD,EAAkE;AAC9D,UAAIa,CAAC,CAACm8B,SAAF,IAAen8B,CAAC,CAACm8B,SAAF,CAAYr7B,QAAZ,CAAqBc,MAAM,CAAC64B,SAA5B,CAAnB,EAA2D;AACvD,eAAO,IAAP;AACH;AACJ;;AAED,WAAO,KAAP;AACH;;AAQOiB,EAAAA,cAAc,CAAChlC,CAAD;AAClB,SAAKmlC,gBAAL,GAAwB/lC,SAAxB;;AAEA,QAAI,KAAK+R,YAAT,EAAuB;AACnB,WAAKV,IAAL,GAAYlM,YAAZ,CAAyB,KAAK4M,YAA9B;;AACA,WAAKA,YAAL,GAAoB/R,SAApB;AACH;;AAED,SAAKimC,OAAL,GAAejmC,SAAf;;AAEA,QAAI,CAAC,KAAK4L,QAAL,CAAc2L,kBAAd,CAAiCgJ,wBAAjC,EAAL,EAAkE;AAC9D,aAAO,KAAP;AACH;;AAED,QAAI3f,CAAJ,EAAO;AACH;AACA;AACA;AACA,UAAIA,CAAC,CAACkP,OAAF,KAAc,OAAlB,EAA2B;AACvB,cAAM62B,SAAS,GAAI/lC,CAAsB,CAAC+kB,IAA1C;AACA,cAAMihB,kBAAkB,GAAG;AACvBC,UAAAA,MAAM,EAAE,IADe;AAEvBC,UAAAA,QAAQ,EAAE,IAFa;AAGvBC,UAAAA,IAAI,EAAE,IAHiB;AAIvBC,UAAAA,KAAK,EAAE,IAJgB;AAKvBC,UAAAA,KAAK,EAAE,IALgB;AAMvBC,UAAAA,KAAK,EAAE,IANgB;AAOvBnjB,UAAAA,KAAK,EAAE,IAPgB;AAQvBojB,UAAAA,MAAM,EAAE;AARe,SAA3B;;AAWA,YAAI,EAAER,SAAS,IAAIC,kBAAf,CAAJ,EAAwC;AACpC,iBAAO,KAAP;AACH;AACJ,OAhBD,MAgBO,IACHhmC,CAAC,CAACkP,OAAF,KAAc,UAAd,IACAlP,CAAC,CAACgxB,eAAF,KAAsB,MADtB,IAEAhxB,CAAC,CAACkP,OAAF,KAAc,QAHX,EAIL;AACE,eAAO,KAAP;AACH;;AAED,UAAI,CAAC,KAAK22B,wBAAL,CAA8B7lC,CAA9B,CAAL,EAAuC;AACnC,eAAO,KAAP;AACH;;AAED,UAAI,KAAKgL,QAAL,CAAc2L,kBAAd,CAAiCgJ,wBAAjC,EAAJ,EAAiE;AAC7D,aAAKwlB,gBAAL,GAAwBnlC,CAAxB;;AACA,aAAKwmC,cAAL;AACH;;AAED,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH;;AAkBOA,EAAAA,cAAc;AAClB,SAAKlB,mBAAL;;AAEA,QAAI,KAAKn0B,YAAT,EAAuB;AACnB,WAAKV,IAAL,GAAYlM,YAAZ,CAAyB,KAAK4M,YAA9B;;AACA,WAAKA,YAAL,GAAoB/R,SAApB;AACH;;AAED,QAAI,CAAC,KAAK+lC,gBAAV,EAA4B;AACxB;AACH;;AAED,SAAKh0B,YAAL,GAAoB,KAAKV,IAAL,GAAYtK,UAAZ,CAAuB;AACvC,WAAKgL,YAAL,GAAoB/R,SAApB;;AACA,WAAKonC,cAAL;AACH,KAHmB,EAGjB,EAHiB,CAApB;AAIH;;AAEOtB,EAAAA,cAAc,CAACuB,OAAD;AAClB,SAAKxB,UAAL,GAAkBwB,OAAlB;;AAEA,QAAI,KAAKb,mBAAT,EAA8B;AAC1B,UAAIa,OAAJ,EAAa;AACT,aAAKb,mBAAL,CAAyB/9B,SAAzB,CAAmC49B,SAAnC,CAA6Cl1B,GAA7C,IACOrF,MAAM,CAAC84B,sBADd;AAGH,OAJD,MAIO;AACH,aAAK4B,mBAAL,CAAyB/9B,SAAzB,CAAmC49B,SAAnC,CAA6Cx0B,MAA7C,IACO/F,MAAM,CAAC84B,sBADd;;AAGA,aAAKqB,OAAL,GAAejmC,SAAf;AACH;AACJ;AACJ;;AAEOkmC,EAAAA,mBAAmB;AACvB,QAAI,CAAC,KAAKH,gBAAV,EAA4B;AACxB;AACH;;AAED,QAAIuB,YAAY,GAAG//B,eAAe,CAAC,KAAK8J,IAAN,EAAY,KAAK00B,gBAAjB,CAAlC;AAEA,UAAM/4B,QAAQ,GAAG,IAAI+3B,eAAJ,CACbuC,YAAY,CAAC1jC,IADA,EAEb0jC,YAAY,CAACzjC,GAFA,EAGbyjC,YAAY,CAACxjC,KAHA,EAIbwjC,YAAY,CAACvjC,MAJA,CAAjB;;AAOA,QAAI,KAAKkiC,OAAL,IAAgBj5B,QAAQ,CAACg4B,QAAT,CAAkB,KAAKiB,OAAvB,CAApB,EAAqD;AACjD;AACH;;AAED,UAAMT,eAAe,GAAG,KAAKC,OAAL,CAAa,KAAKM,gBAAlB,CAAxB;;AACA,UAAMzhC,GAAG,GACL,KAAKyhC,gBAAL,CAAsB9/B,aAAtB,IACA,KAAK8/B,gBAAL,CAAsB9/B,aAAtB,CAAoCinB,WAFxC;;AAIA,QAAI,CAACsY,eAAD,IAAoB,CAAClhC,GAAzB,EAA8B;AAC1B;AACH;;AAED,QAAI,KAAKkiC,mBAAL,KAA6BhB,eAAjC,EAAkD;AAC9C,WAAKM,cAAL,CAAoB,KAApB;;AACA,WAAKU,mBAAL,GAA2BhB,eAA3B;AACH;;AAED,SAAKS,OAAL,GAAej5B,QAAf;AAEA,UAAMu6B,CAAC,GAAGv6B,QAAQ,CAACk4B,KAAT,EAAV;AACA,QAAIsC,2BAA2B,GAAG,KAAlC;AACA,QAAIC,wBAAwB,GAAG,KAA/B;AAEA,UAAMh/B,SAAS,GAAG+8B,eAAe,CAAC/8B,SAAlC;AACA,UAAMb,gBAAgB,GAClBa,SAAS,IACTA,SAAS,CAACxC,aADV,IAECwC,SAAS,CAACxC,aAAV,CAAwB2B,gBAH7B;;AAKA,QAAI,CAACA,gBAAL,EAAuB;AACnB;AACH;;AAED,SACI,IAAIkD,MAAM,GAAG,KAAKi7B,gBAAL,CAAsB18B,aADvC,EAEIyB,MAAM,IAAIA,MAAM,CAAC1D,QAAP,KAAoBC,IAAI,CAACC,YAFvC,EAGIwD,MAAM,GAAGA,MAAM,CAACzB,aAHpB,EAIE;AACE;AACA;AAEA,UAAIyB,MAAM,KAAK,KAAK66B,kBAApB,EAAwC;AACpC;AACH;;AAED2B,MAAAA,YAAY,GAAG//B,eAAe,CAAC,KAAK8J,IAAN,EAAYvG,MAAZ,CAA9B;AAEA,YAAMxG,GAAG,GACLwG,MAAM,CAAC7E,aAAP,IAAwB6E,MAAM,CAAC7E,aAAP,CAAqBinB,WADjD;;AAGA,UAAI,CAAC5oB,GAAL,EAAU;AACN;AACH;;AAED,YAAM6oB,aAAa,GAAG7oB,GAAG,CAAC6P,gBAAJ,CAAqBrJ,MAArB,CAAtB;AACA,YAAMkC,QAAQ,GAAGmgB,aAAa,CAACngB,QAA/B;;AAEA,UAAIA,QAAQ,KAAK,UAAjB,EAA6B;AACzBw6B,QAAAA,2BAA2B,GAAG,IAA9B;AACH,OAFD,MAEO,IAAIx6B,QAAQ,KAAK,OAAb,IAAwBA,QAAQ,KAAK,QAAzC,EAAmD;AACtDy6B,QAAAA,wBAAwB,GAAG,IAA3B;AACH;;AAED,UAAIta,aAAa,CAACua,QAAd,KAA2B,SAA/B,EAA0C;AACtC;AACH;;AAED,UACK,CAACF,2BAAD,IAAgC,CAACC,wBAAlC,IACAta,aAAa,CAACua,QAAd,KAA2B,QAF/B,EAGE;AACE,YAAIJ,YAAY,CAAC1jC,IAAb,GAAoB2jC,CAAC,CAAC3jC,IAA1B,EAAgC;AAC5B2jC,UAAAA,CAAC,CAAC3jC,IAAF,GAAS0jC,YAAY,CAAC1jC,IAAtB;AACH;;AACD,YAAI0jC,YAAY,CAACzjC,GAAb,GAAmB0jC,CAAC,CAAC1jC,GAAzB,EAA8B;AAC1B0jC,UAAAA,CAAC,CAAC1jC,GAAF,GAAQyjC,YAAY,CAACzjC,GAArB;AACH;;AACD,YAAIyjC,YAAY,CAACxjC,KAAb,GAAqByjC,CAAC,CAACzjC,KAA3B,EAAkC;AAC9ByjC,UAAAA,CAAC,CAACzjC,KAAF,GAAUwjC,YAAY,CAACxjC,KAAvB;AACH;;AACD,YAAIwjC,YAAY,CAACvjC,MAAb,GAAsBwjC,CAAC,CAACxjC,MAA5B,EAAoC;AAChCwjC,UAAAA,CAAC,CAACxjC,MAAF,GAAWujC,YAAY,CAACvjC,MAAxB;AACH;AACJ;AACJ;;AAED,UAAM4jC,OAAO,GAAGpgC,eAAe,CAAC,KAAK8J,IAAN,EAAYzJ,gBAAZ,CAA/B;AACA,UAAMggC,QAAQ,GAAGD,OAAO,CAAC/jC,IAAR,GAAe+jC,OAAO,CAAC7jC,KAAxC;AACA,UAAM+jC,SAAS,GAAGF,OAAO,CAAC9jC,GAAR,GAAc8jC,OAAO,CAAC5jC,MAAxC;AACA,UAAM+jC,EAAE,GAAGh8B,MAAM,CAACg5B,YAAlB;AAEAyC,IAAAA,CAAC,CAAC3jC,IAAF,GAAS2jC,CAAC,CAAC3jC,IAAF,GAASkkC,EAAT,GAAcP,CAAC,CAAC3jC,IAAF,GAASkkC,EAAvB,GAA4B,CAArC;AACAP,IAAAA,CAAC,CAAC1jC,GAAF,GAAQ0jC,CAAC,CAAC1jC,GAAF,GAAQikC,EAAR,GAAaP,CAAC,CAAC1jC,GAAF,GAAQikC,EAArB,GAA0B,CAAlC;AACAP,IAAAA,CAAC,CAACzjC,KAAF,GAAUyjC,CAAC,CAACzjC,KAAF,GAAU8jC,QAAQ,GAAGE,EAArB,GAA0BP,CAAC,CAACzjC,KAAF,GAAUgkC,EAApC,GAAyCF,QAAnD;AACAL,IAAAA,CAAC,CAACxjC,MAAF,GAAWwjC,CAAC,CAACxjC,MAAF,GAAW8jC,SAAS,GAAGC,EAAvB,GAA4BP,CAAC,CAACxjC,MAAF,GAAW+jC,EAAvC,GAA4CD,SAAvD;AAEA,UAAMnkC,KAAK,GAAG6jC,CAAC,CAACzjC,KAAF,GAAUyjC,CAAC,CAAC3jC,IAA1B;AACA,UAAMD,MAAM,GAAG4jC,CAAC,CAACxjC,MAAF,GAAWwjC,CAAC,CAAC1jC,GAA5B;;AAEA,QAAIH,KAAK,GAAGokC,EAAE,GAAG,CAAb,IAAkBnkC,MAAM,GAAGmkC,EAAE,GAAG,CAApC,EAAuC;AACnC,YAAMC,cAAc,GAAGvC,eAAe,CAAC5hC,IAAvC;AACA,YAAMokC,aAAa,GAAGxC,eAAe,CAAC3hC,GAAtC;AACA,YAAMokC,eAAe,GAAGzC,eAAe,CAAC1hC,KAAxC;AACA,YAAMokC,gBAAgB,GAAG1C,eAAe,CAACzhC,MAAzC;AACA,YAAMokC,EAAE,GACJ,KAAKxC,kBAAL,IAA2B8B,wBAA3B,GACM,CADN,GAEMnjC,GAAG,CAAC8jC,WAHd;AAIA,YAAMC,EAAE,GACJ,KAAK1C,kBAAL,IAA2B8B,wBAA3B,GACM,CADN,GAEMnjC,GAAG,CAACgkC,WAHd;AAKA7/B,MAAAA,SAAS,CAACsE,KAAV,CAAgBC,QAAhB,GAA2By6B,wBAAwB,GAC7C,OAD6C,GAE7C,UAFN;AAIAh/B,MAAAA,SAAS,CAACsE,KAAV,CAAgBw7B,UAAhB,GAA6Bz8B,MAAM,CAAC+4B,YAApC;AAEAkD,MAAAA,cAAc,CAACh7B,KAAf,CAAqBrJ,KAArB,GACIukC,eAAe,CAACl7B,KAAhB,CAAsBrJ,KAAtB,GACAskC,aAAa,CAACj7B,KAAd,CAAoBpJ,MAApB,GACAukC,gBAAgB,CAACn7B,KAAjB,CAAuBpJ,MAAvB,GACImI,MAAM,CAACg5B,YAAP,GAAsB,IAJ9B;AAMAiD,MAAAA,cAAc,CAACh7B,KAAf,CAAqBnJ,IAArB,GACIokC,aAAa,CAACj7B,KAAd,CAAoBnJ,IAApB,GACAskC,gBAAgB,CAACn7B,KAAjB,CAAuBnJ,IAAvB,GACI2jC,CAAC,CAAC3jC,IAAF,GAASukC,EAAT,GAAc,IAHtB;AAIAF,MAAAA,eAAe,CAACl7B,KAAhB,CAAsBnJ,IAAtB,GAA6B2jC,CAAC,CAAC3jC,IAAF,GAASukC,EAAT,GAAczkC,KAAd,GAAsBokC,EAAtB,GAA2B,IAAxD;AAEAC,MAAAA,cAAc,CAACh7B,KAAf,CAAqBlJ,GAArB,GACIokC,eAAe,CAACl7B,KAAhB,CAAsBlJ,GAAtB,GACAmkC,aAAa,CAACj7B,KAAd,CAAoBlJ,GAApB,GACI0jC,CAAC,CAAC1jC,GAAF,GAAQwkC,EAAR,GAAa,IAHrB;AAIAH,MAAAA,gBAAgB,CAACn7B,KAAjB,CAAuBlJ,GAAvB,GAA6B0jC,CAAC,CAAC1jC,GAAF,GAAQwkC,EAAR,GAAa1kC,MAAb,GAAsBmkC,EAAtB,GAA2B,IAAxD;AAEAC,MAAAA,cAAc,CAACh7B,KAAf,CAAqBpJ,MAArB,GAA8BskC,eAAe,CAACl7B,KAAhB,CAAsBpJ,MAAtB,GAC1BA,MAAM,GAAG,IADb;AAGAqkC,MAAAA,aAAa,CAACj7B,KAAd,CAAoBrJ,KAApB,GAA4BwkC,gBAAgB,CAACn7B,KAAjB,CAAuBrJ,KAAvB,GACxBA,KAAK,GAAG,IADZ;;AAGA,WAAKoiC,cAAL,CAAoB,IAApB;AACH,KA7CD,MA6CO;AACH,WAAKA,cAAL,CAAoB,KAApB;AACH;AACJ;;AAEOL,EAAAA,OAAO,CACX+C,cADW;AAGX,UAAMthC,GAAG,GAAGshC,cAAc,CAACviC,aAA3B;AACA,UAAM3B,GAAG,GAAI4C,GAAG,IAAIA,GAAG,CAACgmB,WAAxB;;AAEA,QAAI,CAAChmB,GAAD,IAAQ,CAAC5C,GAAT,IAAgB,CAACA,GAAG,CAAC6hC,gBAAzB,EAA2C;AACvC,aAAOnmC,SAAP;AACH;;AAED,QAAI,CAACsE,GAAG,CAAC6hC,gBAAJ,CAAqBp5B,KAA1B,EAAiC;AAC7BzI,MAAAA,GAAG,CAAC6hC,gBAAJ,CAAqBp5B,KAArB,GAA6Bq5B,YAAY,CAACl/B,GAAD,EAAM4E,MAAN,CAAzC;AACH;;AAED,QAAI,CAACxH,GAAG,CAAC6hC,gBAAJ,CAAqB3X,QAA1B,EAAoC;AAChC,YAAMgX,eAAe,GAA0B;AAC3C/8B,QAAAA,SAAS,EAAEvB,GAAG,CAAC/D,aAAJ,CAAkB,KAAlB,CADgC;AAE3CS,QAAAA,IAAI,EAAEsD,GAAG,CAAC/D,aAAJ,CAAkB,KAAlB,CAFqC;AAG3CU,QAAAA,GAAG,EAAEqD,GAAG,CAAC/D,aAAJ,CAAkB,KAAlB,CAHsC;AAI3CW,QAAAA,KAAK,EAAEoD,GAAG,CAAC/D,aAAJ,CAAkB,KAAlB,CAJoC;AAK3CY,QAAAA,MAAM,EAAEmD,GAAG,CAAC/D,aAAJ,CAAkB,KAAlB;AALmC,OAA/C;AAQAqiC,MAAAA,eAAe,CAAC/8B,SAAhB,CAA0B6V,SAA1B,GAAsCxS,MAAM,CAAC84B,YAA7C;AACAY,MAAAA,eAAe,CAAC5hC,IAAhB,CAAqB0a,SAArB,MAAoCxS,MAAM,CAAC84B,oBAA3C;AACAY,MAAAA,eAAe,CAAC3hC,GAAhB,CAAoBya,SAApB,MAAmCxS,MAAM,CAAC84B,mBAA1C;AACAY,MAAAA,eAAe,CAAC1hC,KAAhB,CAAsBwa,SAAtB,MAAqCxS,MAAM,CAAC84B,qBAA5C;AACAY,MAAAA,eAAe,CAACzhC,MAAhB,CAAuBua,SAAvB,MAAsCxS,MAAM,CAAC84B,sBAA7C;AAEAY,MAAAA,eAAe,CAAC/8B,SAAhB,CAA0B2M,WAA1B,CAAsCowB,eAAe,CAAC5hC,IAAtD;AACA4hC,MAAAA,eAAe,CAAC/8B,SAAhB,CAA0B2M,WAA1B,CAAsCowB,eAAe,CAAC3hC,GAAtD;AACA2hC,MAAAA,eAAe,CAAC/8B,SAAhB,CAA0B2M,WAA1B,CAAsCowB,eAAe,CAAC1hC,KAAtD;AACA0hC,MAAAA,eAAe,CAAC/8B,SAAhB,CAA0B2M,WAA1B,CAAsCowB,eAAe,CAACzhC,MAAtD;AAEAmD,MAAAA,GAAG,CAAC+D,IAAJ,CAASmK,WAAT,CAAqBowB,eAAe,CAAC/8B,SAArC;AAEAnE,MAAAA,GAAG,CAAC6hC,gBAAJ,CAAqB3X,QAArB,GAAgCgX,eAAhC,CAtBgC;AAyBhC;;AACA,WAAKc,mBAAL,CAAyBhgC,IAAzB,CAA8Bk/B,eAA9B;AACH;;AAED,WAAOlhC,GAAG,CAAC6hC,gBAAJ,CAAqB3X,QAA5B;AACH;;AAEO+X,EAAAA,UAAU,CAACiC,cAAD;AACd,UAAMlkC,GAAG,GAAIkkC,cAAc,CAACviC,aAAf,IACTuiC,cAAc,CAACviC,aAAf,CAA6BinB,WADjC;AAEA,UAAMvqB,OAAO,GAAG2B,GAAG,IAAIA,GAAG,CAAC6hC,gBAA3B;;AAEA,QAAI,CAACxjC,OAAL,EAAc;AACV;AACH;;AAED,QAAIA,OAAO,CAACoK,KAAR,IAAiBpK,OAAO,CAACoK,KAAR,CAAc07B,UAAnC,EAA+C;AAC3C9lC,MAAAA,OAAO,CAACoK,KAAR,CAAc07B,UAAd,CAAyB36B,WAAzB,CAAqCnL,OAAO,CAACoK,KAA7C;AAEA,aAAOpK,OAAO,CAACoK,KAAf;AACH;;AAED,UAAMy4B,eAAe,GAAG7iC,OAAO,IAAIA,OAAO,CAAC6rB,QAA3C;;AAEA,QAAIgX,eAAJ,EAAqB;AACjB,UAAIA,eAAe,CAAC/8B,SAAhB,CAA0BggC,UAA9B,EAA0C;AACtCjD,QAAAA,eAAe,CAAC/8B,SAAhB,CAA0BggC,UAA1B,CAAqC36B,WAArC,CACI03B,eAAe,CAAC/8B,SADpB;AAGH;;AAED,aAAO9F,OAAO,CAAC6rB,QAAf;AACH;AACJ;;AAE4B,SAAdwX,cAAc,CACzBl7B,MADyB,EAEzB49B,KAFyB;AAIzB,WACIA,KAAK,KAAK59B,MAAV;AAEA,KAAC,EACGA,MAAM,CAACqD,uBAAP,CAA+Bu6B,KAA/B,IACAxlC,QAAQ,CAACylC,8BAFZ,CAHL;AAQH;;;;AAGL,SAASvC,YAAT,CACIljC,QADJ,EAEIyI,KAFJ;AAII,QAAMoB,KAAK,GAAG7J,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACA4J,EAAAA,KAAK,CAAC4Y,IAAN,GAAa,UAAb;AACA5Y,EAAAA,KAAK,CAACqI,WAAN,CAAkBlS,QAAQ,CAAC0lC,cAAT,CAAwBC,gBAAgB,CAACl9B,KAAD,CAAxC,CAAlB;AACAzI,EAAAA,QAAQ,CAAC4lC,IAAT,CAAc1zB,WAAd,CAA0BrI,KAA1B;AACA,SAAOA,KAAP;AACH;;AAED,SAAS87B,gBAAT,CAA0Bl9B,KAA1B;AACI;GACDA,KAAK,CAACg5B,iBAAiBh5B,KAAK,CAACg5B;;;;GAI7Bh5B,KAAK,CAACi5B;;;;;;;WAOEj5B,KAAK,CAACuB;;;GAGdvB,KAAK,CAACi5B,gBAAgBj5B,KAAK,CAACi5B;;;;GAI5Bj5B,KAAK,CAACi5B;GACNj5B,KAAK,CAACi5B;GACNj5B,KAAK,CAACi5B;GACNj5B,KAAK,CAACi5B;;;EAtBL;AA0BH;;AC5mBD;;;;;AAOA;;;;MAIamE;AAMTxlC,EAAAA,YACI4tB;AAKA,SAAK6X,yBAAL,GAAiC7X,wBAAjC;AACH;;AAEDA,EAAAA,wBAAwB,CACpBzxB,OADoB,EAEpB0xB,UAFoB;;;AAIpB,UAAMD,wBAAwB,GAAG,MAAA,KAAK6X,yBAAL,UAAA,iBAAA,SAAA,iBAC7BtpC,SACA0xB,WAFJ;AAKA;;AACA,WAAOD,wBAAwB,KAAKnxB,SAA7B,GACDoxB,UADC,GAEDD,wBAFN;AAGH;;;;ACvCL;;;;AAkBA,MAAM8X,UAAU,GAAG,uBAAnB;AACA,MAAMC,aAAa,GAAG,EAAtB;;AAEA,MAAMC,QAAN,SAAuBz9B,WAAvB;AAGInI,EAAAA,YACI9D,SACAC,SACAiM;;;AAEA,UAAMlM,OAAN,EAAeC,OAAf,EAAwBiM,KAAxB;AAPI,kBAAA,GAAY,KAAZ;;AAiCA,oBAAA,GAAe/K,CAAD;;;AAClB,YAAMlB,OAAO,GAAG,MAAA,KAAKmM,QAAL,UAAA,iBAAA,SAAA,MAAepF,KAA/B;;AACA,UAAI/G,OAAO,IAAIkB,CAAC,CAAC6L,aAAF,KAAoB,IAAnC,EAAyC;AACrC/M,QAAAA,OAAO,CAACuW,aAAR,CACI,IAAImzB,KAAJ,CAAUH,UAAV,EAAsB;AAClBI,UAAAA,OAAO,EAAE;AADS,SAAtB,CADJ;AAKH;;AACD,UACI3pC,OAAO,IACP,CAACA,OAAO,CAACsL,QAAR,CAAiBpK,CAAC,CAAC6L,aAAnB,CAFL,EAGE;AACE,aAAK68B,SAAL,GAAiB,KAAjB;AACH;AACJ,KAfO;;AAiBA,mBAAA,GAAa;AACjB,WAAKA,SAAL,GAAiB,IAAjB;AACH,KAFO;;AAzCJ,QAAI,KAAKx9B,MAAL,CAAY6Z,IAAZ,KAAqBpnB,aAAa,CAACC,MAAvC,EAA+C;AAC3C,YAAMkB,OAAO,GAAG,MAAA,KAAKmM,QAAL,UAAA,iBAAA,SAAA,MAAepF,KAA/B;AACA/G,MAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE6N,gBAAT,CAA0B,UAA1B,EAAsC,KAAK2B,WAA3C,CAAA;AACAxP,MAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE6N,gBAAT,CAA0B,SAA1B,EAAqC,KAAK0B,UAA1C,CAAA;AACH;AACJ;;AAEDpP,EAAAA,OAAO;;;AACH,QAAI,KAAKiM,MAAL,CAAY6Z,IAAZ,KAAqBpnB,aAAa,CAACC,MAAvC,EAA+C;AAC3C,YAAMkB,OAAO,GAAG,MAAA,KAAKmM,QAAL,UAAA,iBAAA,SAAA,MAAepF,KAA/B;AACA/G,MAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEmO,mBAAT,CAA6B,UAA7B,EAAyC,KAAKqB,WAA9C,CAAA;AACAxP,MAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEmO,mBAAT,CAA6B,SAA7B,EAAwC,KAAKoB,UAA7C,CAAA;;AAEA,UAAI,KAAKq6B,SAAT,EAAoB;AAChB,cAAMpiC,GAAG,GAAG,KAAK0E,QAAL,CAAc9I,SAAd,GAA0BI,QAAtC;;AACA,cAAAgE,GAAG,CAAC+D,IAAJ,UAAA,iBAAA,SAAA,MAAUgL,cACN,IAAImzB,KAAJ,CAAUH,UAAV,EAAsB;AAClBI,UAAAA,OAAO,EAAE;AADS,SAAtB,EADJ;AAKH;AACJ;AACJ;;;;MAwBQE;AAQThmC,EAAAA,YAAY9D;AANJ,iBAAA,GAA2C,EAA3C;AAGA,6BAAA,GAAuB,CAAvB;;AAwBA,wBAAA,GAAmBmB,CAAD;AACtB,YAAM0D,GAAG,GAAG,KAAKkP,UAAL,EAAZ;;AACA,UAAI,KAAKg2B,oBAAT,EAA+B;AAC3BllC,QAAAA,GAAG,CAACa,YAAJ,CAAiB,KAAKqkC,oBAAtB;AACH;;AAED,WAAKA,oBAAL,GAA4BllC,GAAG,CAACyC,UAAJ,CAAe,MACvC,KAAK0iC,aAAL,CAAmB7oC,CAAC,CAAC8E,MAArB,CADwB,CAA5B;AAGH,KATO;;AAWA,mBAAA,GAAchG,OAAD;;;AACjB,UAAI,CAACA,OAAL,EAAc;AACV;AACH;;AAED,YAAMgqC,gBAAgB,GAAGlqC,mBAAmB,CAAC,KAAKoM,QAAN,EAAgBlM,OAAhB,CAA5C;;AACA,UACI,CAAA,MAAAgqC,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,SAAA,GAAAA,gBAAgB,CAAExnC,QAAlB,UAAA,iBAAA,SAAA,MAA4B+J,WAAW0Z,IAAvC,MAAgDpnB,aAAa,CAACE,MADlE,EAEE;AACE;AACH;;AAED,WAAKkrC,aAAL,CAAmBjqC,OAAnB;AACH,KAbO;;AA8BA,sBAAA,GAAiB+qB,MAAD;;;;AAEpB,YAAMvjB,GAAG,GAAG,KAAKsM,UAAL,GAAkBtQ,QAA9B;;AACA,UAAIgE,GAAG,CAAC6Z,aAAJ,KAAsB7Z,GAAG,CAAC+D,IAA9B,EAAoC;AAChC;AACH;;AAED;AAEI,OAAC,KAAK2+B,iBAAL,CAAuBrpB,wBAAvB,EAAD;AAEArZ,MAAAA,GAAG,CAAC+D,IAAJ,CAASD,QAAT,CAAkByf,MAAlB,CAJJ,EAKE;AACE;AACH;;AAED,UAAIvT,WAAW,GAAG,KAAKuF,QAAL,CAAcgD,GAAd,EAAlB;;AACA,aACIvI,WAAW,IACX,CAAChQ,GAAG,CAAC+D,IAAJ,CAASD,QAAT,CAAkB,MAAA,MAAAkM,WAAW,CAACzQ,GAAZ,EAAA,UAAA,iBAAA,SAAA,MAAmB4C,aAAnB,UAAA,iBAAA,KAAA,GAAoC,IAAtD,CAFL,EAGE;AACE6N,QAAAA,WAAW,GAAG,KAAKuF,QAAL,CAAcgD,GAAd,EAAd;AACH;;AAED,YAAAvI,WAAW,SAAX,IAAAA,WAAW,WAAX,SAAA,GAAAA,WAAW,CAAEzQ,GAAb,EAAA,UAAA,iBAAA,SAAA,MAAoB0V,OAApB;AACH,KAzBO;;AA7DJ,SAAKvQ,QAAL,GAAgBnM,OAAhB;AACA,SAAK+T,UAAL,GAAkB/T,OAAO,CAACqD,SAA1B;;AACA,SAAK0Q,UAAL,GAAkBjG,gBAAlB,CAAmC07B,UAAnC,EAA+C,KAAKY,eAApD;;AAEA,SAAKD,iBAAL,GAAyBnqC,OAAO,CAAC8X,kBAAjC;AACA,SAAKuyB,oBAAL,GAA4BrqC,OAAO,CAACgY,cAApC;;AAEA,SAAKqyB,oBAAL,CAA0BhpB,SAA1B,CAAoC,KAAK7R,UAAzC;AACH;;AAEDpP,EAAAA,OAAO;AACH,UAAMyE,GAAG,GAAG,KAAKkP,UAAL,EAAZ;;AACA,SAAKs2B,oBAAL,CAA0B3oB,WAA1B,CAAsC,KAAKlS,UAA3C;;AACA3K,IAAAA,GAAG,CAACuJ,mBAAJ,CAAwBo7B,UAAxB,EAAoC,KAAKY,eAAzC;;AAEA,QAAI,KAAKL,oBAAT,EAA+B;AAC3BllC,MAAAA,GAAG,CAACa,YAAJ,CAAiB,KAAKqkC,oBAAtB;AACH;AACJ;;AA4BOG,EAAAA,aAAa,CAACjqC,OAAD;;;;AAEjB,QAAI,CAAA,MAAA,KAAK+c,QAAL,CAAc,KAAKA,QAAL,CAAc7Z,MAAd,GAAuB,CAArC,CAAA,UAAA,iBAAA,SAAA,MAAyC6D,KAAzC,MAAmD/G,OAAvD,EAAgE;AAC5D;AACH;;AAED,QAAI,KAAK+c,QAAL,CAAc7Z,MAAd,GAAuBsmC,aAA3B,EAA0C;AACtC,WAAKzsB,QAAL,CAAcstB,KAAd;AACH;;AAED,SAAKttB,QAAL,CAAcnW,IAAd,CACI,IAAIJ,eAAJ,CAAiC,KAAKsN,UAAtC,EAAkD9T,OAAlD,CADJ;AAGH;;AA6BMyC,EAAAA,cAAc,CAACzC,OAAD,EAAuBiM,KAAvB;AACjB,UAAMzJ,QAAQ,GAAG,IAAIinC,QAAJ,CAAa,KAAKv9B,QAAlB,EAA4BlM,OAA5B,EAAqCiM,KAArC,CAAjB;;AAEA,QACIA,KAAK,CAACga,IAAN,KAAepnB,aAAa,CAACE,MAA7B,IACAiB,OAAO,CAACuG,aAAR,CAAsB8a,aAAtB,KAAwCrhB,OAF5C,EAGE;AACE,WAAKiqC,aAAL,CAAmBjqC,OAAnB;AACH;;AAED,WAAOwC,QAAP;AACH;;;;ACzLL;;;;;AAmCA,MAAM8nC,OAAN;AAQIzmC,EAAAA,YAAY9D;AACR,SAAK8X,kBAAL,GAA0B9X,OAAO,CAAC8X,kBAAlC;AACA,SAAKE,cAAL,GAAsBhY,OAAO,CAACgY,cAA9B;AACA,SAAKrV,SAAL,GAAiB3C,OAAO,CAAC2C,SAAzB;AACA,SAAKd,IAAL,GAAY7B,OAAO,CAAC6B,IAApB;AACA,SAAKoB,YAAL,GAAoBjD,OAAO,CAACiD,YAA5B;AACA,SAAKunC,IAAL,GAAYxqC,OAAZ;AACH;;;AAGL;;;;;AAGA,MAAMyqC,WAAN;AAmCI3mC,EAAAA,YAAYe,KAAaqH;;;AA9BjB,iCAAA,GAA0C,EAA1C;AACA,kBAAA,GAA0B,IAAIoF,GAAJ,EAA1B;AAEA,mBAAA,GAA6B,EAA7B;AAER,iBAAA,GAAmBo5B,OAAnB;AACA,cAAA,GAAQ,KAAR;;AAoLA,kBAAA,GAAY;AACR,UAAI,CAAC,KAAK94B,IAAV,EAAgB;AACZ,cAAM,IAAI3Q,KAAJ,CAAU,yBAAV,CAAN;AACH;;AAED,aAAO,KAAK2Q,IAAZ;AACH,KAND;;AA3JI,SAAK+4B,QAAL,GAAgB/kC,aAAa,CAACf,GAAD,CAA7B;AACA,SAAK+M,IAAL,GAAY/M,GAAZ;AAEA,UAAMxB,SAAS,GAAG,KAAKA,SAAvB;AAEA,SAAKyU,kBAAL,GAA0B,IAAIwe,uBAAJ,CAA4BjzB,SAA5B,CAA1B;AACA,SAAK2U,cAAL,GAAsB,IAAI4Z,mBAAJ,CAAwB,IAAxB,EAA8BvuB,SAA9B,CAAtB;AACA,SAAKV,SAAL,GAAiB,IAAI0qB,YAAJ,CAAiB,IAAjB,CAAjB;AACA,SAAKxrB,IAAL,GAAY,IAAIyX,OAAJ,CAAY,IAAZ,EAAkBpN,KAAK,SAAL,IAAAA,KAAK,WAAL,SAAA,GAAAA,KAAK,CAAEqN,QAAzB,CAAZ;AACA,SAAKtW,YAAL,GAAoB,IAAIqmC,eAAJ;AAEhB,KAAAp9B,KAAK,SAAL,IAAAA,KAAK,WAAL,SAAA,GAAAA,KAAK,CAAE0+B,2BAAP,MACI1+B,KAAK,SAAL,IAAAA,KAAK,WAAL,SAAA,GAAAA,KAAK,CAAE2+B,8BADX,CAFgB,CAApB;AAKA,SAAK7xB,UAAL,GAAkB,MAAA9M,KAAK,SAAL,IAAAA,KAAK,WAAL,SAAA,GAAAA,KAAK,CAAE8M,UAAP,UAAA,iBAAA,KAAA,GAAqB,IAAvC;AACA,SAAKC,eAAL,GAAuB,CAAC,EAAC/M,KAAK,SAAL,IAAAA,KAAK,WAAL,SAAA,GAAAA,KAAK,CAAE+M,eAAR,CAAxB;AAEA,SAAKhF,cAAL,GAAsB,IAAI5C,kBAAJ,CAAuBhO,SAAvB,CAAtB;AAEA,SAAKsV,SAAL,GAAiB,MAAAzM,KAAK,SAAL,IAAAA,KAAK,WAAL,SAAA,GAAAA,KAAK,CAAEyM,SAAP,UAAA,iBAAA,KAAA,GAAsBhP,EAAD,IAAQA,EAAE,CAACC,aAAjD;AAEA,SAAKkhC,QAAL,GAAgB;AACZC,MAAAA,YAAY,EAAE;AACV,YAAI,KAAK5O,UAAT,EAAqB;AACjB,eAAKA,UAAL;;AACA,iBAAO,KAAKA,UAAZ;AACH;AACJ,OANW;AAQZ6O,MAAAA,cAAc,EAAGtI,SAAD;AACZ,YAAI,CAAC,KAAKvG,UAAV,EAAsB;AAClB,gBAAM10B,GAAG,GAAGpE,SAAS,GAAGI,QAAxB;AACA,eAAK04B,UAAL,GAAkBsG,gBAAgB,CAC9Bh7B,GAD8B,EAE9B,IAF8B,EAG9BtH,wBAH8B,EAI9BuiC,SAJ8B,CAAlC;AAMH;AACJ;AAlBW,KAAhB;AAqBAt7B,IAAAA,wBAAwB,CAAC/D,SAAD,CAAxB;AAGA;;AACA,SAAKwW,SAAL,CAAe;AACX,WAAKixB,QAAL,CAAcE,cAAd,CAA6B,IAA7B;AACH,KAFD;AAGH;AAED;;;;;;;AAKQC,EAAAA,WAAW,CAAC/+B,KAAD;;;AACf,QAAI,CAACA,KAAL,EAAY;AACR;AACH;;AAED,SAAKyM,SAAL,GAAiB,MAAAzM,KAAK,CAACyM,SAAN,UAAA,iBAAA,KAAA,GAAmB,KAAKA,SAAzC;AACH;;AAEDuyB,EAAAA,aAAa,CACTC,UADS,EAETj/B,KAFS;AAIT,UAAM0H,OAAO,GAAG,IAAI22B,OAAJ,CAAY,IAAZ,CAAhB;;AAEA,QAAI,CAACY,UAAL,EAAiB;AACb,WAAKx3B,SAAL,CAAejC,GAAf,CAAmBkC,OAAnB;AACH;;AAED,SAAKq3B,WAAL,CAAiB/+B,KAAjB;;AAEA,WAAO0H,OAAP;AACH;;AAEDw3B,EAAAA,cAAc,CAACx3B,OAAD,EAAyBy3B,YAAzB;AACV,QAAIA,YAAJ,EAAkB;AACd,WAAK13B,SAAL,CAAenB,KAAf;AACH,KAFD,MAEO;AACH,WAAKmB,SAAL,CAAetB,MAAf,CAAsBuB,OAAtB;AACH;;AAED,QAAI,KAAKD,SAAL,CAAe23B,IAAf,KAAwB,CAA5B,EAA+B;AAC3B,WAAKlrC,OAAL;AACH;AACJ;;AAEDA,EAAAA,OAAO;;;AACH,SAAK0qC,QAAL,CAAcC,YAAd;AAEA,UAAMlmC,GAAG,GAAG,KAAK+M,IAAjB;AAEA/M,IAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,SAAA,GAAAA,GAAG,CAAEa,YAAL,CAAkB,KAAK6lC,UAAvB,CAAA;AACA,WAAO,KAAKA,UAAZ;AACA,SAAKC,UAAL,GAAkB,EAAlB;AAEA,SAAKC,wBAAL,GAAgC,EAAhC;;AAEA,QAAI5mC,GAAG,IAAI,KAAK6mC,qBAAhB,EAAuC;AACnC7mC,MAAAA,GAAG,CAACa,YAAJ,CAAiB,KAAKgmC,qBAAtB;AACA,aAAO,KAAKA,qBAAZ;AACH;;AAED,UAAA,KAAKxoC,OAAL,UAAA,iBAAA,SAAA,MAAc9C,SAAd;AACA,UAAA,KAAK4oB,WAAL,UAAA,iBAAA,SAAA,MAAkB5oB,SAAlB;AACA,UAAA,KAAK+B,OAAL,UAAA,iBAAA,SAAA,MAAc/B,SAAd;AACA,UAAA,KAAKwC,QAAL,UAAA,iBAAA,SAAA,MAAexC,SAAf;AACA,UAAA,KAAK0C,KAAL,UAAA,iBAAA,SAAA,MAAY1C,SAAZ;AACA,UAAA,KAAKmC,SAAL,UAAA,iBAAA,SAAA,MAAgBnC,SAAhB;AACA,UAAA,KAAK4B,eAAL,UAAA,iBAAA,SAAA,MAAsB5B,SAAtB;AACA,UAAA,KAAKqC,QAAL,UAAA,iBAAA,SAAA,MAAerC,SAAf;AAEA,SAAK0X,kBAAL,CAAwB1X,OAAxB;AACA,SAAKuC,SAAL,CAAevC,OAAf;AACA,SAAK4X,cAAL,CAAoB5X,OAApB;AACA,SAAKyB,IAAL,CAAUzB,OAAV;;AAEA,SAAK6T,cAAL,CAAoB7T,OAApB;;AAEAmH,IAAAA,sCAAsC,CAAC,KAAKlE,SAAN,CAAtC;AACA+H,IAAAA,iBAAiB,CAAC,KAAK/H,SAAN,CAAjB;AAEA,SAAKsnC,QAAL,GAAgB,IAAI9kC,OAAJ,EAAhB;;AACA,SAAK8N,SAAL,CAAenB,KAAf;;AAEA,QAAI3N,GAAJ,EAAS;AACLW,MAAAA,sBAAsB,CAACX,GAAD,CAAtB;AACA,aAAOA,GAAG,CAACyV,iBAAX;AACA,aAAO,KAAK1I,IAAZ;AACH;AACJ;;AAED1R,EAAAA,YAAY,CACRD,OADQ,EAER0rC,SAFQ;AAIR,UAAMC,OAAO,GAAG,KAAKjB,QAArB;AACA,QAAIjqC,KAAK,GAAGkrC,OAAO,CAAC5kC,GAAR,CAAY/G,OAAZ,CAAZ;;AAEA,QAAIS,KAAJ,EAAW;AACP,UAAIirC,SAAS,KAAK,KAAd,IAAuBhqC,MAAM,CAACC,IAAP,CAAYlB,KAAZ,EAAmByC,MAAnB,KAA8B,CAAzD,EAA4D;AACxDyoC,QAAAA,OAAO,CAACv5B,MAAR,CAAepS,OAAf;AACH;AACJ,KAJD,MAIO,IAAI0rC,SAAS,KAAK,IAAlB,EAAwB;AAC3BjrC,MAAAA,KAAK,GAAG,EAAR;AACAkrC,MAAAA,OAAO,CAAC35B,GAAR,CAAYhS,OAAZ,EAAqBS,KAArB;AACH;;AAED,WAAOA,KAAP;AACH;;AAUDmrC,EAAAA,YAAY;AACR,QAAI,CAAC,KAAKj6B,IAAV,EAAgB;AACZ;AACH;;AAED,SAAK65B,wBAAL,CAA8B5kC,IAA9B,CAAmC,KAAK+K,IAAL,CAAUnO,QAAV,CAAmB+H,IAAtD;;AAEA,QAAI,KAAKkgC,qBAAT,EAAgC;AAC5B;AACH;;AAED,SAAKA,qBAAL,GAA6B,KAAK95B,IAAL,CAAUtK,UAAV,CAAqB;AAC9C,aAAO,KAAKokC,qBAAZ;;AAEA,WACI,IAAI/hC,EAAE,GACF,KAAK8hC,wBAAL,CAA8BnB,KAA9B,EAFR,EAGI3gC,EAHJ,EAIIA,EAAE,GAAG,KAAK8hC,wBAAL,CAA8BnB,KAA9B,EAJT,EAKE;AACEl/B,QAAAA,iBAAiB,CAAC,KAAK/H,SAAN,EAAiBsG,EAAjB,CAAjB;AACAioB,QAAAA,mBAAmB,CAACoB,eAApB,CAAoC,KAAKhb,cAAzC,EAAyDrO,EAAzD;AACH;AACJ,KAZ4B,EAY1B,CAZ0B,CAA7B;AAcAzC,IAAAA,mBAAmB,CAAC,KAAK7D,SAAN,EAAiB,IAAjB,CAAnB;AACH;;AAEDwW,EAAAA,SAAS,CAAC9H,QAAD;;;AACL,QAAI,CAAC,KAAKH,IAAV,EAAgB;AACZ;AACH;;AAED,SAAK45B,UAAL,CAAgB3kC,IAAhB,CAAqBkL,QAArB;;AAEA,QAAI,CAAC,KAAKw5B,UAAV,EAAsB;AAClB,WAAKA,UAAL,GAAkB,MAAA,KAAK35B,IAAL,UAAA,iBAAA,SAAA,MAAWtK,WAAW;AACpC,eAAO,KAAKikC,UAAZ;AACA,aAAK5wB,cAAL;AACH,SAAE,EAHH;AAIH;AACJ;;AAEDA,EAAAA,cAAc;AACV,QAAI,CAAC,KAAK/I,IAAV,EAAgB;AACZ;AACH;;AAED,UAAMk6B,KAAK,GAAG,KAAKN,UAAnB;;AAEA,SAAKA,UAAL,GAAkB,EAAlB;AACAM,IAAAA,KAAK,CAAChyB,OAAN,CAAe/H,QAAD,IAAcA,QAAQ,EAApC;AACH;;;;SAGW85B,aAAa7rC;AACzB;AACA;AACA,QAAM+rC,WAAW,GAAG/rC,OAAO,CAACwqC,IAA5B;AACAuB,EAAAA,WAAW,CAACF,YAAZ;AACH;AAED;;;;SAGgBX,cACZrmC,KACAqH;AAEA,MAAIlM,OAAO,GAAGgsC,iBAAiB,CAACnnC,GAAD,CAA/B;;AAEA,MAAI7E,OAAJ,EAAa;AACT,WAAOA,OAAO,CAACkrC,aAAR,CAAsB,KAAtB,EAA6Bh/B,KAA7B,CAAP;AACH;;AAEDlM,EAAAA,OAAO,GAAG,IAAIyqC,WAAJ,CAAgB5lC,GAAhB,EAAqBqH,KAArB,CAAV;AACCrH,EAAAA,GAAiC,CAACyV,iBAAlC,GAAsDta,OAAtD;AACD,SAAOA,OAAO,CAACkrC,aAAR,EAAP;AACH;AAED;;;;SAGgBe,WAAWpnC;AACvB,QAAM7E,OAAO,GAAGgsC,iBAAiB,CAACnnC,GAAD,CAAjC;AAEA,SAAO7E,OAAO,GAAGA,OAAO,CAACkrC,aAAR,CAAsB,IAAtB,CAAH,GAAiC,IAA/C;AACH;AAED;;;;;SAIgBgB,YAAYlsC;AACxB,QAAM+rC,WAAW,GAAG/rC,OAAO,CAACwqC,IAA5B;;AACA,MAAI,CAACuB,WAAW,CAACnpC,QAAjB,EAA2B;AACvBmpC,IAAAA,WAAW,CAACnpC,QAAZ,GAAuB,IAAIwyB,WAAJ,CACnB2W,WADmB,EAEnBA,WAAW,CAAC1oC,SAFO,CAAvB;AAIH;;AAED,SAAO0oC,WAAW,CAACnpC,QAAnB;AACH;AAED;;;;;SAIgBupC,SAASnsC;AACrB,QAAM+rC,WAAW,GAAG/rC,OAAO,CAACwqC,IAA5B;;AACA,MAAI,CAACuB,WAAW,CAACjpC,KAAjB,EAAwB;AACpBipC,IAAAA,WAAW,CAACjpC,KAAZ,GAAoB,IAAIi8B,QAAJ,CAAagN,WAAb,EAA0BA,WAAW,CAAC1oC,SAAtC,CAApB;AACH;;AAED,SAAO0oC,WAAW,CAACjpC,KAAnB;AACH;SAEespC,WAAWpsC;AACvB,QAAM+rC,WAAW,GAAG/rC,OAAO,CAACwqC,IAA5B;;AACA,MAAI,CAACuB,WAAW,CAAC7oC,OAAjB,EAA0B;AACtB6oC,IAAAA,WAAW,CAAC7oC,OAAZ,GAAsB,IAAIwiC,UAAJ,CAAeqG,WAAf,CAAtB;AACH;;AAED,SAAOA,WAAW,CAAC7oC,OAAnB;AACH;AAED;;;;;;SAKgB6a,WACZ/d,SACAkM;AAEA,QAAM6/B,WAAW,GAAG/rC,OAAO,CAACwqC,IAA5B;;AACA,MAAI,CAACuB,WAAW,CAAC5pC,OAAjB,EAA0B;AACtB4pC,IAAAA,WAAW,CAAC5pC,OAAZ,GAAsB,IAAI2b,UAAJ,CAAeiuB,WAAf,EAA4B7/B,KAA5B,CAAtB;AACH;;AAED,SAAO6/B,WAAW,CAAC5pC,OAAnB;AACH;AAED;;;;;;;;;;;;;;;SAcgBkqC,aACZrsC;AAEA43B,0BACAC;AAEA,QAAMkU,WAAW,GAAG/rC,OAAO,CAACwqC,IAA5B;;AACA,MAAI,CAACuB,WAAW,CAACxpC,SAAjB,EAA4B;AACxBwpC,IAAAA,WAAW,CAACxpC,SAAZ,GAAwB,IAAIo1B,YAAJ,CACpBoU,WADoB,EAEpBnU,wBAFoB,EAGpBC,eAHoB,CAAxB;AAKH;;AAED,SAAOkU,WAAW,CAACxpC,SAAnB;AACH;SAEe+pC,mBACZtsC;AAEA,QAAM+rC,WAAW,GAAG/rC,OAAO,CAACwqC,IAA5B;;AACA,MAAI,CAACuB,WAAW,CAAC/pC,eAAjB,EAAkC;AAC9B+pC,IAAAA,WAAW,CAAC/pC,eAAZ,GAA8B,IAAI+gC,kBAAJ,CAAuBgJ,WAAvB,CAA9B;AACH;;AAED,SAAOA,WAAW,CAAC/pC,eAAnB;AACH;SAEeuqC,eAAevsC;AAC3B,QAAM+rC,WAAW,GAAG/rC,OAAO,CAACwqC,IAA5B;;AACA,MAAI,CAACuB,WAAW,CAAC/iB,WAAjB,EAA8B;AAC1BjL,IAAAA,UAAU,CAAC/d,OAAD,CAAV;AACAqsC,IAAAA,YAAY,CAACrsC,OAAD,CAAZ;AACAmsC,IAAAA,QAAQ,CAACnsC,OAAD,CAAR;AACAksC,IAAAA,WAAW,CAAClsC,OAAD,CAAX;AACAosC,IAAAA,UAAU,CAACpsC,OAAD,CAAV;AACAssC,IAAAA,kBAAkB,CAACtsC,OAAD,CAAlB;AACA+rC,IAAAA,WAAW,CAAC/iB,WAAZ,GAA0B,IAAI6D,cAAJ,CAAmBkf,WAAnB,CAA1B;AACH;;AAED,SAAOA,WAAW,CAAC/iB,WAAnB;AACH;SAEewjB,YAAYxsC;AACxB,QAAM+rC,WAAW,GAAG/rC,OAAO,CAACwqC,IAA5B;AACA,SAAOuB,WAAW,CAACjB,QAAnB;AACH;SAEe2B,YAAYzsC;AACxB,QAAM+rC,WAAW,GAAG/rC,OAAO,CAACwqC,IAA5B;;AACA,MAAI,CAACuB,WAAW,CAACtpC,QAAjB,EAA2B;AACvBspC,IAAAA,WAAW,CAACtpC,QAAZ,GAAuB,IAAIqnC,WAAJ,CAAgBiC,WAAhB,CAAvB;AACH;;AAED,SAAOA,WAAW,CAACtpC,QAAnB;AACH;SAEe2oC,eACZprC,SACAqrC;AAEArrC,EAAAA,OAAO,CAACwqC,IAAR,CAAaY,cAAb,CAA4BprC,OAA5B,EAAqCqrC,YAArC;AACH;AAED;;;;;SAIgBW,kBAAkBnnC;AAC9B,SAAQA,GAAiC,CAACyV,iBAA1C;AACH;AAED;;;;;;;;SAOgBoyB,SAAS1sC,SAAwB2sC;AAC7C,QAAMnC,IAAI,GAAGxqC,OAAO,CAACwqC,IAArB;;AAEA,MAAIA,IAAI,CAAClqC,KAAL,KAAeqsC,IAAnB,EAAyB;AACrBnC,IAAAA,IAAI,CAAClqC,KAAL,GAAaqsC,IAAb;;AAEA,UAAM9J,WAAW,GAAI5iC,OAAD;AAChB,UAAI,CAACA,OAAO,CAACO,YAAb,EAA2B;AACvB,eAAOiE,UAAU,CAACyrB,WAAlB;AACH;;AAED,UACInwB,mBAAmB,CAACyqC,IAAD,EAAOvqC,OAAP,CAAnB,IACAA,OAAO,CAAC+tB,YAAR,CAAqBvtB,oBAArB,CAFJ,EAGE;AACEN,QAAAA,wBAAwB,CAACqqC,IAAD,EAAOvqC,OAAP,CAAxB;AACH;;AAED,aAAOwE,UAAU,CAACyrB,WAAlB;AACH,KAbD;;AAeA,UAAMzoB,GAAG,GAAG+iC,IAAI,CAACnnC,SAAL,GAAiBI,QAA7B;AACA,UAAM+H,IAAI,GAAG/D,GAAG,CAAC+D,IAAjB;AAEAq3B,IAAAA,WAAW,CAACr3B,IAAD,CAAX;AAEA,UAAM4jB,MAAM,GAAG5nB,uBAAuB,CAACC,GAAD,EAAM+D,IAAN,EAAYq3B,WAAZ,CAAtC;;AAEA,QAAIzT,MAAJ,EAAY;AACR,aAAOA,MAAM,CAACa,QAAP,EAAP,EAA0B;AACtB;AACH;AACJ;AACJ;AACJ;SAEe2c,OAAO5sC;AACnB,SAAQA,OAAuB,CAACM,KAAhC;AACH;;;;"}