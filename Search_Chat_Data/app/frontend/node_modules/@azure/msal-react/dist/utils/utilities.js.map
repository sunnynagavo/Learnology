{"version":3,"file":"utilities.js","sources":["../../src/utils/utilities.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nexport function getChildrenOrFunction(children, args) {\n    if (typeof children === \"function\") {\n        return children(args);\n    }\n    return children;\n}\n/**\n * Helper function to determine whether 2 arrays are equal\n * Used to avoid unnecessary state updates\n * @param arrayA\n * @param arrayB\n */\nexport function accountArraysAreEqual(arrayA, arrayB) {\n    if (arrayA.length !== arrayB.length) {\n        return false;\n    }\n    const comparisonArray = [...arrayB];\n    return arrayA.every((elementA) => {\n        const elementB = comparisonArray.shift();\n        if (!elementA || !elementB) {\n            return false;\n        }\n        return (elementA.homeAccountId === elementB.homeAccountId &&\n            elementA.localAccountId === elementB.localAccountId &&\n            elementA.username === elementB.username);\n    });\n}\nexport function getAccountByIdentifiers(allAccounts, accountIdentifiers) {\n    if (allAccounts.length > 0 &&\n        (accountIdentifiers.homeAccountId ||\n            accountIdentifiers.localAccountId ||\n            accountIdentifiers.username)) {\n        const matchedAccounts = allAccounts.filter((accountObj) => {\n            if (accountIdentifiers.username &&\n                accountIdentifiers.username.toLowerCase() !==\n                    accountObj.username.toLowerCase()) {\n                return false;\n            }\n            if (accountIdentifiers.homeAccountId &&\n                accountIdentifiers.homeAccountId.toLowerCase() !==\n                    accountObj.homeAccountId.toLowerCase()) {\n                return false;\n            }\n            if (accountIdentifiers.localAccountId &&\n                accountIdentifiers.localAccountId.toLowerCase() !==\n                    accountObj.localAccountId.toLowerCase()) {\n                return false;\n            }\n            return true;\n        });\n        return matchedAccounts[0] || null;\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=utilities.js.map"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACO,SAAS,qBAAqB,CAAC,QAAQ,EAAE,IAAI,EAAE;AACtD,IAAI,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;AACxC,QAAQ,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC9B,KAAK;AACL,IAAI,OAAO,QAAQ,CAAC;AACpB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,qBAAqB,CAAC,MAAM,EAAE,MAAM,EAAE;AACtD,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,EAAE;AACzC,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,IAAI,MAAM,eAAe,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC;AACxC,IAAI,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,KAAK;AACtC,QAAQ,MAAM,QAAQ,GAAG,eAAe,CAAC,KAAK,EAAE,CAAC;AACjD,QAAQ,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,EAAE;AACpC,YAAY,OAAO,KAAK,CAAC;AACzB,SAAS;AACT,QAAQ,QAAQ,QAAQ,CAAC,aAAa,KAAK,QAAQ,CAAC,aAAa;AACjE,YAAY,QAAQ,CAAC,cAAc,KAAK,QAAQ,CAAC,cAAc;AAC/D,YAAY,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,EAAE;AACrD,KAAK,CAAC,CAAC;AACP,CAAC;AACM,SAAS,uBAAuB,CAAC,WAAW,EAAE,kBAAkB,EAAE;AACzE,IAAI,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC;AAC9B,SAAS,kBAAkB,CAAC,aAAa;AACzC,YAAY,kBAAkB,CAAC,cAAc;AAC7C,YAAY,kBAAkB,CAAC,QAAQ,CAAC,EAAE;AAC1C,QAAQ,MAAM,eAAe,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,UAAU,KAAK;AACnE,YAAY,IAAI,kBAAkB,CAAC,QAAQ;AAC3C,gBAAgB,kBAAkB,CAAC,QAAQ,CAAC,WAAW,EAAE;AACzD,oBAAoB,UAAU,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE;AACvD,gBAAgB,OAAO,KAAK,CAAC;AAC7B,aAAa;AACb,YAAY,IAAI,kBAAkB,CAAC,aAAa;AAChD,gBAAgB,kBAAkB,CAAC,aAAa,CAAC,WAAW,EAAE;AAC9D,oBAAoB,UAAU,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE;AAC5D,gBAAgB,OAAO,KAAK,CAAC;AAC7B,aAAa;AACb,YAAY,IAAI,kBAAkB,CAAC,cAAc;AACjD,gBAAgB,kBAAkB,CAAC,cAAc,CAAC,WAAW,EAAE;AAC/D,oBAAoB,UAAU,CAAC,cAAc,CAAC,WAAW,EAAE,EAAE;AAC7D,gBAAgB,OAAO,KAAK,CAAC;AAC7B,aAAa;AACb,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO,eAAe,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;AAC1C,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;;;;"}