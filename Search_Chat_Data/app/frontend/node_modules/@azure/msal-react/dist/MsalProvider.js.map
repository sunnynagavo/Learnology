{"version":3,"file":"MsalProvider.js","sources":["../src/MsalProvider.tsx"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport React, { useEffect, useReducer, useMemo, } from \"react\";\nimport { EventMessageUtils, InteractionStatus, WrapperSKU, } from \"@azure/msal-browser\";\nimport { MsalContext } from \"./MsalContext\";\nimport { accountArraysAreEqual } from \"./utils/utilities\";\nimport { name as SKU, version } from \"./packageMetadata\";\nconst MsalProviderActionType = {\n    UNBLOCK_INPROGRESS: \"UNBLOCK_INPROGRESS\",\n    EVENT: \"EVENT\",\n};\n/**\n * Returns the next inProgress and accounts state based on event message\n * @param previousState\n * @param action\n */\nconst reducer = (previousState, action) => {\n    const { type, payload } = action;\n    let newInProgress = previousState.inProgress;\n    switch (type) {\n        case MsalProviderActionType.UNBLOCK_INPROGRESS:\n            if (previousState.inProgress === InteractionStatus.Startup) {\n                newInProgress = InteractionStatus.None;\n                payload.logger.info(\"MsalProvider - handleRedirectPromise resolved, setting inProgress to 'none'\");\n            }\n            break;\n        case MsalProviderActionType.EVENT:\n            const message = payload.message;\n            const status = EventMessageUtils.getInteractionStatusFromEvent(message, previousState.inProgress);\n            if (status) {\n                payload.logger.info(`MsalProvider - ${message.eventType} results in setting inProgress from ${previousState.inProgress} to ${status}`);\n                newInProgress = status;\n            }\n            break;\n        default:\n            throw new Error(`Unknown action type: ${type}`);\n    }\n    const currentAccounts = payload.instance.getAllAccounts();\n    if (newInProgress !== previousState.inProgress &&\n        !accountArraysAreEqual(currentAccounts, previousState.accounts)) {\n        // Both inProgress and accounts changed\n        return {\n            ...previousState,\n            inProgress: newInProgress,\n            accounts: currentAccounts,\n        };\n    }\n    else if (newInProgress !== previousState.inProgress) {\n        // Only only inProgress changed\n        return {\n            ...previousState,\n            inProgress: newInProgress,\n        };\n    }\n    else if (!accountArraysAreEqual(currentAccounts, previousState.accounts)) {\n        // Only accounts changed\n        return {\n            ...previousState,\n            accounts: currentAccounts,\n        };\n    }\n    else {\n        // Nothing changed\n        return previousState;\n    }\n};\n/**\n * MSAL context provider component. This must be rendered above any other components that use MSAL.\n */\nexport function MsalProvider({ instance, children, }) {\n    useEffect(() => {\n        instance.initializeWrapperLibrary(WrapperSKU.React, version);\n    }, [instance]);\n    // Create a logger instance for msal-react with the same options as PublicClientApplication\n    const logger = useMemo(() => {\n        return instance.getLogger().clone(SKU, version);\n    }, [instance]);\n    const [state, updateState] = useReducer(reducer, undefined, () => {\n        // Lazy initialization of the initial state\n        return {\n            inProgress: InteractionStatus.Startup,\n            accounts: instance.getAllAccounts(),\n        };\n    });\n    useEffect(() => {\n        const callbackId = instance.addEventCallback((message) => {\n            updateState({\n                payload: {\n                    instance,\n                    logger,\n                    message,\n                },\n                type: MsalProviderActionType.EVENT,\n            });\n        });\n        logger.verbose(`MsalProvider - Registered event callback with id: ${callbackId}`);\n        instance\n            .initialize()\n            .then(() => {\n            instance\n                .handleRedirectPromise()\n                .catch(() => {\n                // Errors should be handled by listening to the LOGIN_FAILURE event\n                return;\n            })\n                .finally(() => {\n                /*\n                 * If handleRedirectPromise returns a cached promise the necessary events may not be fired\n                 * This is a fallback to prevent inProgress from getting stuck in 'startup'\n                 */\n                updateState({\n                    payload: {\n                        instance,\n                        logger,\n                    },\n                    type: MsalProviderActionType.UNBLOCK_INPROGRESS,\n                });\n            });\n        })\n            .catch(() => {\n            // Errors should be handled by listening to the LOGIN_FAILURE event\n            return;\n        });\n        return () => {\n            // Remove callback when component unmounts or accounts change\n            if (callbackId) {\n                logger.verbose(`MsalProvider - Removing event callback ${callbackId}`);\n                instance.removeEventCallback(callbackId);\n            }\n        };\n    }, [instance, logger]);\n    const contextValue = {\n        instance,\n        inProgress: state.inProgress,\n        accounts: state.accounts,\n        logger,\n    };\n    return (React.createElement(MsalContext.Provider, { value: contextValue }, children));\n}\n//# sourceMappingURL=MsalProvider.js.map"],"names":["SKU","React"],"mappings":"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"}